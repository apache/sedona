Index.PACKAGES = {"org.apache.sedona.core.formatMapper.shapefileParser.shapes" : [{"name" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.CombineShapeReader", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.CombineShapeReader.close", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#close():Unit", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.CombineShapeReader.getProgress", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#getProgress():Float", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): PrimitiveShape", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.CombineShapeReader.getCurrentValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#getCurrentValue():org.apache.sedona.core.formatMapper.shapefileParser.shapes.PrimitiveShape", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): ShapeKey", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.CombineShapeReader.getCurrentKey", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#getCurrentKey():org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.CombineShapeReader.nextKeyValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "initialize", "tail" : "(split: InputSplit, context: TaskAttemptContext): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.CombineShapeReader.initialize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#initialize(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.CombineShapeReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/CombineShapeReader.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.close", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#close():Unit", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.getProgress", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#getProgress():Float", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): String", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.getCurrentValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#getCurrentValue():String", "kind" : "def"}, {"label" : "getCurrentFieldBytes", "tail" : "(): List[Array[Byte]]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.getCurrentFieldBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#getCurrentFieldBytes():java.util.List[Array[Byte]]", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): ShapeKey", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.getCurrentKey", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#getCurrentKey():org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.nextKeyValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "getFieldDescriptors", "tail" : "(): List[FieldDescriptor]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.getFieldDescriptors", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#getFieldDescriptors():java.util.List[org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor]", "kind" : "def"}, {"label" : "initialize", "tail" : "(stream: FSDataInputStream): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.initialize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#initialize(stream:org.apache.hadoop.fs.FSDataInputStream):Unit", "kind" : "def"}, {"label" : "initialize", "tail" : "(split: InputSplit, context: TaskAttemptContext): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader.initialize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#initialize(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.DbfFileReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/DbfFileReader.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.PrimitiveShape", "shortDescription" : "", "members_class" : [{"label" : "getShape", "tail" : "(geometryFactory: GeometryFactory): Geometry", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.PrimitiveShape.getShape", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#getShape(geometryFactory:org.locationtech.jts.geom.GeometryFactory):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "setAttributes", "tail" : "(attributes: String): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.PrimitiveShape.setAttributes", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#setAttributes(attributes:String):Unit", "kind" : "def"}, {"label" : "getAttributes", "tail" : "(): String", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.PrimitiveShape.getAttributes", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#getAttributes():String", "kind" : "def"}, {"label" : "getPrimitiveRecord", "tail" : "(): Array[Byte]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.PrimitiveShape.getPrimitiveRecord", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#getPrimitiveRecord():Array[Byte]", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.PrimitiveShape#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/PrimitiveShape.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader.close", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#close():Unit", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader.getProgress", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#getProgress():Float", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): ShpRecord", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader.getCurrentValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#getCurrentValue():org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShpRecord", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): ShapeKey", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader.getCurrentKey", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#getCurrentKey():org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader.nextKeyValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "initialize", "tail" : "(stream: FSDataInputStream): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader.initialize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#initialize(stream:org.apache.hadoop.fs.FSDataInputStream):Unit", "kind" : "def"}, {"label" : "initialize", "tail" : "(split: InputSplit, context: TaskAttemptContext): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader.initialize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#initialize(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeFileReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeFileReader.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeInputFormat", "shortDescription" : "", "members_class" : [{"label" : "getSplits", "tail" : "(job: JobContext): List[InputSplit]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeInputFormat.getSplits", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#getSplits(job:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(context: JobContext, file: Path): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeInputFormat.isSplitable", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,file:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "createRecordReader", "tail" : "(split: InputSplit, context: TaskAttemptContext): RecordReader[ShapeKey, PrimitiveShape]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeInputFormat.createRecordReader", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#createRecordReader(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordReader[org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey,org.apache.sedona.core.formatMapper.shapefileParser.shapes.PrimitiveShape]", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getFileBlockLocations", "tail" : "(arg0: FileSystem, arg1: FileStatus): Array[BlockLocation]", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.getFileBlockLocations", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#getFileBlockLocations(x$1:org.apache.hadoop.fs.FileSystem,x$2:org.apache.hadoop.fs.FileStatus):Array[org.apache.hadoop.fs.BlockLocation]", "kind" : "def"}, {"label" : "createPool", "tail" : "(arg0: <repeated...>[PathFilter]): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.createPool", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#createPool(x$1:org.apache.hadoop.fs.PathFilter*):Unit", "kind" : "def"}, {"label" : "createPool", "tail" : "(arg0: List[PathFilter]): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.createPool", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#createPool(x$1:java.util.List[org.apache.hadoop.fs.PathFilter]):Unit", "kind" : "def"}, {"label" : "setMinSplitSizeRack", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMinSplitSizeRack", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#setMinSplitSizeRack(x$1:Long):Unit", "kind" : "def"}, {"label" : "setMinSplitSizeNode", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMinSplitSizeNode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#setMinSplitSizeNode(x$1:Long):Unit", "kind" : "def"}, {"label" : "setMaxSplitSize", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMaxSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#setMaxSplitSize(x$1:Long):Unit", "kind" : "def"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeInputFormat.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey", "shortDescription" : "", "members_class" : [{"label" : "setIndex", "tail" : "(_index: Long): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey.setIndex", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#setIndex(_index:Long):Unit", "kind" : "def"}, {"label" : "getIndex", "tail" : "(): Long", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey.getIndex", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#getIndex():Long", "kind" : "def"}, {"label" : "write", "tail" : "(dataOutput: DataOutput): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey.write", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#write(dataOutput:java.io.DataOutput):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShapeKey#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShapeKey.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShpRecord", "shortDescription" : "", "members_class" : [{"label" : "getType", "tail" : "(): ShapeType", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShpRecord.getType", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#getType():org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeType", "kind" : "def"}, {"label" : "getTypeID", "tail" : "(): Int", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShpRecord.getTypeID", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#getTypeID():Int", "kind" : "def"}, {"label" : "getBytes", "tail" : "(): BytesWritable", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShpRecord.getBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#getBytes():org.apache.hadoop.io.BytesWritable", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShpRecord#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShpRecord.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShxFileReader", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShxFileReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/shapes\/ShxFileReader.html", "kind" : "class"}], "org.apache.sedona.core.spatialPartitioning.quadtree" : [{"name" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree", "shortDescription" : "The ExtendedQuadTree class uses a modified quad-tree approach for partitioning spatial data, asdescribed in \"Simba: Efficient In-Memory Spatial Analytics\".", "members_class" : [{"label" : "getQuadTree", "tail" : "(): StandardQuadTree[_]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.getQuadTree", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#getQuadTree():org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]", "kind" : "def"}, {"label" : "build", "tail" : "(neighborSampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.build", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#build(neighborSampleNumber:Int):Unit", "kind" : "def"}, {"label" : "fetchLeafZones", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.fetchLeafZones", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#fetchLeafZones():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getKeys", "tail" : "(geometry: Geometry): Set[Integer]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.getKeys", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#getKeys(geometry:org.locationtech.jts.geom.Geometry):java.util.Set[Integer]", "kind" : "def"}, {"label" : "placeObject", "tail" : "(geometry: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#placeObject(geometry:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"label" : "insert", "tail" : "(sample: Envelope): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.insert", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#insert(sample:org.locationtech.jts.geom.Envelope):Unit", "kind" : "def"}, {"label" : "getPartitionNum", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.getPartitionNum", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#getPartitionNum():Int", "kind" : "def"}, {"label" : "getBoundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.getBoundary", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#getBoundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree#<init>", "error" : "unsupported entity"}, {"label" : "getSpatialExpandedBoundaryIndex", "tail" : "(): STRtree", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.getSpatialExpandedBoundaryIndex", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#getSpatialExpandedBoundaryIndex():org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "getExpandedBoundaries", "tail" : "(): HashMap[Integer, List[Envelope]]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.ExtendedQuadTree.getExpandedBoundaries", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#getExpandedBoundaries():java.util.HashMap[Integer,java.util.List[org.locationtech.jts.geom.Envelope]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/ExtendedQuadTree.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadNode", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadNode.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadNode.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle", "shortDescription" : "", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#toString():String", "kind" : "def"}, {"label" : "getEnvelope", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle.getEnvelope", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#getEnvelope():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "getUniqueId", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle.getUniqueId", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#getUniqueId():Int", "kind" : "def"}, {"label" : "contains", "tail" : "(r: QuadRectangle): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle.contains", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#contains(r:org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(x: Double, y: Double): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle.contains", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#contains(x:Double,y:Double):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/QuadRectangle.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree", "shortDescription" : "", "members_class" : [{"label" : "fetchLeafZones", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.fetchLeafZones", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#fetchLeafZones():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getKeys", "tail" : "(geometry: Geometry): Set[Integer]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.getKeys", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#getKeys(geometry:org.locationtech.jts.geom.Geometry):java.util.Set[Integer]", "kind" : "def"}, {"label" : "placeObject", "tail" : "(geometry: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#placeObject(geometry:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"label" : "assignPartitionLineage", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.assignPartitionLineage", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#assignPartitionLineage():Unit", "kind" : "def"}, {"label" : "assignPartitionIds", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.assignPartitionIds", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#assignPartitionIds():Unit", "kind" : "def"}, {"label" : "findZones", "tail" : "(r: QuadRectangle): List[QuadRectangle]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.findZones", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#findZones(r:org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle):java.util.List[org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle]", "kind" : "def"}, {"label" : "getParentZone", "tail" : "(x: Int, y: Int, minLevel: Int): QuadRectangle", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.getParentZone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#getParentZone(x:Int,y:Int,minLevel:Int):org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle", "kind" : "def"}, {"label" : "getZone", "tail" : "(x: Int, y: Int): QuadRectangle", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.getZone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#getZone(x:Int,y:Int):org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle", "kind" : "def"}, {"label" : "getTotalNumLeafNode", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.getTotalNumLeafNode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#getTotalNumLeafNode():Int", "kind" : "def"}, {"label" : "getAllZones", "tail" : "(): List[QuadRectangle]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.getAllZones", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#getAllZones():java.util.List[org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle]", "kind" : "def"}, {"label" : "isLeaf", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.isLeaf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#isLeaf():Boolean", "kind" : "def"}, {"label" : "getElements", "tail" : "(r: QuadRectangle): List[T]", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.getElements", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#getElements(r:org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle):java.util.List[T]", "kind" : "def"}, {"label" : "dropElements", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.dropElements", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#dropElements():Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(r: QuadRectangle, element: T): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.insert", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#insert(r:org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle,element:T):Unit", "kind" : "def"}, {"label" : "forceGrowUp", "tail" : "(minLevel: Int): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.forceGrowUp", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#forceGrowUp(minLevel:Int):Unit", "kind" : "def"}, {"label" : "getZone", "tail" : "(): QuadRectangle", "member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree.getZone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#getZone():org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/quadtree\/StandardQuadTree.html", "kind" : "class"}], "org.apache.sedona.core" : [], "org.apache.sedona.sql.datasources.osmpbf.iterators" : [{"name" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobData", "shortDescription" : "", "members_class" : [{"label" : "getBlob", "tail" : "(): Blob", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobData.getBlob", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#getBlob():org.apache.sedona.sql.datasources.osmpbf.build.Fileformat.Blob", "kind" : "def"}, {"label" : "getHeader", "tail" : "(): BlobHeader", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobData.getHeader", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#getHeader():org.apache.sedona.sql.datasources.osmpbf.build.Fileformat.BlobHeader", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobData#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobData.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobIterator", "shortDescription" : "", "members_class" : [{"label" : "nextEntity", "tail" : "(): Unit", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobIterator.nextEntity", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#nextEntity():Unit", "kind" : "def"}, {"label" : "extractRelationPrimitiveGroup", "tail" : "(): OSMEntity", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobIterator.extractRelationPrimitiveGroup", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#extractRelationPrimitiveGroup():org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity", "kind" : "def"}, {"label" : "extractWayPrimitiveGroup", "tail" : "(): OSMEntity", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobIterator.extractWayPrimitiveGroup", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#extractWayPrimitiveGroup():org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity", "kind" : "def"}, {"label" : "extractDenseNodePrimitiveGroup", "tail" : "(): OSMEntity", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobIterator.extractDenseNodePrimitiveGroup", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#extractDenseNodePrimitiveGroup():org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity", "kind" : "def"}, {"label" : "next", "tail" : "(): OSMEntity", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobIterator.next", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#next():org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobIterator.hasNext", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#hasNext():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.BlobIterator#<init>", "error" : "unsupported entity"}, {"label" : "forEachRemaining", "tail" : "(arg0: Consumer[_ >: OSMEntity]): Unit", "member" : "java.util.Iterator.forEachRemaining", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#forEachRemaining(x$1:java.util.function.Consumer[_>:E]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "java.util.Iterator.remove", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#remove():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/BlobIterator.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PbfIterator", "shortDescription" : "", "members_class" : [{"label" : "next", "tail" : "(): OSMEntity", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PbfIterator.next", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#next():org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PbfIterator.hasNext", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#hasNext():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PbfIterator#<init>", "error" : "unsupported entity"}, {"label" : "forEachRemaining", "tail" : "(arg0: Consumer[_ >: OSMEntity]): Unit", "member" : "java.util.Iterator.forEachRemaining", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#forEachRemaining(x$1:java.util.function.Consumer[_>:E]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "java.util.Iterator.remove", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#remove():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PbfIterator.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PrimitiveGroupIterator", "shortDescription" : "", "members_class" : [{"label" : "readNextBlockLength", "tail" : "(): Unit", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PrimitiveGroupIterator.readNextBlockLength", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#readNextBlockLength():Unit", "kind" : "def"}, {"label" : "next", "tail" : "(): BlobData", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PrimitiveGroupIterator.next", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#next():org.apache.sedona.sql.datasources.osmpbf.iterators.BlobData", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PrimitiveGroupIterator.hasNext", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#hasNext():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.iterators.PrimitiveGroupIterator#<init>", "error" : "unsupported entity"}, {"label" : "forEachRemaining", "tail" : "(arg0: Consumer[_ >: BlobData]): Unit", "member" : "java.util.Iterator.forEachRemaining", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#forEachRemaining(x$1:java.util.function.Consumer[_>:E]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "java.util.Iterator.remove", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#remove():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/iterators\/PrimitiveGroupIterator.html", "kind" : "class"}], "org.apache.sedona.python.wrapper" : [{"name" : "org.apache.sedona.python.wrapper.SerializationException", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.sedona.python.wrapper.SerializationException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/python\/wrapper\/SerializationException.html", "kind" : "case class"}], "org.apache.sedona.sql.datasources.spider" : [{"name" : "org.apache.sedona.sql.datasources.spider.AffineTransform", "shortDescription" : "Represents an affine transformation matrix.", "members_case class" : [{"label" : "transform", "tail" : "(box: Envelope): AffineTransform", "member" : "org.apache.sedona.sql.datasources.spider.AffineTransform.transform", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#transform(box:org.locationtech.jts.geom.Envelope):org.apache.sedona.sql.datasources.spider.AffineTransform", "kind" : "def"}, {"label" : "toJTS", "tail" : "(): Option[AffineTransformation]", "member" : "org.apache.sedona.sql.datasources.spider.AffineTransform.toJTS", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#toJTS:Option[org.locationtech.jts.geom.util.AffineTransformation]", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.spider.AffineTransform#<init>", "error" : "unsupported entity"}, {"label" : "skewY", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.spider.AffineTransform.skewY", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#skewY:Double", "kind" : "val"}, {"label" : "skewX", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.spider.AffineTransform.skewX", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#skewX:Double", "kind" : "val"}, {"label" : "scaleY", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.spider.AffineTransform.scaleY", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#scaleY:Double", "kind" : "val"}, {"label" : "scaleX", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.spider.AffineTransform.scaleX", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#scaleX:Double", "kind" : "val"}, {"label" : "translateY", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.spider.AffineTransform.translateY", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#translateY:Double", "kind" : "val"}, {"label" : "translateX", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.spider.AffineTransform.translateX", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#translateX:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/spider\/AffineTransform.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.spider.SpiderDataSource", "shortDescription" : "DataSource for generating random geometric data.", "members_class" : [{"label" : "getTable", "tail" : "(schema: StructType, partitioning: Array[Transform], properties: Map[String, String]): Table", "member" : "org.apache.sedona.sql.datasources.spider.SpiderDataSource.getTable", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#getTable(schema:org.apache.spark.sql.types.StructType,partitioning:Array[org.apache.spark.sql.connector.expressions.Transform],properties:java.util.Map[String,String]):org.apache.spark.sql.connector.catalog.Table", "kind" : "def"}, {"label" : "inferSchema", "tail" : "(options: CaseInsensitiveStringMap): StructType", "member" : "org.apache.sedona.sql.datasources.spider.SpiderDataSource.inferSchema", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#inferSchema(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "shortName", "tail" : "(): String", "member" : "org.apache.sedona.sql.datasources.spider.SpiderDataSource.shortName", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#shortName():String", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.spider.SpiderDataSource#<init>", "error" : "unsupported entity"}, {"label" : "supportsExternalMetadata", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.connector.catalog.TableProvider.supportsExternalMetadata", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#supportsExternalMetadata():Boolean", "kind" : "def"}, {"label" : "inferPartitioning", "tail" : "(arg0: CaseInsensitiveStringMap): Array[Transform]", "member" : "org.apache.spark.sql.connector.catalog.TableProvider.inferPartitioning", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#inferPartitioning(x$1:org.apache.spark.sql.util.CaseInsensitiveStringMap):Array[org.apache.spark.sql.connector.expressions.Transform]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderDataSource.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.spider.SpiderPartition", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.sedona.sql.datasources.spider.SpiderPartition#<init>", "error" : "unsupported entity"}, {"label" : "opts", "tail" : ": Map[String, String]", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartition.opts", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#opts:java.util.Map[String,String]", "kind" : "val"}, {"label" : "transform", "tail" : ": AffineTransform", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartition.transform", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#transform:org.apache.sedona.sql.datasources.spider.AffineTransform", "kind" : "val"}, {"label" : "distribution", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartition.distribution", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#distribution:String", "kind" : "val"}, {"label" : "seed", "tail" : ": Long", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartition.seed", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#seed:Long", "kind" : "val"}, {"label" : "numRows", "tail" : ": Long", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartition.numRows", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#numRows:Long", "kind" : "val"}, {"label" : "startIndex", "tail" : ": Long", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartition.startIndex", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#startIndex:Long", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartition.index", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#index:Int", "kind" : "val"}, {"label" : "preferredLocations", "tail" : "(): Array[String]", "member" : "org.apache.spark.sql.connector.read.InputPartition.preferredLocations", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#preferredLocations():Array[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartition.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.spider.SpiderPartitionReader", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartitionReader.close", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#close():Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): InternalRow", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartitionReader.get", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#get():org.apache.spark.sql.catalyst.InternalRow", "kind" : "def"}, {"label" : "next", "tail" : "(): Boolean", "member" : "org.apache.sedona.sql.datasources.spider.SpiderPartitionReader.next", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#next():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.spider.SpiderPartitionReader#<init>", "error" : "unsupported entity"}, {"label" : "currentMetricsValues", "tail" : "(): Array[CustomTaskMetric]", "member" : "org.apache.spark.sql.connector.read.PartitionReader.currentMetricsValues", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#currentMetricsValues():Array[org.apache.spark.sql.connector.metric.CustomTaskMetric]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderPartitionReader.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.spider.SpiderTable", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html", "members_class" : [{"label" : "newScanBuilder", "tail" : "(options: CaseInsensitiveStringMap): ScanBuilder", "member" : "org.apache.sedona.sql.datasources.spider.SpiderTable.newScanBuilder", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#newScanBuilder(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.connector.read.ScanBuilder", "kind" : "def"}, {"label" : "capabilities", "tail" : "(): Set[TableCapability]", "member" : "org.apache.sedona.sql.datasources.spider.SpiderTable.capabilities", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#capabilities():java.util.Set[org.apache.spark.sql.connector.catalog.TableCapability]", "kind" : "def"}, {"label" : "schema", "tail" : "(): StructType", "member" : "org.apache.sedona.sql.datasources.spider.SpiderTable.schema", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#schema():org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "org.apache.sedona.sql.datasources.spider.SpiderTable.name", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#name():String", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.spider.SpiderTable#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : "(): Map[String, String]", "member" : "org.apache.spark.sql.connector.catalog.Table.properties", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#properties():java.util.Map[String,String]", "kind" : "def"}, {"label" : "partitioning", "tail" : "(): Array[Transform]", "member" : "org.apache.spark.sql.connector.catalog.Table.partitioning", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#partitioning():Array[org.apache.spark.sql.connector.expressions.Transform]", "kind" : "def"}, {"label" : "columns", "tail" : "(): Array[Column]", "member" : "org.apache.spark.sql.connector.catalog.Table.columns", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#columns():Array[org.apache.spark.sql.connector.catalog.Column]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "SCHEMA", "tail" : ": StructType", "member" : "org.apache.sedona.sql.datasources.spider.SpiderTable.SCHEMA", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#SCHEMA:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/spider\/SpiderTable.html", "kind" : "class"}], "org.apache.spark.sql.sedona_sql.plans.logical" : [{"name" : "org.apache.spark.sql.sedona_sql.plans.logical.EvalPhysicalFunction", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildInternal", "tail" : "(newChild: LogicalPlan): LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.plans.logical.EvalPhysicalFunction.withNewChildInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#withNewChildInternal(newChild:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.sedona_sql.plans.logical.EvalPhysicalFunction.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.plans.logical.EvalPhysicalFunction.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.plans.logical.EvalPhysicalFunction#<init>", "error" : "unsupported entity"}, {"label" : "child", "tail" : ": LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.plans.logical.EvalPhysicalFunction.child", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#child:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "val"}, {"label" : "resultAttrs", "tail" : ": Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.plans.logical.EvalPhysicalFunction.resultAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resultAttrs:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "val"}, {"label" : "function", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.plans.logical.EvalPhysicalFunction.function", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#function:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "validConstraints", "tail" : ": ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.UnaryNode.validConstraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#validConstraints:org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "lazy val"}, {"label" : "getAllValidConstraints", "tail" : "(projectList: Seq[NamedExpression]): ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.UnaryNode.getAllValidConstraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#getAllValidConstraints(projectList:Seq[org.apache.spark.sql.catalyst.expressions.NamedExpression]):org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "final def"}, {"label" : "mapChildren", "tail" : "(f: (LogicalPlan) â‡’ LogicalPlan): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : ": Seq[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#children:Seq[T]", "kind" : "final lazy val"}, {"label" : "sameOutput", "tail" : "(other: LogicalPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.sameOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#sameOutput(other:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Boolean", "kind" : "def"}, {"label" : "refresh", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.refresh", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#refresh():Unit", "kind" : "def"}, {"label" : "resolveQuoted", "tail" : "(name: String, resolver: Resolver): Option[NamedExpression]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveQuoted", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveQuoted(name:String,resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Option[org.apache.spark.sql.catalyst.expressions.NamedExpression]", "kind" : "def"}, {"label" : "resolve", "tail" : "(nameParts: Seq[String], resolver: Resolver): Option[NamedExpression]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolve(nameParts:Seq[String],resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Option[org.apache.spark.sql.catalyst.expressions.NamedExpression]", "kind" : "def"}, {"label" : "resolveChildren", "tail" : "(nameParts: Seq[String], resolver: Resolver): Option[NamedExpression]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveChildren(nameParts:Seq[String],resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Option[org.apache.spark.sql.catalyst.expressions.NamedExpression]", "kind" : "def"}, {"label" : "resolve", "tail" : "(schema: StructType, resolver: Resolver): Seq[Attribute]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolve(schema:org.apache.spark.sql.types.StructType,resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#statePrefix:String", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "maxRowsPerPartition", "tail" : "(): Option[Long]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.maxRowsPerPartition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#maxRowsPerPartition:Option[Long]", "kind" : "def"}, {"label" : "maxRows", "tail" : "(): Option[Long]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.maxRows", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#maxRows:Option[Long]", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "isStreaming", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.isStreaming", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#isStreaming:Boolean", "kind" : "def"}, {"label" : "metadataOutput", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.metadataOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#metadataOutput:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#logName:String", "kind" : "def"}, {"label" : "constraints", "tail" : ": ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.QueryPlanConstraints.constraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#constraints:org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "lazy val"}, {"label" : "constructIsNotNullConstraints", "tail" : "(constraints: ExpressionSet, output: Seq[Attribute]): ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.ConstraintHelper.constructIsNotNullConstraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#constructIsNotNullConstraints(constraints:org.apache.spark.sql.catalyst.expressions.ExpressionSet,output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]):org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "def"}, {"label" : "inferAdditionalConstraints", "tail" : "(constraints: ExpressionSet): ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.ConstraintHelper.inferAdditionalConstraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#inferAdditionalConstraints(constraints:org.apache.spark.sql.catalyst.expressions.ExpressionSet):org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "def"}, {"label" : "distinctKeys", "tail" : ": Set[ExpressionSet]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlanDistinctKeys.distinctKeys", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#distinctKeys:Set[org.apache.spark.sql.catalyst.expressions.ExpressionSet]", "kind" : "lazy val"}, {"label" : "invalidateStatsCache", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.logical.statsEstimation.LogicalPlanStats.invalidateStatsCache", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#invalidateStatsCache():Unit", "kind" : "final def"}, {"label" : "statsCache", "tail" : ": Option[Statistics]", "member" : "org.apache.spark.sql.catalyst.plans.logical.statsEstimation.LogicalPlanStats.statsCache", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#statsCache:Option[org.apache.spark.sql.catalyst.plans.logical.Statistics]", "kind" : "val"}, {"label" : "stats", "tail" : "(): Statistics", "member" : "org.apache.spark.sql.catalyst.plans.logical.statsEstimation.LogicalPlanStats.stats", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#stats:org.apache.spark.sql.catalyst.plans.logical.Statistics", "kind" : "def"}, {"label" : "clone", "tail" : "(): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#clone():org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):AnalysisHelper.this.type", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "assertNotAnalysisRule", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.assertNotAnalysisRule", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#assertNotAnalysisRule():Unit", "kind" : "def"}, {"label" : "resolveExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveExpressions", "tail" : "(r: PartialFunction[Expression, Expression]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveExpressions(r:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: LogicalPlan, attrMap: AttributeMap[Attribute]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#updateOuterReferencesInSubquery(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[LogicalPlan, (LogicalPlan, Seq[(Attribute, Attribute)])], skipCond: (LogicalPlan) â‡’ Boolean, canGetOutput: (LogicalPlan) â‡’ Boolean): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformUpWithNewOutput(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,(org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan=>Boolean,canGetOutput:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan=>Boolean):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsUpWithNewOutput", "tail" : "(rule: PartialFunction[LogicalPlan, (LogicalPlan, Seq[(Attribute, Attribute)])]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveOperatorsUpWithNewOutput(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,(org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveOperatorsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsDown", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveOperatorsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveOperatorsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsUp", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveOperatorsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveOperatorsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperators", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperators", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#resolveOperators(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "analyzed", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.analyzed", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#analyzed:Boolean", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: LogicalPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[LogicalPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunction.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.catalyst.SQLConfHelper.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#toString():String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#nodeName:String", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, Seq[LogicalPlan]]): Stream[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[LogicalPlan, Seq[LogicalPlan]]): Stream[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (LogicalPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(LogicalPlan, LogicalPlan), LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[LogicalPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[LogicalPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (LogicalPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (LogicalPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (LogicalPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (LogicalPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (LogicalPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (LogicalPlan) â‡’ Boolean): Option[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: LogicalPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/plans\/logical\/EvalPhysicalFunction.html", "kind" : "case class"}], "org.apache.sedona.viz.core" : [{"name" : "org.apache.sedona.viz.core.BigBufferedImage", "shortDescription" : "The Class BigBufferedImage.", "members_class" : [{"label" : "dispose", "tail" : "(): Unit", "member" : "org.apache.sedona.viz.core.BigBufferedImage.dispose", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#dispose():Unit", "kind" : "def"}, {"label" : "getTransparency", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getTransparency", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getTransparency():Int", "kind" : "def"}, {"label" : "releaseWritableTile", "tail" : "(arg0: Int, arg1: Int): Unit", "member" : "java.awt.image.BufferedImage.releaseWritableTile", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#releaseWritableTile(x$1:Int,x$2:Int):Unit", "kind" : "def"}, {"label" : "getWritableTile", "tail" : "(arg0: Int, arg1: Int): WritableRaster", "member" : "java.awt.image.BufferedImage.getWritableTile", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getWritableTile(x$1:Int,x$2:Int):java.awt.image.WritableRaster", "kind" : "def"}, {"label" : "hasTileWriters", "tail" : "(): Boolean", "member" : "java.awt.image.BufferedImage.hasTileWriters", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#hasTileWriters():Boolean", "kind" : "def"}, {"label" : "getWritableTileIndices", "tail" : "(): Array[Point]", "member" : "java.awt.image.BufferedImage.getWritableTileIndices", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getWritableTileIndices():Array[java.awt.Point]", "kind" : "def"}, {"label" : "isTileWritable", "tail" : "(arg0: Int, arg1: Int): Boolean", "member" : "java.awt.image.BufferedImage.isTileWritable", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#isTileWritable(x$1:Int,x$2:Int):Boolean", "kind" : "def"}, {"label" : "removeTileObserver", "tail" : "(arg0: TileObserver): Unit", "member" : "java.awt.image.BufferedImage.removeTileObserver", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#removeTileObserver(x$1:java.awt.image.TileObserver):Unit", "kind" : "def"}, {"label" : "addTileObserver", "tail" : "(arg0: TileObserver): Unit", "member" : "java.awt.image.BufferedImage.addTileObserver", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#addTileObserver(x$1:java.awt.image.TileObserver):Unit", "kind" : "def"}, {"label" : "setData", "tail" : "(arg0: Raster): Unit", "member" : "java.awt.image.BufferedImage.setData", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#setData(x$1:java.awt.image.Raster):Unit", "kind" : "def"}, {"label" : "copyData", "tail" : "(arg0: WritableRaster): WritableRaster", "member" : "java.awt.image.BufferedImage.copyData", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#copyData(x$1:java.awt.image.WritableRaster):java.awt.image.WritableRaster", "kind" : "def"}, {"label" : "getData", "tail" : "(arg0: Rectangle): Raster", "member" : "java.awt.image.BufferedImage.getData", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getData(x$1:java.awt.Rectangle):java.awt.image.Raster", "kind" : "def"}, {"label" : "getData", "tail" : "(): Raster", "member" : "java.awt.image.BufferedImage.getData", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getData():java.awt.image.Raster", "kind" : "def"}, {"label" : "getTile", "tail" : "(arg0: Int, arg1: Int): Raster", "member" : "java.awt.image.BufferedImage.getTile", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getTile(x$1:Int,x$2:Int):java.awt.image.Raster", "kind" : "def"}, {"label" : "getTileGridYOffset", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getTileGridYOffset", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getTileGridYOffset():Int", "kind" : "def"}, {"label" : "getTileGridXOffset", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getTileGridXOffset", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getTileGridXOffset():Int", "kind" : "def"}, {"label" : "getTileHeight", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getTileHeight", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getTileHeight():Int", "kind" : "def"}, {"label" : "getTileWidth", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getTileWidth", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getTileWidth():Int", "kind" : "def"}, {"label" : "getMinTileY", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getMinTileY", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getMinTileY():Int", "kind" : "def"}, {"label" : "getMinTileX", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getMinTileX", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getMinTileX():Int", "kind" : "def"}, {"label" : "getNumYTiles", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getNumYTiles", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getNumYTiles():Int", "kind" : "def"}, {"label" : "getNumXTiles", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getNumXTiles", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getNumXTiles():Int", "kind" : "def"}, {"label" : "getSampleModel", "tail" : "(): SampleModel", "member" : "java.awt.image.BufferedImage.getSampleModel", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getSampleModel():java.awt.image.SampleModel", "kind" : "def"}, {"label" : "getMinY", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getMinY", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getMinY():Int", "kind" : "def"}, {"label" : "getMinX", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getMinX", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getMinX():Int", "kind" : "def"}, {"label" : "getPropertyNames", "tail" : "(): Array[String]", "member" : "java.awt.image.BufferedImage.getPropertyNames", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getPropertyNames():Array[String]", "kind" : "def"}, {"label" : "getSources", "tail" : "(): Vector[RenderedImage]", "member" : "java.awt.image.BufferedImage.getSources", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getSources():java.util.Vector[java.awt.image.RenderedImage]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.awt.image.BufferedImage.toString", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#toString():String", "kind" : "def"}, {"label" : "coerceData", "tail" : "(arg0: Boolean): Unit", "member" : "java.awt.image.BufferedImage.coerceData", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#coerceData(x$1:Boolean):Unit", "kind" : "def"}, {"label" : "isAlphaPremultiplied", "tail" : "(): Boolean", "member" : "java.awt.image.BufferedImage.isAlphaPremultiplied", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#isAlphaPremultiplied():Boolean", "kind" : "def"}, {"label" : "getSubimage", "tail" : "(arg0: Int, arg1: Int, arg2: Int, arg3: Int): BufferedImage", "member" : "java.awt.image.BufferedImage.getSubimage", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getSubimage(x$1:Int,x$2:Int,x$3:Int,x$4:Int):java.awt.image.BufferedImage", "kind" : "def"}, {"label" : "createGraphics", "tail" : "(): Graphics2D", "member" : "java.awt.image.BufferedImage.createGraphics", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#createGraphics():java.awt.Graphics2D", "kind" : "def"}, {"label" : "getGraphics", "tail" : "(): Graphics", "member" : "java.awt.image.BufferedImage.getGraphics", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getGraphics():java.awt.Graphics", "kind" : "def"}, {"label" : "getProperty", "tail" : "(arg0: String): AnyRef", "member" : "java.awt.image.BufferedImage.getProperty", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getProperty(x$1:String):Object", "kind" : "def"}, {"label" : "getProperty", "tail" : "(arg0: String, arg1: ImageObserver): AnyRef", "member" : "java.awt.image.BufferedImage.getProperty", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getProperty(x$1:String,x$2:java.awt.image.ImageObserver):Object", "kind" : "def"}, {"label" : "getSource", "tail" : "(): ImageProducer", "member" : "java.awt.image.BufferedImage.getSource", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getSource():java.awt.image.ImageProducer", "kind" : "def"}, {"label" : "getHeight", "tail" : "(arg0: ImageObserver): Int", "member" : "java.awt.image.BufferedImage.getHeight", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getHeight(x$1:java.awt.image.ImageObserver):Int", "kind" : "def"}, {"label" : "getWidth", "tail" : "(arg0: ImageObserver): Int", "member" : "java.awt.image.BufferedImage.getWidth", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getWidth(x$1:java.awt.image.ImageObserver):Int", "kind" : "def"}, {"label" : "getHeight", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getHeight", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getHeight():Int", "kind" : "def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getWidth", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getWidth():Int", "kind" : "def"}, {"label" : "setRGB", "tail" : "(arg0: Int, arg1: Int, arg2: Int, arg3: Int, arg4: Array[Int], arg5: Int, arg6: Int): Unit", "member" : "java.awt.image.BufferedImage.setRGB", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#setRGB(x$1:Int,x$2:Int,x$3:Int,x$4:Int,x$5:Array[Int],x$6:Int,x$7:Int):Unit", "kind" : "def"}, {"label" : "setRGB", "tail" : "(arg0: Int, arg1: Int, arg2: Int): Unit", "member" : "java.awt.image.BufferedImage.setRGB", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#setRGB(x$1:Int,x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "getRGB", "tail" : "(arg0: Int, arg1: Int, arg2: Int, arg3: Int, arg4: Array[Int], arg5: Int, arg6: Int): Array[Int]", "member" : "java.awt.image.BufferedImage.getRGB", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getRGB(x$1:Int,x$2:Int,x$3:Int,x$4:Int,x$5:Array[Int],x$6:Int,x$7:Int):Array[Int]", "kind" : "def"}, {"label" : "getRGB", "tail" : "(arg0: Int, arg1: Int): Int", "member" : "java.awt.image.BufferedImage.getRGB", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getRGB(x$1:Int,x$2:Int):Int", "kind" : "def"}, {"label" : "getAlphaRaster", "tail" : "(): WritableRaster", "member" : "java.awt.image.BufferedImage.getAlphaRaster", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getAlphaRaster():java.awt.image.WritableRaster", "kind" : "def"}, {"label" : "getRaster", "tail" : "(): WritableRaster", "member" : "java.awt.image.BufferedImage.getRaster", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getRaster():java.awt.image.WritableRaster", "kind" : "def"}, {"label" : "getColorModel", "tail" : "(): ColorModel", "member" : "java.awt.image.BufferedImage.getColorModel", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getColorModel():java.awt.image.ColorModel", "kind" : "def"}, {"label" : "getType", "tail" : "(): Int", "member" : "java.awt.image.BufferedImage.getType", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getType():Int", "kind" : "def"}, {"label" : "getAccelerationPriority", "tail" : "(): Float", "member" : "java.awt.Image.getAccelerationPriority", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getAccelerationPriority():Float", "kind" : "def"}, {"label" : "setAccelerationPriority", "tail" : "(arg0: Float): Unit", "member" : "java.awt.Image.setAccelerationPriority", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#setAccelerationPriority(x$1:Float):Unit", "kind" : "def"}, {"label" : "getCapabilities", "tail" : "(arg0: GraphicsConfiguration): ImageCapabilities", "member" : "java.awt.Image.getCapabilities", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getCapabilities(x$1:java.awt.GraphicsConfiguration):java.awt.ImageCapabilities", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "java.awt.Image.flush", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#flush():Unit", "kind" : "def"}, {"label" : "getScaledInstance", "tail" : "(arg0: Int, arg1: Int, arg2: Int): Image", "member" : "java.awt.Image.getScaledInstance", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getScaledInstance(x$1:Int,x$2:Int,x$3:Int):java.awt.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/BigBufferedImage.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.ColoringRule", "shortDescription" : "The Class ColoringRule.", "members_class" : [{"member" : "org.apache.sedona.viz.core.ColoringRule#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "EncodeToRGB", "tail" : "(normalizedCount: Double, globalParameter: GlobalParameter): Integer", "member" : "org.apache.sedona.viz.core.ColoringRule.EncodeToRGB", "link" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html#EncodeToRGB(normalizedCount:Double,globalParameter:org.apache.sedona.viz.core.GlobalParameter):Integer", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/viz\/core\/ColoringRule.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.GlobalParameter", "shortDescription" : "The Class GlobalParameter.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.viz.core.GlobalParameter.toString", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#toString():String", "kind" : "def"}, {"label" : "set", "tail" : "(key: String, value: String): Boolean", "member" : "org.apache.sedona.viz.core.GlobalParameter.set", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#set(key:String,value:String):Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(keyValuePair: String): Boolean", "member" : "org.apache.sedona.viz.core.GlobalParameter.set", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#set(keyValuePair:String):Boolean", "kind" : "def"}, {"label" : "setPhotoFilter", "tail" : "(photoFilter: PhotoFilter): Boolean", "member" : "org.apache.sedona.viz.core.GlobalParameter.setPhotoFilter", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#setPhotoFilter(photoFilter:org.apache.sedona.viz.core.PhotoFilter):Boolean", "kind" : "def"}, {"label" : "setColoringRule", "tail" : "(coloringRule: ColoringRule): Boolean", "member" : "org.apache.sedona.viz.core.GlobalParameter.setColoringRule", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#setColoringRule(coloringRule:org.apache.sedona.viz.core.ColoringRule):Boolean", "kind" : "def"}, {"label" : "setDatasetBoundary", "tail" : "(datasetBoundary: Envelope): Boolean", "member" : "org.apache.sedona.viz.core.GlobalParameter.setDatasetBoundary", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#setDatasetBoundary(datasetBoundary:org.locationtech.jts.geom.Envelope):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/GlobalParameter.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.ImageGenerator", "shortDescription" : "The Class ImageGenerator.", "members_class" : [{"label" : "deleteLocalFile", "tail" : "(originalOutputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.deleteLocalFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#deleteLocalFile(originalOutputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "deleteHadoopFile", "tail" : "(originalOutputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.deleteHadoopFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#deleteHadoopFile(originalOutputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveVectorImageAsLocalFile", "tail" : "(vectorImage: List[String], outputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveVectorImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveVectorImageAsLocalFile(vectorImage:java.util.List[String],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveVectorImageAsLocalFile", "tail" : "(distributedImage: JavaPairRDD[Integer, String], outputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveVectorImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveVectorImageAsLocalFile(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,String],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsS3File", "tail" : "(rasterImage: BufferedImage, regionName: String, accessKey: String, secretKey: String, bucketName: String, path: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsS3File", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveRasterImageAsS3File(rasterImage:java.awt.image.BufferedImage,regionName:String,accessKey:String,secretKey:String,bucketName:String,path:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsHadoopFile", "tail" : "(rasterImage: BufferedImage, originalOutputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsHadoopFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveRasterImageAsHadoopFile(rasterImage:java.awt.image.BufferedImage,originalOutputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsLocalFile", "tail" : "(rasterImage: BufferedImage, outputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveRasterImageAsLocalFile(rasterImage:java.awt.image.BufferedImage,outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsS3File", "tail" : "(distributedImage: JavaPairRDD[Integer, ImageSerializableWrapper], regionName: String, accessKey: String, secretKey: String, bucketName: String, path: String, imageType: ImageType, zoomLevel: Int, partitionOnX: Int, partitionOnY: Int): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsS3File", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveRasterImageAsS3File(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper],regionName:String,accessKey:String,secretKey:String,bucketName:String,path:String,imageType:org.apache.sedona.viz.utils.ImageType,zoomLevel:Int,partitionOnX:Int,partitionOnY:Int):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsHadoopFile", "tail" : "(distributedImage: JavaPairRDD[Integer, ImageSerializableWrapper], outputPath: String, imageType: ImageType, zoomLevel: Int, partitionOnX: Int, partitionOnY: Int): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsHadoopFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveRasterImageAsHadoopFile(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType,zoomLevel:Int,partitionOnX:Int,partitionOnY:Int):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsLocalFile", "tail" : "(distributedImage: JavaPairRDD[Integer, ImageSerializableWrapper], outputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveRasterImageAsLocalFile(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsLocalFile", "tail" : "(distributedImage: JavaPairRDD[Integer, ImageSerializableWrapper], outputPath: String, imageType: ImageType, zoomLevel: Int, partitionOnX: Int, partitionOnY: Int): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#SaveRasterImageAsLocalFile(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType,zoomLevel:Int,partitionOnX:Int,partitionOnY:Int):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.ImageGenerator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/ImageGenerator.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.ImageSerializableWrapper", "shortDescription" : "The Class ImageSerializableWrapper.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.viz.core.ImageSerializableWrapper.toString", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#toString():String", "kind" : "def"}, {"label" : "getImage", "tail" : "(): BufferedImage", "member" : "org.apache.sedona.viz.core.ImageSerializableWrapper.getImage", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#getImage():java.awt.image.BufferedImage", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.ImageSerializableWrapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/ImageSerializableWrapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.ImageStitcher", "shortDescription" : "The Class ImageStitcher.", "members_class" : [{"member" : "org.apache.sedona.viz.core.ImageStitcher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/ImageStitcher.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.PhotoFilter", "shortDescription" : "The Class PhotoFilter.", "members_class" : [{"label" : "getConvolutionMatrix", "tail" : "(): Array[Array[Double]]", "member" : "org.apache.sedona.viz.core.PhotoFilter.getConvolutionMatrix", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#getConvolutionMatrix():Array[Array[Double]]", "kind" : "def"}, {"label" : "getFilterRadius", "tail" : "(): Int", "member" : "org.apache.sedona.viz.core.PhotoFilter.getFilterRadius", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#getFilterRadius():Int", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.PhotoFilter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/PhotoFilter.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.RasterOverlayOperator", "shortDescription" : "The Class RasterOverlayOperator.", "members_class" : [{"label" : "JoinImage", "tail" : "(frontRasterImage: BufferedImage): Boolean", "member" : "org.apache.sedona.viz.core.RasterOverlayOperator.JoinImage", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#JoinImage(frontRasterImage:java.awt.image.BufferedImage):Boolean", "kind" : "def"}, {"label" : "JoinImage", "tail" : "(distributedFontImage: JavaPairRDD[Integer, ImageSerializableWrapper]): Boolean", "member" : "org.apache.sedona.viz.core.RasterOverlayOperator.JoinImage", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#JoinImage(distributedFontImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper]):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.RasterOverlayOperator#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.core.RasterOverlayOperator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/RasterOverlayOperator.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.VectorOverlayOperator", "shortDescription" : "The Class VectorOverlayOperator.", "members_class" : [{"label" : "JoinImage", "tail" : "(frontVectorImage: List[String]): Boolean", "member" : "org.apache.sedona.viz.core.VectorOverlayOperator.JoinImage", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#JoinImage(frontVectorImage:java.util.List[String]):Boolean", "kind" : "def"}, {"label" : "JoinImage", "tail" : "(distributedFontImage: JavaPairRDD[Integer, String]): Boolean", "member" : "org.apache.sedona.viz.core.VectorOverlayOperator.JoinImage", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#JoinImage(distributedFontImage:org.apache.spark.api.java.JavaPairRDD[Integer,String]):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.VectorOverlayOperator#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.core.VectorOverlayOperator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/VectorOverlayOperator.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.VisualizationOperator", "shortDescription" : "The Class VisualizationOperator.", "members_class" : [{"label" : "Rasterize", "tail" : "(sparkContext: JavaSparkContext, spatialPairRDD: JavaPairRDD[Polygon, Long], useSparkDefaultPartition: Boolean): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Rasterize", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#Rasterize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Polygon,Long],useSparkDefaultPartition:Boolean):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "Rasterize", "tail" : "(sparkContext: JavaSparkContext, spatialRDD: SpatialRDD, useSparkDefaultPartition: Boolean): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Rasterize", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#Rasterize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD,useSparkDefaultPartition:Boolean):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "EncodeToRGB", "tail" : "(normalizedCount: Int): Integer", "member" : "org.apache.sedona.viz.core.VisualizationOperator.EncodeToRGB", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#EncodeToRGB(normalizedCount:Int):Integer", "kind" : "def"}, {"label" : "EncodeToColor", "tail" : "(normalizedCount: Int): Color", "member" : "org.apache.sedona.viz.core.VisualizationOperator.EncodeToColor", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#EncodeToColor(normalizedCount:Int):java.awt.Color", "kind" : "def"}, {"label" : "CustomizeColor", "tail" : "(red: Int, green: Int, blue: Int, colorAlpha: Int, controlColorChannel: Color, useInverseRatioForControlColorChannel: Boolean): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.CustomizeColor", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#CustomizeColor(red:Int,green:Int,blue:Int,colorAlpha:Int,controlColorChannel:java.awt.Color,useInverseRatioForControlColorChannel:Boolean):Boolean", "kind" : "def"}, {"label" : "setMaxPixelCount", "tail" : "(maxPixelCount: Double): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.setMaxPixelCount", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#setMaxPixelCount(maxPixelCount:Double):Boolean", "kind" : "def"}, {"label" : "RenderImage", "tail" : "(sparkContext: JavaSparkContext): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.RenderImage", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#RenderImage(sparkContext:org.apache.spark.api.java.JavaSparkContext):Boolean", "kind" : "def"}, {"label" : "Colorize", "tail" : "(): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Colorize", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#Colorize():Boolean", "kind" : "def"}, {"label" : "ApplyPhotoFilter", "tail" : "(sparkContext: JavaSparkContext): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.ApplyPhotoFilter", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#ApplyPhotoFilter(sparkContext:org.apache.spark.api.java.JavaSparkContext):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "InitPhotoFilterWeightMatrix", "tail" : "(photoFilter: PhotoFilter): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.InitPhotoFilterWeightMatrix", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#InitPhotoFilterWeightMatrix(photoFilter:org.apache.sedona.viz.core.PhotoFilter):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.VisualizationOperator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/VisualizationOperator.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.VisualizationPartitioner", "shortDescription" : "The Class VisualizationPartitioner.", "members_class" : [{"label" : "assignPartitionID", "tail" : "(pixelDoubleTuple2: (Pixel, Double)): (Pixel, Double)", "member" : "org.apache.sedona.viz.core.VisualizationPartitioner.assignPartitionID", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#assignPartitionID(pixelDoubleTuple2:(org.apache.sedona.viz.utils.Pixel,Double)):(org.apache.sedona.viz.utils.Pixel,Double)", "kind" : "def"}, {"label" : "assignPartitionIDs", "tail" : "(pixelDoubleTuple2: (Pixel, Double), photoFilterRadius: Int): List[(Pixel, Double)]", "member" : "org.apache.sedona.viz.core.VisualizationPartitioner.assignPartitionIDs", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#assignPartitionIDs(pixelDoubleTuple2:(org.apache.sedona.viz.utils.Pixel,Double),photoFilterRadius:Int):java.util.List[(org.apache.sedona.viz.utils.Pixel,Double)]", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.sedona.viz.core.VisualizationPartitioner.numPartitions", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#numPartitions():Int", "kind" : "def"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.viz.core.VisualizationPartitioner.getPartition", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.VisualizationPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/VisualizationPartitioner.html", "kind" : "class"}], "org.apache.sedona.sql.datasources.geopackage.errors" : [{"name" : "org.apache.sedona.sql.datasources.geopackage.errors.GeopackageException", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.sql.datasources.geopackage.errors.GeopackageException#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.sql.datasources.geopackage.errors.GeopackageException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/errors\/GeopackageException.html", "kind" : "class"}], "org.apache.spark.sql.execution.datasource.stac" : [{"name" : "org.apache.spark.sql.execution.datasource.stac.TemporalFilter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.execution.datasource.stac.TemporalFilter.simpleString", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#simpleString:String", "kind" : "abstract def"}, {"label" : "evaluate", "tail" : "(columns: Map[String, LocalDateTime]): Boolean", "member" : "org.apache.spark.sql.execution.datasource.stac.TemporalFilter.evaluate", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html#evaluate(columns:Map[String,java.time.LocalDateTime]):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html", "members_object" : [{"label" : "EqualFilter", "tail" : "", "member" : "org.apache.spark.sql.execution.datasource.stac.TemporalFilter.EqualFilter", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#EqualFilterextendsTemporalFilterwithProductwithSerializable", "kind" : "case class"}, {"label" : "GreaterThanFilter", "tail" : "", "member" : "org.apache.spark.sql.execution.datasource.stac.TemporalFilter.GreaterThanFilter", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#GreaterThanFilterextendsTemporalFilterwithProductwithSerializable", "kind" : "case class"}, {"label" : "LessThanFilter", "tail" : "", "member" : "org.apache.spark.sql.execution.datasource.stac.TemporalFilter.LessThanFilter", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#LessThanFilterextendsTemporalFilterwithProductwithSerializable", "kind" : "case class"}, {"label" : "OrFilter", "tail" : "", "member" : "org.apache.spark.sql.execution.datasource.stac.TemporalFilter.OrFilter", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#OrFilterextendsTemporalFilterwithProductwithSerializable", "kind" : "case class"}, {"label" : "AndFilter", "tail" : "", "member" : "org.apache.spark.sql.execution.datasource.stac.TemporalFilter.AndFilter", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#AndFilterextendsTemporalFilterwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/apache\/spark\/sql\/execution\/datasource\/stac\/TemporalFilter.html", "kind" : "trait"}], "org.apache.sedona.core.formatMapper.shapefileParser.fieldname" : [{"name" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameInputFormat", "shortDescription" : "", "members_class" : [{"label" : "getSplits", "tail" : "(job: JobContext): List[InputSplit]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameInputFormat.getSplits", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#getSplits(job:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(context: JobContext, file: Path): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameInputFormat.isSplitable", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,file:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "createRecordReader", "tail" : "(inputSplit: InputSplit, taskAttemptContext: TaskAttemptContext): RecordReader[Long, String]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameInputFormat.createRecordReader", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#createRecordReader(inputSplit:org.apache.hadoop.mapreduce.InputSplit,taskAttemptContext:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordReader[Long,String]", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getFileBlockLocations", "tail" : "(arg0: FileSystem, arg1: FileStatus): Array[BlockLocation]", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.getFileBlockLocations", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#getFileBlockLocations(x$1:org.apache.hadoop.fs.FileSystem,x$2:org.apache.hadoop.fs.FileStatus):Array[org.apache.hadoop.fs.BlockLocation]", "kind" : "def"}, {"label" : "createPool", "tail" : "(arg0: <repeated...>[PathFilter]): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.createPool", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#createPool(x$1:org.apache.hadoop.fs.PathFilter*):Unit", "kind" : "def"}, {"label" : "createPool", "tail" : "(arg0: List[PathFilter]): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.createPool", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#createPool(x$1:java.util.List[org.apache.hadoop.fs.PathFilter]):Unit", "kind" : "def"}, {"label" : "setMinSplitSizeRack", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMinSplitSizeRack", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#setMinSplitSizeRack(x$1:Long):Unit", "kind" : "def"}, {"label" : "setMinSplitSizeNode", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMinSplitSizeNode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#setMinSplitSizeNode(x$1:Long):Unit", "kind" : "def"}, {"label" : "setMaxSplitSize", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMaxSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#setMaxSplitSize(x$1:Long):Unit", "kind" : "def"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameInputFormat.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameRecordReader", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameRecordReader.close", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#close():Unit", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameRecordReader.getProgress", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#getProgress():Float", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): String", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameRecordReader.getCurrentValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#getCurrentValue():String", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): Long", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameRecordReader.getCurrentKey", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#getCurrentKey():Long", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameRecordReader.nextKeyValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "initialize", "tail" : "(inputSplit: InputSplit, taskAttemptContext: TaskAttemptContext): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameRecordReader.initialize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#initialize(inputSplit:org.apache.hadoop.mapreduce.InputSplit,taskAttemptContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.fieldname.FieldnameRecordReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/fieldname\/FieldnameRecordReader.html", "kind" : "class"}], "org.apache.sedona.viz.utils" : [{"name" : "org.apache.sedona.viz.utils.ColorizeOption", "shortDescription" : "The Enum ColorizeOption.", "members_class" : [{"label" : "setTypeName", "tail" : "(typeName: String): Unit", "member" : "org.apache.sedona.viz.utils.ColorizeOption.setTypeName", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#setTypeName(typeName:String):Unit", "kind" : "def"}, {"label" : "getTypeName", "tail" : "(): String", "member" : "org.apache.sedona.viz.utils.ColorizeOption.getTypeName", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#getTypeName():String", "kind" : "def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[ColorizeOption]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: ColorizeOption): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/utils\/ColorizeOption.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.utils.ImageType", "shortDescription" : "The Enum ImageType.", "members_class" : [{"label" : "setTypeName", "tail" : "(typeName: String): Unit", "member" : "org.apache.sedona.viz.utils.ImageType.setTypeName", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#setTypeName(typeName:String):Unit", "kind" : "def"}, {"label" : "getTypeName", "tail" : "(): String", "member" : "org.apache.sedona.viz.utils.ImageType.getTypeName", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#getTypeName():String", "kind" : "def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[ImageType]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: ImageType): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/ImageType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/utils\/ImageType.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.utils.Pixel", "shortDescription" : "The Class Pixel.", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.sedona.viz.utils.Pixel.hashCode", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.viz.utils.Pixel.toString", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.apache.sedona.viz.utils.Pixel.equals", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "getResolutionY", "tail" : "(): Int", "member" : "org.apache.sedona.viz.utils.Pixel.getResolutionY", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getResolutionY():Int", "kind" : "def"}, {"label" : "getResolutionX", "tail" : "(): Int", "member" : "org.apache.sedona.viz.utils.Pixel.getResolutionX", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getResolutionX():Int", "kind" : "def"}, {"label" : "setCurrentPartitionId", "tail" : "(currentPartitionId: Int): Unit", "member" : "org.apache.sedona.viz.utils.Pixel.setCurrentPartitionId", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#setCurrentPartitionId(currentPartitionId:Int):Unit", "kind" : "def"}, {"label" : "getCurrentPartitionId", "tail" : "(): Int", "member" : "org.apache.sedona.viz.utils.Pixel.getCurrentPartitionId", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getCurrentPartitionId():Int", "kind" : "def"}, {"label" : "setDuplicate", "tail" : "(duplicate: Boolean): Unit", "member" : "org.apache.sedona.viz.utils.Pixel.setDuplicate", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#setDuplicate(duplicate:Boolean):Unit", "kind" : "def"}, {"label" : "isDuplicate", "tail" : "(): Boolean", "member" : "org.apache.sedona.viz.utils.Pixel.isDuplicate", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isDuplicate():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.viz.utils.Pixel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.utils.Pixel#<init>", "error" : "unsupported entity"}, {"label" : "getCoordinateSequence", "tail" : "(): CoordinateSequence", "member" : "org.locationtech.jts.geom.Point.getCoordinateSequence", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getCoordinateSequence():org.locationtech.jts.geom.CoordinateSequence", "kind" : "def"}, {"label" : "getTypeCode", "tail" : "(): Int", "member" : "org.locationtech.jts.geom.Point.getTypeCode", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getTypeCode():Int", "kind" : "def"}, {"label" : "compareToSameClass", "tail" : "(arg0: Any, arg1: CoordinateSequenceComparator): Int", "member" : "org.locationtech.jts.geom.Point.compareToSameClass", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#compareToSameClass(x$1:Any,x$2:org.locationtech.jts.geom.CoordinateSequenceComparator):Int", "kind" : "def"}, {"label" : "compareToSameClass", "tail" : "(arg0: Any): Int", "member" : "org.locationtech.jts.geom.Point.compareToSameClass", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#compareToSameClass(x$1:Any):Int", "kind" : "def"}, {"label" : "normalize", "tail" : "(): Unit", "member" : "org.locationtech.jts.geom.Point.normalize", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#normalize():Unit", "kind" : "def"}, {"label" : "reverseInternal", "tail" : "(): Point", "member" : "org.locationtech.jts.geom.Point.reverseInternal", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#reverseInternal():org.locationtech.jts.geom.Point", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Point", "member" : "org.locationtech.jts.geom.Point.reverse", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#reverse():org.locationtech.jts.geom.Point", "kind" : "def"}, {"label" : "copyInternal", "tail" : "(): Point", "member" : "org.locationtech.jts.geom.Point.copyInternal", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#copyInternal():org.locationtech.jts.geom.Point", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "org.locationtech.jts.geom.Point.clone", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#clone():Object", "kind" : "def"}, {"label" : "apply", "tail" : "(arg0: GeometryComponentFilter): Unit", "member" : "org.locationtech.jts.geom.Point.apply", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#apply(x$1:org.locationtech.jts.geom.GeometryComponentFilter):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(arg0: GeometryFilter): Unit", "member" : "org.locationtech.jts.geom.Point.apply", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#apply(x$1:org.locationtech.jts.geom.GeometryFilter):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(arg0: CoordinateSequenceFilter): Unit", "member" : "org.locationtech.jts.geom.Point.apply", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#apply(x$1:org.locationtech.jts.geom.CoordinateSequenceFilter):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(arg0: CoordinateFilter): Unit", "member" : "org.locationtech.jts.geom.Point.apply", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#apply(x$1:org.locationtech.jts.geom.CoordinateFilter):Unit", "kind" : "def"}, {"label" : "equalsExact", "tail" : "(arg0: Geometry, arg1: Double): Boolean", "member" : "org.locationtech.jts.geom.Point.equalsExact", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#equalsExact(x$1:org.locationtech.jts.geom.Geometry,x$2:Double):Boolean", "kind" : "def"}, {"label" : "computeEnvelopeInternal", "tail" : "(): Envelope", "member" : "org.locationtech.jts.geom.Point.computeEnvelopeInternal", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#computeEnvelopeInternal():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "getBoundary", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Point.getBoundary", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getBoundary():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "getGeometryType", "tail" : "(): String", "member" : "org.locationtech.jts.geom.Point.getGeometryType", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getGeometryType():String", "kind" : "def"}, {"label" : "getCoordinate", "tail" : "(): Coordinate", "member" : "org.locationtech.jts.geom.Point.getCoordinate", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getCoordinate():org.locationtech.jts.geom.Coordinate", "kind" : "def"}, {"label" : "getY", "tail" : "(): Double", "member" : "org.locationtech.jts.geom.Point.getY", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getY():Double", "kind" : "def"}, {"label" : "getX", "tail" : "(): Double", "member" : "org.locationtech.jts.geom.Point.getX", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getX():Double", "kind" : "def"}, {"label" : "getBoundaryDimension", "tail" : "(): Int", "member" : "org.locationtech.jts.geom.Point.getBoundaryDimension", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getBoundaryDimension():Int", "kind" : "def"}, {"label" : "getDimension", "tail" : "(): Int", "member" : "org.locationtech.jts.geom.Point.getDimension", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getDimension():Int", "kind" : "def"}, {"label" : "isSimple", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Point.isSimple", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isSimple():Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Point.isEmpty", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "getNumPoints", "tail" : "(): Int", "member" : "org.locationtech.jts.geom.Point.getNumPoints", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getNumPoints():Int", "kind" : "def"}, {"label" : "getCoordinates", "tail" : "(): Array[Coordinate]", "member" : "org.locationtech.jts.geom.Point.getCoordinates", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getCoordinates():Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "equal", "tail" : "(arg0: Coordinate, arg1: Coordinate, arg2: Double): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equal", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#equal(x$1:org.locationtech.jts.geom.Coordinate,x$2:org.locationtech.jts.geom.Coordinate,x$3:Double):Boolean", "kind" : "def"}, {"label" : "compare", "tail" : "(arg0: Collection[_], arg1: Collection[_]): Int", "member" : "org.locationtech.jts.geom.Geometry.compare", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#compare(x$1:java.util.Collection[_],x$2:java.util.Collection[_]):Int", "kind" : "def"}, {"label" : "isGeometryCollection", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isGeometryCollection", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isGeometryCollection():Boolean", "kind" : "def"}, {"label" : "isEquivalentClass", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isEquivalentClass", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isEquivalentClass(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "compareTo", "tail" : "(arg0: Any, arg1: CoordinateSequenceComparator): Int", "member" : "org.locationtech.jts.geom.Geometry.compareTo", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#compareTo(x$1:Any,x$2:org.locationtech.jts.geom.CoordinateSequenceComparator):Int", "kind" : "def"}, {"label" : "compareTo", "tail" : "(arg0: Any): Int", "member" : "org.locationtech.jts.geom.Geometry.compareTo", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#compareTo(x$1:Any):Int", "kind" : "def"}, {"label" : "norm", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.norm", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#norm():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "copy", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.copy", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#copy():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "equalsNorm", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equalsNorm", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#equalsNorm(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "equalsExact", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equalsExact", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#equalsExact(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "union", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.union", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#union():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "symDifference", "tail" : "(arg0: Geometry): Geometry", "member" : "org.locationtech.jts.geom.Geometry.symDifference", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#symDifference(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "difference", "tail" : "(arg0: Geometry): Geometry", "member" : "org.locationtech.jts.geom.Geometry.difference", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#difference(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "union", "tail" : "(arg0: Geometry): Geometry", "member" : "org.locationtech.jts.geom.Geometry.union", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#union(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "intersection", "tail" : "(arg0: Geometry): Geometry", "member" : "org.locationtech.jts.geom.Geometry.intersection", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#intersection(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "convexHull", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.convexHull", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#convexHull():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "buffer", "tail" : "(arg0: Double, arg1: Int, arg2: Int): Geometry", "member" : "org.locationtech.jts.geom.Geometry.buffer", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#buffer(x$1:Double,x$2:Int,x$3:Int):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "buffer", "tail" : "(arg0: Double, arg1: Int): Geometry", "member" : "org.locationtech.jts.geom.Geometry.buffer", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#buffer(x$1:Double,x$2:Int):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "buffer", "tail" : "(arg0: Double): Geometry", "member" : "org.locationtech.jts.geom.Geometry.buffer", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#buffer(x$1:Double):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "toText", "tail" : "(): String", "member" : "org.locationtech.jts.geom.Geometry.toText", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#toText():String", "kind" : "def"}, {"label" : "equalsTopo", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equalsTopo", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#equalsTopo(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equals", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#equals(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "relate", "tail" : "(arg0: Geometry): IntersectionMatrix", "member" : "org.locationtech.jts.geom.Geometry.relate", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#relate(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.IntersectionMatrix", "kind" : "def"}, {"label" : "relate", "tail" : "(arg0: Geometry, arg1: String): Boolean", "member" : "org.locationtech.jts.geom.Geometry.relate", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#relate(x$1:org.locationtech.jts.geom.Geometry,x$2:String):Boolean", "kind" : "def"}, {"label" : "coveredBy", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.coveredBy", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#coveredBy(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "covers", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.covers", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#covers(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "overlaps", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.overlaps", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#overlaps(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.contains", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#contains(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "within", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.within", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#within(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "crosses", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.crosses", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#crosses(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.intersects", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#intersects(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "touches", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.touches", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#touches(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "disjoint", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.disjoint", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#disjoint(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "geometryChangedAction", "tail" : "(): Unit", "member" : "org.locationtech.jts.geom.Geometry.geometryChangedAction", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#geometryChangedAction():Unit", "kind" : "def"}, {"label" : "geometryChanged", "tail" : "(): Unit", "member" : "org.locationtech.jts.geom.Geometry.geometryChanged", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#geometryChanged():Unit", "kind" : "def"}, {"label" : "getEnvelopeInternal", "tail" : "(): Envelope", "member" : "org.locationtech.jts.geom.Geometry.getEnvelopeInternal", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getEnvelopeInternal():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "getEnvelope", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.getEnvelope", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getEnvelope():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "hasDimension", "tail" : "(arg0: Int): Boolean", "member" : "org.locationtech.jts.geom.Geometry.hasDimension", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#hasDimension(x$1:Int):Boolean", "kind" : "def"}, {"label" : "getInteriorPoint", "tail" : "(): Point", "member" : "org.locationtech.jts.geom.Geometry.getInteriorPoint", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getInteriorPoint():org.locationtech.jts.geom.Point", "kind" : "def"}, {"label" : "getCentroid", "tail" : "(): Point", "member" : "org.locationtech.jts.geom.Geometry.getCentroid", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getCentroid():org.locationtech.jts.geom.Point", "kind" : "def"}, {"label" : "getLength", "tail" : "(): Double", "member" : "org.locationtech.jts.geom.Geometry.getLength", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getLength():Double", "kind" : "def"}, {"label" : "getArea", "tail" : "(): Double", "member" : "org.locationtech.jts.geom.Geometry.getArea", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getArea():Double", "kind" : "def"}, {"label" : "isRectangle", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isRectangle", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isRectangle():Boolean", "kind" : "def"}, {"label" : "isWithinDistance", "tail" : "(arg0: Geometry, arg1: Double): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isWithinDistance", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isWithinDistance(x$1:org.locationtech.jts.geom.Geometry,x$2:Double):Boolean", "kind" : "def"}, {"label" : "distance", "tail" : "(arg0: Geometry): Double", "member" : "org.locationtech.jts.geom.Geometry.distance", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#distance(x$1:org.locationtech.jts.geom.Geometry):Double", "kind" : "def"}, {"label" : "isValid", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isValid", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isValid():Boolean", "kind" : "def"}, {"label" : "getPrecisionModel", "tail" : "(): PrecisionModel", "member" : "org.locationtech.jts.geom.Geometry.getPrecisionModel", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getPrecisionModel():org.locationtech.jts.geom.PrecisionModel", "kind" : "def"}, {"label" : "setUserData", "tail" : "(arg0: Any): Unit", "member" : "org.locationtech.jts.geom.Geometry.setUserData", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#setUserData(x$1:Any):Unit", "kind" : "def"}, {"label" : "getGeometryN", "tail" : "(arg0: Int): Geometry", "member" : "org.locationtech.jts.geom.Geometry.getGeometryN", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getGeometryN(x$1:Int):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "getNumGeometries", "tail" : "(): Int", "member" : "org.locationtech.jts.geom.Geometry.getNumGeometries", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getNumGeometries():Int", "kind" : "def"}, {"label" : "getUserData", "tail" : "(): AnyRef", "member" : "org.locationtech.jts.geom.Geometry.getUserData", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getUserData():Object", "kind" : "def"}, {"label" : "getFactory", "tail" : "(): GeometryFactory", "member" : "org.locationtech.jts.geom.Geometry.getFactory", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getFactory():org.locationtech.jts.geom.GeometryFactory", "kind" : "def"}, {"label" : "setSRID", "tail" : "(arg0: Int): Unit", "member" : "org.locationtech.jts.geom.Geometry.setSRID", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#setSRID(x$1:Int):Unit", "kind" : "def"}, {"label" : "getSRID", "tail" : "(): Int", "member" : "org.locationtech.jts.geom.Geometry.getSRID", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getSRID():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: T): Int", "member" : "java.lang.Comparable.compareTo", "link" : "org\/apache\/sedona\/viz\/utils\/Pixel.html#compareTo(x$1:T):Int", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/viz\/utils\/Pixel.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.utils.RasterizationUtils", "shortDescription" : "The Class RasterizationUtils.", "members_class" : [{"member" : "org.apache.sedona.viz.utils.RasterizationUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/utils\/RasterizationUtils.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.utils.S3Operator", "shortDescription" : "", "members_class" : [{"label" : "getImage", "tail" : "(bucketName: String, path: String): BufferedImage", "member" : "org.apache.sedona.viz.utils.S3Operator.getImage", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#getImage(bucketName:String,path:String):java.awt.image.BufferedImage", "kind" : "def"}, {"label" : "putImage", "tail" : "(bucketName: String, path: String, rasterImage: BufferedImage): Boolean", "member" : "org.apache.sedona.viz.utils.S3Operator.putImage", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#putImage(bucketName:String,path:String,rasterImage:java.awt.image.BufferedImage):Boolean", "kind" : "def"}, {"label" : "deleteImage", "tail" : "(bucketName: String, path: String): Boolean", "member" : "org.apache.sedona.viz.utils.S3Operator.deleteImage", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#deleteImage(bucketName:String,path:String):Boolean", "kind" : "def"}, {"label" : "createBucket", "tail" : "(bucketName: String): Boolean", "member" : "org.apache.sedona.viz.utils.S3Operator.createBucket", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#createBucket(bucketName:String):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.viz.utils.S3Operator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/utils\/S3Operator.html", "kind" : "class"}], "org.apache.sedona.viz.extension.coloringRule" : [{"name" : "org.apache.sedona.viz.extension.coloringRule.ColoringRuleFactory", "shortDescription" : "A factory for creating ColoringRule objects.", "members_class" : [{"member" : "org.apache.sedona.viz.extension.coloringRule.ColoringRuleFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/ColoringRuleFactory.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.coloringRule.GenericColoringRule", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.viz.extension.coloringRule.GenericColoringRule#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/GenericColoringRule.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.coloringRule.LinearFunction", "shortDescription" : "The Class LinearFunction.", "members_class" : [{"label" : "EncodeToRGB", "tail" : "(normalizedCount: Double, globalParameter: GlobalParameter): Integer", "member" : "org.apache.sedona.viz.extension.coloringRule.LinearFunction.EncodeToRGB", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#EncodeToRGB(normalizedCount:Double,globalParameter:org.apache.sedona.viz.core.GlobalParameter):Integer", "kind" : "def"}, {"member" : "org.apache.sedona.viz.extension.coloringRule.LinearFunction#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/LinearFunction.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.coloringRule.PiecewiseFunction", "shortDescription" : "The Class PiecewiseFunction.", "members_class" : [{"label" : "EncodeToRGB", "tail" : "(normalizedCount: Double, globalParameter: GlobalParameter): Integer", "member" : "org.apache.sedona.viz.extension.coloringRule.PiecewiseFunction.EncodeToRGB", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#EncodeToRGB(normalizedCount:Double,globalParameter:org.apache.sedona.viz.core.GlobalParameter):Integer", "kind" : "def"}, {"member" : "org.apache.sedona.viz.extension.coloringRule.PiecewiseFunction#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/coloringRule\/PiecewiseFunction.html", "kind" : "class"}], "org.apache.sedona.sql.datasources.geopackage" : [], "org.apache.spark.sql.sedona_sql.io" : [], "org.apache.sedona.sql.datasources.osmpbf.extractors" : [{"name" : "org.apache.sedona.sql.datasources.osmpbf.extractors.DenseNodeExtractor", "shortDescription" : "", "members_class" : [{"label" : "extract", "tail" : "(idx: Int, stringTable: StringTable): OsmNode", "member" : "org.apache.sedona.sql.datasources.osmpbf.extractors.DenseNodeExtractor.extract", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#extract(idx:Int,stringTable:org.apache.sedona.sql.datasources.osmpbf.build.Osmformat.StringTable):org.apache.sedona.sql.datasources.osmpbf.model.OsmNode", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.extractors.DenseNodeExtractor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/DenseNodeExtractor.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.extractors.NodeExtractor", "shortDescription" : "", "members_class" : [{"label" : "extract", "tail" : "(idx: Int, stringTable: StringTable): OsmNode", "member" : "org.apache.sedona.sql.datasources.osmpbf.extractors.NodeExtractor.extract", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#extract(idx:Int,stringTable:org.apache.sedona.sql.datasources.osmpbf.build.Osmformat.StringTable):org.apache.sedona.sql.datasources.osmpbf.model.OsmNode", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.extractors.NodeExtractor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/NodeExtractor.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.extractors.RelationExtractor", "shortDescription" : "", "members_class" : [{"label" : "extract", "tail" : "(idx: Int): Relation", "member" : "org.apache.sedona.sql.datasources.osmpbf.extractors.RelationExtractor.extract", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#extract(idx:Int):org.apache.sedona.sql.datasources.osmpbf.model.Relation", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.extractors.RelationExtractor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/RelationExtractor.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.extractors.WaysExtractor", "shortDescription" : "", "members_class" : [{"label" : "extract", "tail" : "(idx: Int): Way", "member" : "org.apache.sedona.sql.datasources.osmpbf.extractors.WaysExtractor.extract", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#extract(idx:Int):org.apache.sedona.sql.datasources.osmpbf.model.Way", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.extractors.WaysExtractor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/extractors\/WaysExtractor.html", "kind" : "class"}], "org.apache.sedona.sql.datasources.osmpbf.model" : [{"name" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity", "shortDescription" : "", "members_class" : [{"label" : "getId", "tail" : "(): Long", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getId", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getId():Long", "kind" : "def"}, {"label" : "getRefTypes", "tail" : "(): Array[String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefTypes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getRefTypes():Array[String]", "kind" : "def"}, {"label" : "getRefRoles", "tail" : "(): Array[String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefRoles", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getRefRoles():Array[String]", "kind" : "def"}, {"label" : "getRefs", "tail" : "(): Array[Long]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefs", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getRefs():Array[Long]", "kind" : "def"}, {"label" : "getLongitude", "tail" : "(): Double", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getLongitude", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getLongitude():Double", "kind" : "def"}, {"label" : "getLatitude", "tail" : "(): Double", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getLatitude", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getLatitude():Double", "kind" : "def"}, {"label" : "getTags", "tail" : "(): HashMap[String, String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getTags", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getTags():java.util.HashMap[String,String]", "kind" : "def"}, {"label" : "getKind", "tail" : "(): String", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getKind", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getKind():String", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OSMEntity.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.model.OsmNode", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.sql.datasources.osmpbf.model.OsmNode#<init>", "error" : "unsupported entity"}, {"label" : "getId", "tail" : "(): Long", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getId", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getId():Long", "kind" : "def"}, {"label" : "getRefTypes", "tail" : "(): Array[String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefTypes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getRefTypes():Array[String]", "kind" : "def"}, {"label" : "getRefRoles", "tail" : "(): Array[String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefRoles", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getRefRoles():Array[String]", "kind" : "def"}, {"label" : "getRefs", "tail" : "(): Array[Long]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefs", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getRefs():Array[Long]", "kind" : "def"}, {"label" : "getLongitude", "tail" : "(): Double", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getLongitude", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getLongitude():Double", "kind" : "def"}, {"label" : "getLatitude", "tail" : "(): Double", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getLatitude", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getLatitude():Double", "kind" : "def"}, {"label" : "getTags", "tail" : "(): HashMap[String, String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getTags", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getTags():java.util.HashMap[String,String]", "kind" : "def"}, {"label" : "getKind", "tail" : "(): String", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getKind", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getKind():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/OsmNode.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.model.Relation", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.sql.datasources.osmpbf.model.Relation#<init>", "error" : "unsupported entity"}, {"label" : "getId", "tail" : "(): Long", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getId", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getId():Long", "kind" : "def"}, {"label" : "getRefTypes", "tail" : "(): Array[String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefTypes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getRefTypes():Array[String]", "kind" : "def"}, {"label" : "getRefRoles", "tail" : "(): Array[String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefRoles", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getRefRoles():Array[String]", "kind" : "def"}, {"label" : "getRefs", "tail" : "(): Array[Long]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefs", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getRefs():Array[Long]", "kind" : "def"}, {"label" : "getLongitude", "tail" : "(): Double", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getLongitude", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getLongitude():Double", "kind" : "def"}, {"label" : "getLatitude", "tail" : "(): Double", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getLatitude", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getLatitude():Double", "kind" : "def"}, {"label" : "getTags", "tail" : "(): HashMap[String, String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getTags", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getTags():java.util.HashMap[String,String]", "kind" : "def"}, {"label" : "getKind", "tail" : "(): String", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getKind", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getKind():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Relation.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.model.RelationType", "shortDescription" : "", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[RelationType]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: RelationType): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/RelationType.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.model.Way", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.sql.datasources.osmpbf.model.Way#<init>", "error" : "unsupported entity"}, {"label" : "getId", "tail" : "(): Long", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getId", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getId():Long", "kind" : "def"}, {"label" : "getRefTypes", "tail" : "(): Array[String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefTypes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getRefTypes():Array[String]", "kind" : "def"}, {"label" : "getRefRoles", "tail" : "(): Array[String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefRoles", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getRefRoles():Array[String]", "kind" : "def"}, {"label" : "getRefs", "tail" : "(): Array[Long]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getRefs", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getRefs():Array[Long]", "kind" : "def"}, {"label" : "getLongitude", "tail" : "(): Double", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getLongitude", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getLongitude():Double", "kind" : "def"}, {"label" : "getLatitude", "tail" : "(): Double", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getLatitude", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getLatitude():Double", "kind" : "def"}, {"label" : "getTags", "tail" : "(): HashMap[String, String]", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getTags", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getTags():java.util.HashMap[String,String]", "kind" : "def"}, {"label" : "getKind", "tail" : "(): String", "member" : "org.apache.sedona.sql.datasources.osmpbf.model.OSMEntity.getKind", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getKind():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/model\/Way.html", "kind" : "class"}], "org.apache.sedona.core.knnJudgement" : [{"name" : "org.apache.sedona.core.knnJudgement.EuclideanItemDistance", "shortDescription" : "", "members_class" : [{"label" : "distance", "tail" : "(geometry1: Geometry, geometry2: Geometry): Double", "member" : "org.apache.sedona.core.knnJudgement.EuclideanItemDistance.distance", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#distance(geometry1:org.locationtech.jts.geom.Geometry,geometry2:org.locationtech.jts.geom.Geometry):Double", "kind" : "def"}, {"label" : "distance", "tail" : "(item1: ItemBoundable, item2: ItemBoundable): Double", "member" : "org.apache.sedona.core.knnJudgement.EuclideanItemDistance.distance", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#distance(item1:org.locationtech.jts.index.strtree.ItemBoundable,item2:org.locationtech.jts.index.strtree.ItemBoundable):Double", "kind" : "def"}, {"member" : "org.apache.sedona.core.knnJudgement.EuclideanItemDistance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/knnJudgement\/EuclideanItemDistance.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.knnJudgement.GeometryDistanceComparator", "shortDescription" : "The Class GeometryDistanceComparator.", "members_class" : [{"label" : "compare", "tail" : "(p1: T, p2: T): Int", "member" : "org.apache.sedona.core.knnJudgement.GeometryDistanceComparator.compare", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#compare(p1:T,p2:T):Int", "kind" : "def"}, {"member" : "org.apache.sedona.core.knnJudgement.GeometryDistanceComparator#<init>", "error" : "unsupported entity"}, {"label" : "thenComparingDouble", "tail" : "(arg0: ToDoubleFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingDouble", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#thenComparingDouble(x$1:java.util.function.ToDoubleFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingLong", "tail" : "(arg0: ToLongFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingLong", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#thenComparingLong(x$1:java.util.function.ToLongFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingInt", "tail" : "(arg0: ToIntFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingInt", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#thenComparingInt(x$1:java.util.function.ToIntFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: T, _ <: U]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#thenComparing[U<:Comparable[_>:U]](x$1:java.util.function.Function[_>:T,_<:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: T, _ <: U], arg1: Comparator[_ >: U]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#thenComparing[U](x$1:java.util.function.Function[_>:T,_<:U],x$2:java.util.Comparator[_>:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Comparator[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#thenComparing(x$1:java.util.Comparator[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Comparator[T]", "member" : "java.util.Comparator.reversed", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#reversed():java.util.Comparator[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/knnJudgement\/GeometryDistanceComparator.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.knnJudgement.HaversineItemDistance", "shortDescription" : "", "members_class" : [{"label" : "distance", "tail" : "(geometry1: Geometry, geometry2: Geometry): Double", "member" : "org.apache.sedona.core.knnJudgement.HaversineItemDistance.distance", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#distance(geometry1:org.locationtech.jts.geom.Geometry,geometry2:org.locationtech.jts.geom.Geometry):Double", "kind" : "def"}, {"label" : "distance", "tail" : "(item1: ItemBoundable, item2: ItemBoundable): Double", "member" : "org.apache.sedona.core.knnJudgement.HaversineItemDistance.distance", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#distance(item1:org.locationtech.jts.index.strtree.ItemBoundable,item2:org.locationtech.jts.index.strtree.ItemBoundable):Double", "kind" : "def"}, {"member" : "org.apache.sedona.core.knnJudgement.HaversineItemDistance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/knnJudgement\/HaversineItemDistance.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.knnJudgement.KnnJudgement", "shortDescription" : "The Class GeometryKnnJudgement.", "members_class" : [{"label" : "call", "tail" : "(input: Iterator[T]): Iterator[T]", "member" : "org.apache.sedona.core.knnJudgement.KnnJudgement.call", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#call(input:java.util.Iterator[T]):java.util.Iterator[T]", "kind" : "def"}, {"member" : "org.apache.sedona.core.knnJudgement.KnnJudgement#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgement.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.knnJudgement.KnnJudgementUsingIndex", "shortDescription" : "The Class KnnJudgementUsingIndex.", "members_class" : [{"label" : "call", "tail" : "(treeIndexes: Iterator[SpatialIndex]): Iterator[T]", "member" : "org.apache.sedona.core.knnJudgement.KnnJudgementUsingIndex.call", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#call(treeIndexes:java.util.Iterator[org.locationtech.jts.index.SpatialIndex]):java.util.Iterator[T]", "kind" : "def"}, {"member" : "org.apache.sedona.core.knnJudgement.KnnJudgementUsingIndex#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/knnJudgement\/KnnJudgementUsingIndex.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.knnJudgement.SpheroidDistance", "shortDescription" : "", "members_class" : [{"label" : "distance", "tail" : "(geometry1: Geometry, geometry2: Geometry): Double", "member" : "org.apache.sedona.core.knnJudgement.SpheroidDistance.distance", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#distance(geometry1:org.locationtech.jts.geom.Geometry,geometry2:org.locationtech.jts.geom.Geometry):Double", "kind" : "def"}, {"label" : "distance", "tail" : "(item1: ItemBoundable, item2: ItemBoundable): Double", "member" : "org.apache.sedona.core.knnJudgement.SpheroidDistance.distance", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#distance(item1:org.locationtech.jts.index.strtree.ItemBoundable,item2:org.locationtech.jts.index.strtree.ItemBoundable):Double", "kind" : "def"}, {"member" : "org.apache.sedona.core.knnJudgement.SpheroidDistance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/knnJudgement\/SpheroidDistance.html", "kind" : "class"}], "org.apache.sedona.sql.datasources" : [], "org.apache.sedona.core.rangeJudgement" : [{"name" : "org.apache.sedona.core.rangeJudgement.JudgementBase", "shortDescription" : "", "members_class" : [{"label" : "match", "tail" : "(spatialObject: Geometry, queryWindow: Geometry): Boolean", "member" : "org.apache.sedona.core.rangeJudgement.JudgementBase.match", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#match(spatialObject:org.locationtech.jts.geom.Geometry,queryWindow:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.core.rangeJudgement.JudgementBase#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.rangeJudgement.JudgementBase#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/rangeJudgement\/JudgementBase.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.rangeJudgement.RangeFilter", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(geometry: T): Boolean", "member" : "org.apache.sedona.core.rangeJudgement.RangeFilter.call", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#call(geometry:T):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.core.rangeJudgement.RangeFilter#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.rangeJudgement.RangeFilter#<init>", "error" : "unsupported entity"}, {"label" : "match", "tail" : "(spatialObject: Geometry, queryWindow: Geometry): Boolean", "member" : "org.apache.sedona.core.rangeJudgement.JudgementBase.match", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#match(spatialObject:org.locationtech.jts.geom.Geometry,queryWindow:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilter.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.rangeJudgement.RangeFilterUsingIndex", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(treeIndexes: Iterator[SpatialIndex]): Iterator[T]", "member" : "org.apache.sedona.core.rangeJudgement.RangeFilterUsingIndex.call", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#call(treeIndexes:java.util.Iterator[org.locationtech.jts.index.SpatialIndex]):java.util.Iterator[T]", "kind" : "def"}, {"member" : "org.apache.sedona.core.rangeJudgement.RangeFilterUsingIndex#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.rangeJudgement.RangeFilterUsingIndex#<init>", "error" : "unsupported entity"}, {"label" : "match", "tail" : "(spatialObject: Geometry, queryWindow: Geometry): Boolean", "member" : "org.apache.sedona.core.rangeJudgement.JudgementBase.match", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#match(spatialObject:org.locationtech.jts.geom.Geometry,queryWindow:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/rangeJudgement\/RangeFilterUsingIndex.html", "kind" : "class"}], "org.apache.sedona.sql.datasources.osmpbf.build" : [{"name" : "org.apache.sedona.sql.datasources.osmpbf.build.Fileformat", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Fileformat.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.build.Osmformat", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/build\/Osmformat.html", "kind" : "class"}], "org.apache.sedona.python" : [], "org.apache.spark.sql.execution.datasources" : [], "org.apache.sedona.stats" : [{"name" : "org.apache.sedona.stats.Weighting", "shortDescription" : "", "object" : "org\/apache\/sedona\/stats\/Weighting$.html", "members_object" : [{"label" : "addDistanceBandColumnPython", "tail" : "(dataframe: DataFrame, threshold: Double, binary: Boolean, alpha: Double, includeZeroDistanceNeighbors: Boolean, includeSelf: Boolean, selfWeight: Double, geometry: String, useSpheroid: Boolean, savedAttributes: ArrayList[String], resultName: String): DataFrame", "member" : "org.apache.sedona.stats.Weighting.addDistanceBandColumnPython", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#addDistanceBandColumnPython(dataframe:org.apache.spark.sql.DataFrame,threshold:Double,binary:Boolean,alpha:Double,includeZeroDistanceNeighbors:Boolean,includeSelf:Boolean,selfWeight:Double,geometry:String,useSpheroid:Boolean,savedAttributes:java.util.ArrayList[String],resultName:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "addWeightedDistanceBandColumn", "tail" : "(dataframe: DataFrame, threshold: Double, alpha: Double, includeZeroDistanceNeighbors: Boolean, includeSelf: Boolean, selfWeight: Double, geometry: String, useSpheroid: Boolean, savedAttributes: Seq[String], resultName: String): DataFrame", "member" : "org.apache.sedona.stats.Weighting.addWeightedDistanceBandColumn", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#addWeightedDistanceBandColumn(dataframe:org.apache.spark.sql.DataFrame,threshold:Double,alpha:Double,includeZeroDistanceNeighbors:Boolean,includeSelf:Boolean,selfWeight:Double,geometry:String,useSpheroid:Boolean,savedAttributes:Seq[String],resultName:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "addBinaryDistanceBandColumn", "tail" : "(dataframe: DataFrame, threshold: Double, includeZeroDistanceNeighbors: Boolean, includeSelf: Boolean, geometry: String, useSpheroid: Boolean, savedAttributes: Seq[String], resultName: String): DataFrame", "member" : "org.apache.sedona.stats.Weighting.addBinaryDistanceBandColumn", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#addBinaryDistanceBandColumn(dataframe:org.apache.spark.sql.DataFrame,threshold:Double,includeZeroDistanceNeighbors:Boolean,includeSelf:Boolean,geometry:String,useSpheroid:Boolean,savedAttributes:Seq[String],resultName:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "addDistanceBandColumn", "tail" : "(dataframe: DataFrame, threshold: Double, binary: Boolean, alpha: Double, includeZeroDistanceNeighbors: Boolean, includeSelf: Boolean, selfWeight: Double, geometry: String, useSpheroid: Boolean, savedAttributes: Seq[String], resultName: String): DataFrame", "member" : "org.apache.sedona.stats.Weighting.addDistanceBandColumn", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#addDistanceBandColumn(dataframe:org.apache.spark.sql.DataFrame,threshold:Double,binary:Boolean,alpha:Double,includeZeroDistanceNeighbors:Boolean,includeSelf:Boolean,selfWeight:Double,geometry:String,useSpheroid:Boolean,savedAttributes:Seq[String],resultName:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/stats\/Weighting$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/stats\/Weighting$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.core.enums" : [{"name" : "org.apache.sedona.core.enums.DistanceMetric", "shortDescription" : "The DistanceMetric enum represents the different distance metrics that can be used in theapplication.", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[DistanceMetric]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: DistanceMetric): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/enums\/DistanceMetric.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.enums.GridType", "shortDescription" : "The Enum GridType.", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[GridType]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: GridType): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/GridType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/enums\/GridType.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.enums.IndexType", "shortDescription" : "The Enum IndexType.", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[IndexType]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: IndexType): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/IndexType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/enums\/IndexType.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.enums.JoinBuildSide", "shortDescription" : "The enumerator type of JoinQuery JoinBuildSide.", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[JoinBuildSide]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: JoinBuildSide): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/enums\/JoinBuildSide.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.enums.JoinSpartitionDominantSide", "shortDescription" : "", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[JoinSpartitionDominantSide]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: JoinSpartitionDominantSide): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/enums\/JoinSpartitionDominantSide.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.enums.SpatialJoinOptimizationMode", "shortDescription" : "", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[SpatialJoinOptimizationMode]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: SpatialJoinOptimizationMode): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/enums\/SpatialJoinOptimizationMode.html", "kind" : "class"}], "org.apache.spark.sql.sedona_sql.plans" : [], "org.apache.spark.sql.sedona_sql" : [], "org.apache.sedona.viz.sql" : [{"name" : "org.apache.sedona.viz.sql.SedonaVizExtensions", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(e: SparkSessionExtensions): Unit", "member" : "org.apache.sedona.viz.sql.SedonaVizExtensions.apply", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#apply(e:org.apache.spark.sql.SparkSessionExtensions):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.viz.sql.SedonaVizExtensions#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Unit) â‡’ A): (SparkSessionExtensions) â‡’ A", "member" : "scala.Function1.andThen", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ SparkSessionExtensions): (A) â‡’ Unit", "member" : "scala.Function1.compose", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/sql\/SedonaVizExtensions.html", "kind" : "class"}], "org.apache.sedona.viz.core.Serde" : [{"name" : "org.apache.sedona.viz.core.Serde.ImageWrapperSerializer", "shortDescription" : "", "members_class" : [{"label" : "readImage", "tail" : "(inputArray: Array[Byte]): ImageSerializableWrapper", "member" : "org.apache.sedona.viz.core.Serde.ImageWrapperSerializer.readImage", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#readImage(inputArray:Array[Byte]):org.apache.sedona.viz.core.ImageSerializableWrapper", "kind" : "def"}, {"label" : "read", "tail" : "(kryo: Kryo, input: Input, type: Class[ImageSerializableWrapper]): ImageSerializableWrapper", "member" : "org.apache.sedona.viz.core.Serde.ImageWrapperSerializer.read", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#read(kryo:com.esotericsoftware.kryo.Kryo,input:com.esotericsoftware.kryo.io.Input,type:Class[org.apache.sedona.viz.core.ImageSerializableWrapper]):org.apache.sedona.viz.core.ImageSerializableWrapper", "kind" : "def"}, {"label" : "writeImage", "tail" : "(object: ImageSerializableWrapper): Array[Byte]", "member" : "org.apache.sedona.viz.core.Serde.ImageWrapperSerializer.writeImage", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#writeImage(object:org.apache.sedona.viz.core.ImageSerializableWrapper):Array[Byte]", "kind" : "def"}, {"label" : "write", "tail" : "(kryo: Kryo, output: Output, object: ImageSerializableWrapper): Unit", "member" : "org.apache.sedona.viz.core.Serde.ImageWrapperSerializer.write", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#write(kryo:com.esotericsoftware.kryo.Kryo,output:com.esotericsoftware.kryo.io.Output,object:org.apache.sedona.viz.core.ImageSerializableWrapper):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.Serde.ImageWrapperSerializer#<init>", "error" : "unsupported entity"}, {"label" : "copy", "tail" : "(arg0: Kryo, arg1: ImageSerializableWrapper): ImageSerializableWrapper", "member" : "com.esotericsoftware.kryo.Serializer.copy", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#copy(x$1:com.esotericsoftware.kryo.Kryo,x$2:T):T", "kind" : "def"}, {"label" : "setGenerics", "tail" : "(arg0: Kryo, arg1: Array[Class[_]]): Unit", "member" : "com.esotericsoftware.kryo.Serializer.setGenerics", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#setGenerics(x$1:com.esotericsoftware.kryo.Kryo,x$2:Array[Class[_]]):Unit", "kind" : "def"}, {"label" : "setImmutable", "tail" : "(arg0: Boolean): Unit", "member" : "com.esotericsoftware.kryo.Serializer.setImmutable", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#setImmutable(x$1:Boolean):Unit", "kind" : "def"}, {"label" : "isImmutable", "tail" : "(): Boolean", "member" : "com.esotericsoftware.kryo.Serializer.isImmutable", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#isImmutable():Boolean", "kind" : "def"}, {"label" : "setAcceptsNull", "tail" : "(arg0: Boolean): Unit", "member" : "com.esotericsoftware.kryo.Serializer.setAcceptsNull", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#setAcceptsNull(x$1:Boolean):Unit", "kind" : "def"}, {"label" : "getAcceptsNull", "tail" : "(): Boolean", "member" : "com.esotericsoftware.kryo.Serializer.getAcceptsNull", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#getAcceptsNull():Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/Serde\/ImageWrapperSerializer.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.Serde.PixelSerializer", "shortDescription" : "This serializer aims at serializing Pixel object.", "members_class" : [{"label" : "readPixel", "tail" : "(inputArray: Array[Byte]): Pixel", "member" : "org.apache.sedona.viz.core.Serde.PixelSerializer.readPixel", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#readPixel(inputArray:Array[Byte]):org.apache.sedona.viz.utils.Pixel", "kind" : "def"}, {"label" : "read", "tail" : "(kryo: Kryo, input: Input, type: Class[Pixel]): Pixel", "member" : "org.apache.sedona.viz.core.Serde.PixelSerializer.read", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#read(kryo:com.esotericsoftware.kryo.Kryo,input:com.esotericsoftware.kryo.io.Input,type:Class[org.apache.sedona.viz.utils.Pixel]):org.apache.sedona.viz.utils.Pixel", "kind" : "def"}, {"label" : "write", "tail" : "(kryo: Kryo, output: Output, object: Pixel): Unit", "member" : "org.apache.sedona.viz.core.Serde.PixelSerializer.write", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#write(kryo:com.esotericsoftware.kryo.Kryo,output:com.esotericsoftware.kryo.io.Output,object:org.apache.sedona.viz.utils.Pixel):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.Serde.PixelSerializer#<init>", "error" : "unsupported entity"}, {"label" : "copy", "tail" : "(arg0: Kryo, arg1: Pixel): Pixel", "member" : "com.esotericsoftware.kryo.Serializer.copy", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#copy(x$1:com.esotericsoftware.kryo.Kryo,x$2:T):T", "kind" : "def"}, {"label" : "setGenerics", "tail" : "(arg0: Kryo, arg1: Array[Class[_]]): Unit", "member" : "com.esotericsoftware.kryo.Serializer.setGenerics", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#setGenerics(x$1:com.esotericsoftware.kryo.Kryo,x$2:Array[Class[_]]):Unit", "kind" : "def"}, {"label" : "setImmutable", "tail" : "(arg0: Boolean): Unit", "member" : "com.esotericsoftware.kryo.Serializer.setImmutable", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#setImmutable(x$1:Boolean):Unit", "kind" : "def"}, {"label" : "isImmutable", "tail" : "(): Boolean", "member" : "com.esotericsoftware.kryo.Serializer.isImmutable", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#isImmutable():Boolean", "kind" : "def"}, {"label" : "setAcceptsNull", "tail" : "(arg0: Boolean): Unit", "member" : "com.esotericsoftware.kryo.Serializer.setAcceptsNull", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#setAcceptsNull(x$1:Boolean):Unit", "kind" : "def"}, {"label" : "getAcceptsNull", "tail" : "(): Boolean", "member" : "com.esotericsoftware.kryo.Serializer.getAcceptsNull", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#getAcceptsNull():Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/Serde\/PixelSerializer.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator", "shortDescription" : "", "members_class" : [{"label" : "registerClasses", "tail" : "(kryo: Kryo): Unit", "member" : "org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator.registerClasses", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#registerClasses(kryo:com.esotericsoftware.kryo.Kryo):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/core\/Serde\/SedonaVizKryoRegistrator.html", "kind" : "class"}], "org.apache.sedona.core.spatialPartitioning" : [{"name" : "org.apache.sedona.core.spatialPartitioning.BroadcastedSpatialPartitioner", "shortDescription" : "The SpatialPartitioner may contain a large number of grids, which may make the serialized tasksto be larger than 1MB and trigger a warning: \"WARN DAGScheduler: Broadcasting large task binarywith size XXXX KB\".", "members_class" : [{"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.BroadcastedSpatialPartitioner.numPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#numPartitions():Int", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.BroadcastedSpatialPartitioner.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getDedupParams", "tail" : "(): DedupParams", "member" : "org.apache.sedona.core.spatialPartitioning.BroadcastedSpatialPartitioner.getDedupParams", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#getDedupParams():org.apache.sedona.core.joinJudgement.DedupParams", "kind" : "def"}, {"label" : "placeObject", "tail" : "(spatialObject: T): Iterator[(Integer, T)]", "member" : "org.apache.sedona.core.spatialPartitioning.BroadcastedSpatialPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#placeObject[T<:org.locationtech.jts.geom.Geometry](spatialObject:T):java.util.Iterator[(Integer,T)]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.BroadcastedSpatialPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getPartition", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "getGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGridType", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#getGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/BroadcastedSpatialPartitioner.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.EqualPartitioning", "shortDescription" : "The Class EqualPartitioning.", "members_class" : [{"label" : "getKeys", "tail" : "(geometry: Geometry): Set[Integer]", "member" : "org.apache.sedona.core.spatialPartitioning.EqualPartitioning.getKeys", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#getKeys(geometry:org.locationtech.jts.geom.Geometry):java.util.Set[Integer]", "kind" : "def"}, {"label" : "placeObject", "tail" : "(geometry: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.EqualPartitioning.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#placeObject(geometry:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.EqualPartitioning.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.EqualPartitioning#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.EqualPartitioning#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.EqualPartitioning#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/EqualPartitioning.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner", "shortDescription" : "The FlatGridPartitioner is used when there is already a set of grids which the data should bepartitioned into.", "members_class" : [{"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner.numPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#numPartitions():Int", "kind" : "def"}, {"label" : "getDedupParams", "tail" : "(): DedupParams", "member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner.getDedupParams", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#getDedupParams():org.apache.sedona.core.joinJudgement.DedupParams", "kind" : "def"}, {"label" : "placeObject", "tail" : "(spatialObject: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#placeObject(spatialObject:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getPartition", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGridType", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#getGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "placeObject", "tail" : "(spatialObject: T): Iterator[(Integer, T)]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html#placeObject[T<:org.locationtech.jts.geom.Geometry](spatialObject:T):java.util.Iterator[(Integer,T)]", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/FlatGridPartitioner.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.GenericUniquePartitioner", "shortDescription" : "", "members_class" : [{"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.GenericUniquePartitioner.numPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#numPartitions():Int", "kind" : "def"}, {"label" : "getDedupParams", "tail" : "(): DedupParams", "member" : "org.apache.sedona.core.spatialPartitioning.GenericUniquePartitioner.getDedupParams", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#getDedupParams():org.apache.sedona.core.joinJudgement.DedupParams", "kind" : "def"}, {"label" : "placeObject", "tail" : "(spatialObject: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.GenericUniquePartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#placeObject(spatialObject:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.GenericUniquePartitioner.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.spatialPartitioning.GenericUniquePartitioner.getGridType", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#getGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.GenericUniquePartitioner#<init>", "error" : "unsupported entity"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getPartition", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "placeObject", "tail" : "(spatialObject: T): Iterator[(Integer, T)]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html#placeObject[T<:org.locationtech.jts.geom.Geometry](spatialObject:T):java.util.Iterator[(Integer,T)]", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/GenericUniquePartitioner.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.HilbertPartitioning", "shortDescription" : "", "members_class" : [{"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.HilbertPartitioning.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getPartitionBounds", "tail" : "(): Array[Int]", "member" : "org.apache.sedona.core.spatialPartitioning.HilbertPartitioning.getPartitionBounds", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#getPartitionBounds():Array[Int]", "kind" : "def"}, {"label" : "createFromHValues", "tail" : "(hValues: Array[Int], partitions: Int): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.HilbertPartitioning.createFromHValues", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#createFromHValues(hValues:Array[Int],partitions:Int):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.HilbertPartitioning#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/HilbertPartitioning.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.IndexedGridPartitioner", "shortDescription" : "The IndexedGridPartitioner is used when there is already a set of grids which the data should bepartitioned into.", "members_class" : [{"label" : "placeObject", "tail" : "(spatialObject: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.IndexedGridPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#placeObject(spatialObject:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"label" : "getIndex", "tail" : "(): STRtree", "member" : "org.apache.sedona.core.spatialPartitioning.IndexedGridPartitioner.getIndex", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#getIndex():org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.IndexedGridPartitioner#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.IndexedGridPartitioner#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.IndexedGridPartitioner#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.IndexedGridPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner.numPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#numPartitions():Int", "kind" : "def"}, {"label" : "getDedupParams", "tail" : "(): DedupParams", "member" : "org.apache.sedona.core.spatialPartitioning.FlatGridPartitioner.getDedupParams", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#getDedupParams():org.apache.sedona.core.joinJudgement.DedupParams", "kind" : "def"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getPartition", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGridType", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#getGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "placeObject", "tail" : "(spatialObject: T): Iterator[(Integer, T)]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html#placeObject[T<:org.locationtech.jts.geom.Geometry](spatialObject:T):java.util.Iterator[(Integer,T)]", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/IndexedGridPartitioner.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.KDB", "shortDescription" : "see <ahref=\"https:\/\/en.wikipedia.org\/wiki\/K-D-B-tree\">https:\/\/en.wikipedia.org\/wiki\/K-D-B-tree", "members_class" : [{"label" : "fetchLeafZones", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.fetchLeafZones", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#fetchLeafZones():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getKeys", "tail" : "(geometry: Geometry): Set[Integer]", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.getKeys", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#getKeys(geometry:org.locationtech.jts.geom.Geometry):java.util.Set[Integer]", "kind" : "def"}, {"label" : "placeObject", "tail" : "(geometry: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#placeObject(geometry:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"label" : "assignLeafIds", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.assignLeafIds", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#assignLeafIds():Unit", "kind" : "def"}, {"label" : "traverse", "tail" : "(visitor: Visitor): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.traverse", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#traverse(visitor:org.apache.sedona.core.spatialPartitioning.KDB.Visitor):Unit", "kind" : "def"}, {"label" : "findLeafNodes", "tail" : "(envelope: Envelope): List[KDB]", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.findLeafNodes", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#findLeafNodes(envelope:org.locationtech.jts.geom.Envelope):java.util.List[org.apache.sedona.core.spatialPartitioning.KDB]", "kind" : "def"}, {"label" : "dropElements", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.dropElements", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#dropElements():Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(envelope: Envelope): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.insert", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#insert(envelope:org.locationtech.jts.geom.Envelope):Unit", "kind" : "def"}, {"label" : "getExtent", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.getExtent", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#getExtent():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "getLeafId", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.getLeafId", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#getLeafId():Int", "kind" : "def"}, {"label" : "isLeaf", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.isLeaf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#isLeaf():Boolean", "kind" : "def"}, {"label" : "getItemCount", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.KDB.getItemCount", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#getItemCount():Int", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.KDB#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDB.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.KDBTreePartitioner", "shortDescription" : "", "members_class" : [{"label" : "getDedupParams", "tail" : "(): DedupParams", "member" : "org.apache.sedona.core.spatialPartitioning.KDBTreePartitioner.getDedupParams", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#getDedupParams():org.apache.sedona.core.joinJudgement.DedupParams", "kind" : "def"}, {"label" : "placeObject", "tail" : "(spatialObject: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.KDBTreePartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#placeObject(spatialObject:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.KDBTreePartitioner.numPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#numPartitions():Int", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.KDBTreePartitioner#<init>", "error" : "unsupported entity"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getPartition", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGridType", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#getGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "placeObject", "tail" : "(spatialObject: T): Iterator[(Integer, T)]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html#placeObject[T<:org.locationtech.jts.geom.Geometry](spatialObject:T):java.util.Iterator[(Integer,T)]", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/KDBTreePartitioner.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.PartitioningUtils", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.spatialPartitioning.PartitioningUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fetchLeafZones", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.PartitioningUtils.fetchLeafZones", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#fetchLeafZones():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "abstract def"}, {"label" : "getKeys", "tail" : "(geometry: Geometry): Set[Integer]", "member" : "org.apache.sedona.core.spatialPartitioning.PartitioningUtils.getKeys", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#getKeys(geometry:org.locationtech.jts.geom.Geometry):java.util.Set[Integer]", "kind" : "abstract def"}, {"label" : "placeObject", "tail" : "(geometry: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.PartitioningUtils.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html#placeObject(geometry:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/PartitioningUtils.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.QuadTreePartitioner", "shortDescription" : "", "members_class" : [{"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreePartitioner.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreePartitioner.numPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#numPartitions():Int", "kind" : "def"}, {"label" : "getDedupParams", "tail" : "(): DedupParams", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreePartitioner.getDedupParams", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#getDedupParams():org.apache.sedona.core.joinJudgement.DedupParams", "kind" : "def"}, {"label" : "placeObject", "tail" : "(spatialObject: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreePartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#placeObject(spatialObject:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.QuadTreePartitioner#<init>", "error" : "unsupported entity"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getPartition", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGridType", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#getGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "placeObject", "tail" : "(spatialObject: T): Iterator[(Integer, T)]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html#placeObject[T<:org.locationtech.jts.geom.Geometry](spatialObject:T):java.util.Iterator[(Integer,T)]", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreePartitioner.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.QuadtreePartitioning", "shortDescription" : "", "members_class" : [{"label" : "getPartitionTree", "tail" : "(): StandardQuadTree[_]", "member" : "org.apache.sedona.core.spatialPartitioning.QuadtreePartitioning.getPartitionTree", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#getPartitionTree():org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.QuadtreePartitioning#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.QuadtreePartitioning#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadtreePartitioning.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner", "shortDescription" : "This class implements spatial partitioner based on the principles outlined in:", "members_class" : [{"label" : "getSTRForOverlappedGrids", "tail" : "(): STRtree", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner.getSTRForOverlappedGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#getSTRForOverlappedGrids():org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "getOverlappedGrids", "tail" : "(): Map[Integer, List[Envelope]]", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner.getOverlappedGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#getOverlappedGrids():java.util.Map[Integer,java.util.List[org.locationtech.jts.geom.Envelope]]", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner.numPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#numPartitions():Int", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getDedupParams", "tail" : "(): DedupParams", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner.getDedupParams", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#getDedupParams():org.apache.sedona.core.joinJudgement.DedupParams", "kind" : "def"}, {"label" : "placeObject", "tail" : "(spatialObject: Geometry): Iterator[(Integer, Geometry)]", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#placeObject(spatialObject:org.locationtech.jts.geom.Geometry):java.util.Iterator[(Integer,org.locationtech.jts.geom.Geometry)]", "kind" : "def"}, {"label" : "getBoundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner.getBoundary", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#getBoundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "nonOverlappedPartitioner", "tail" : "(): QuadTreeRTPartitioner", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner.nonOverlappedPartitioner", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#nonOverlappedPartitioner():org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreePartitioner.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getPartition", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "getGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGridType", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#getGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "placeObject", "tail" : "(spatialObject: T): Iterator[(Integer, T)]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html#placeObject[T<:org.locationtech.jts.geom.Geometry](spatialObject:T):java.util.Iterator[(Integer,T)]", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioner.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioning", "shortDescription" : "The class is used to build an R-tree over a random sample of another dataset and uses distancebounds to ensure efficient local kNN joins.", "members_class" : [{"label" : "getMinimalEnvelopeWidth", "tail" : "(partitionMBRs: List[QuadRectangle]): Double", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioning.getMinimalEnvelopeWidth", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#getMinimalEnvelopeWidth(partitionMBRs:java.util.List[org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle]):Double", "kind" : "def"}, {"label" : "processPartitions", "tail" : "(partitionMBRs: List[QuadRectangle], mbrs: Map[Integer, List[Envelope]], k: Int, sampleTree: STRtree, geometryFactory: GeometryFactory): Unit", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioning.processPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#processPartitions(partitionMBRs:java.util.List[org.apache.sedona.core.spatialPartitioning.quadtree.QuadRectangle],mbrs:java.util.Map[Integer,java.util.List[org.locationtech.jts.geom.Envelope]],k:Int,sampleTree:org.locationtech.jts.index.strtree.STRtree,geometryFactory:org.locationtech.jts.geom.GeometryFactory):Unit", "kind" : "def"}, {"label" : "buildSTRTree", "tail" : "(samples: List[Envelope], k: Int): STRtree", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioning.buildSTRTree", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#buildSTRTree(samples:java.util.List[org.locationtech.jts.geom.Envelope],k:Int):org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "getMbrSpatialIndex", "tail" : "(): STRtree", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioning.getMbrSpatialIndex", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#getMbrSpatialIndex():org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "getMbrs", "tail" : "(): HashMap[Integer, List[Envelope]]", "member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioning.getMbrs", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#getMbrs():java.util.HashMap[Integer,java.util.List[org.locationtech.jts.geom.Envelope]]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioning#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.QuadTreeRTPartitioning#<init>", "error" : "unsupported entity"}, {"label" : "getPartitionTree", "tail" : "(): StandardQuadTree[_]", "member" : "org.apache.sedona.core.spatialPartitioning.QuadtreePartitioning.getPartitionTree", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#getPartitionTree():org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/QuadTreeRTPartitioning.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.RtreePartitioning", "shortDescription" : "The Class RtreePartitioning.", "members_class" : [{"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.RtreePartitioning.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.RtreePartitioning#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/RtreePartitioning.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner", "shortDescription" : "", "members_class" : [{"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getPartition", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getGridType", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#getGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getDedupParams", "tail" : "(): DedupParams", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.getDedupParams", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#getDedupParams():org.apache.sedona.core.joinJudgement.DedupParams", "kind" : "abstract def"}, {"label" : "placeObject", "tail" : "(spatialObject: T): Iterator[(Integer, T)]", "member" : "org.apache.sedona.core.spatialPartitioning.SpatialPartitioner.placeObject", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#placeObject[T<:org.locationtech.jts.geom.Geometry](spatialObject:T):java.util.Iterator[(Integer,T)]", "kind" : "abstract def"}, {"label" : "numPartitions", "tail" : "(): Int", "member" : "org.apache.spark.Partitioner.numPartitions", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html#numPartitions:Int", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/SpatialPartitioner.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialPartitioning.VoronoiPartitioning", "shortDescription" : "The Class VoronoiPartitioning.", "members_class" : [{"label" : "getGrids", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.spatialPartitioning.VoronoiPartitioning.getGrids", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#getGrids():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialPartitioning.VoronoiPartitioning#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialPartitioning\/VoronoiPartitioning.html", "kind" : "class"}], "org.apache.spark.sql.sedona_sql.strategy" : [], "org.apache.spark.sql.execution" : [], "org.apache.spark.sql.parser" : [{"name" : "org.apache.spark.sql.parser.ParserFactory", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html", "members_object" : [{"label" : "getParser", "tail" : "(className: String, conf: SQLConf, delegate: ParserInterface): SparkSqlParser", "member" : "org.apache.spark.sql.parser.ParserFactory.getParser", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#getParser(className:String,conf:org.apache.spark.sql.internal.SQLConf,delegate:org.apache.spark.sql.catalyst.parser.ParserInterface):org.apache.spark.sql.execution.SparkSqlParser", "kind" : "def"}, {"label" : "getParser", "tail" : "(className: String, delegate: ParserInterface): SparkSqlParser", "member" : "org.apache.spark.sql.parser.ParserFactory.getParser", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#getParser(className:String,delegate:org.apache.spark.sql.catalyst.parser.ParserInterface):org.apache.spark.sql.execution.SparkSqlParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/parser\/ParserFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.viz.sql.UDT" : [{"name" : "org.apache.sedona.viz.sql.UDT.UdtRegistrator", "shortDescription" : "", "object" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html", "members_object" : [{"label" : "registerAll", "tail" : "(): Unit", "member" : "org.apache.sedona.viz.sql.UDT.UdtRegistrator.registerAll", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#registerAll():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/UDT\/UdtRegistrator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.stats.clustering" : [{"name" : "org.apache.sedona.stats.clustering.DBSCAN", "shortDescription" : "", "object" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html", "members_object" : [{"label" : "dbscan", "tail" : "(dataframe: DataFrame, epsilon: Double, minPts: Int, geometry: String, includeOutliers: Boolean, useSpheroid: Boolean, isCoreColumnName: String, clusterColumnName: String): DataFrame", "member" : "org.apache.sedona.stats.clustering.DBSCAN.dbscan", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#dbscan(dataframe:org.apache.spark.sql.DataFrame,epsilon:Double,minPts:Int,geometry:String,includeOutliers:Boolean,useSpheroid:Boolean,isCoreColumnName:String,clusterColumnName:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/stats\/clustering\/DBSCAN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.sql.datasources.osm" : [{"name" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader", "shortDescription" : "", "members_case class" : [{"label" : "transformTags", "tail" : "(tags: Map[String, String]): ArrayBasedMapData", "member" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader.transformTags", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#transformTags(tags:java.util.Map[String,String]):org.apache.spark.sql.catalyst.util.ArrayBasedMapData", "kind" : "def"}, {"label" : "findOffset", "tail" : "(fs: FileSystem, status: FileStatus, start: Long): Long", "member" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader.findOffset", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#findOffset(fs:org.apache.hadoop.fs.FileSystem,status:org.apache.hadoop.fs.FileStatus,start:Long):Long", "kind" : "def"}, {"label" : "apply", "tail" : "(file: PartitionedFile): Iterator[InternalRow]", "member" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader.apply", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#apply(file:org.apache.spark.sql.execution.datasources.PartitionedFile):Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader#<init>", "error" : "unsupported entity"}, {"label" : "HEADER_SIZE_LENGTH", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader.HEADER_SIZE_LENGTH", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#HEADER_SIZE_LENGTH:Int", "kind" : "val"}, {"label" : "broadcastedHadoopConf", "tail" : ": Broadcast[SerializableWritable[Configuration]]", "member" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader.broadcastedHadoopConf", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#broadcastedHadoopConf:org.apache.spark.broadcast.Broadcast[org.apache.spark.SerializableWritable[org.apache.hadoop.conf.Configuration]]", "kind" : "val"}, {"label" : "requiredSchema", "tail" : ": StructType", "member" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader.requiredSchema", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#requiredSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "sparkSession", "tail" : ": SparkSession", "member" : "org.apache.sedona.sql.datasources.osm.OsmPartitionReader.sparkSession", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Iterator[InternalRow]) â‡’ A): (PartitionedFile) â‡’ A", "member" : "scala.Function1.andThen", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ PartitionedFile): (A) â‡’ Iterator[InternalRow]", "member" : "scala.Function1.compose", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPartitionReader.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.osm.OsmPbfFormat", "shortDescription" : "", "members_case class" : [{"label" : "buildReader", "tail" : "(sparkSession: SparkSession, dataSchema: StructType, partitionSchema: StructType, requiredSchema: StructType, filters: Seq[Filter], options: Map[String, String], hadoopConf: Configuration): (PartitionedFile) â‡’ Iterator[InternalRow]", "member" : "org.apache.sedona.sql.datasources.osm.OsmPbfFormat.buildReader", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#buildReader(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,requiredSchema:org.apache.spark.sql.types.StructType,filters:Seq[org.apache.spark.sql.sources.Filter],options:Map[String,String],hadoopConf:org.apache.hadoop.conf.Configuration):org.apache.spark.sql.execution.datasources.PartitionedFile=>Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(sparkSession: SparkSession, options: Map[String, String], path: Path): Boolean", "member" : "org.apache.sedona.sql.datasources.osm.OsmPbfFormat.isSplitable", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#isSplitable(sparkSession:org.apache.spark.sql.SparkSession,options:Map[String,String],path:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "prepareWrite", "tail" : "(sparkSession: SparkSession, job: Job, options: Map[String, String], dataSchema: StructType): OutputWriterFactory", "member" : "org.apache.sedona.sql.datasources.osm.OsmPbfFormat.prepareWrite", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#prepareWrite(sparkSession:org.apache.spark.sql.SparkSession,job:org.apache.hadoop.mapreduce.Job,options:Map[String,String],dataSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.execution.datasources.OutputWriterFactory", "kind" : "def"}, {"label" : "inferSchema", "tail" : "(sparkSession: SparkSession, options: Map[String, String], files: Seq[FileStatus]): Option[StructType]", "member" : "org.apache.sedona.sql.datasources.osm.OsmPbfFormat.inferSchema", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#inferSchema(sparkSession:org.apache.spark.sql.SparkSession,options:Map[String,String],files:Seq[org.apache.hadoop.fs.FileStatus]):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "shortName", "tail" : "(): String", "member" : "org.apache.sedona.sql.datasources.osm.OsmPbfFormat.shortName", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#shortName():String", "kind" : "def"}, {"label" : "HEADER_SIZE_LENGTH", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.osm.OsmPbfFormat.HEADER_SIZE_LENGTH", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#HEADER_SIZE_LENGTH:Int", "kind" : "val"}, {"member" : "org.apache.sedona.sql.datasources.osm.OsmPbfFormat#<init>", "error" : "unsupported entity"}, {"label" : "schema", "tail" : "(): StructType", "member" : "org.apache.sedona.sql.datasources.osm.SchemaProvider.schema", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#schema:org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "supportFieldName", "tail" : "(name: String): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.supportFieldName", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#supportFieldName(name:String):Boolean", "kind" : "def"}, {"label" : "supportDataType", "tail" : "(dataType: DataType): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.supportDataType", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#supportDataType(dataType:org.apache.spark.sql.types.DataType):Boolean", "kind" : "def"}, {"label" : "buildReaderWithPartitionValues", "tail" : "(sparkSession: SparkSession, dataSchema: StructType, partitionSchema: StructType, requiredSchema: StructType, filters: Seq[Filter], options: Map[String, String], hadoopConf: Configuration): (PartitionedFile) â‡’ Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.buildReaderWithPartitionValues", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#buildReaderWithPartitionValues(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,requiredSchema:org.apache.spark.sql.types.StructType,filters:Seq[org.apache.spark.sql.sources.Filter],options:Map[String,String],hadoopConf:org.apache.hadoop.conf.Configuration):org.apache.spark.sql.execution.datasources.PartitionedFile=>Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(requiredSchema: StructType, partitionSchema: StructType, sqlConf: SQLConf): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.vectorTypes", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#vectorTypes(requiredSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,sqlConf:org.apache.spark.sql.internal.SQLConf):Option[Seq[String]]", "kind" : "def"}, {"label" : "supportBatch", "tail" : "(sparkSession: SparkSession, dataSchema: StructType): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.supportBatch", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#supportBatch(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/osm\/OsmPbfFormat.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.osm.SchemaProvider", "members_trait" : [{"label" : "schema", "tail" : "(): StructType", "member" : "org.apache.sedona.sql.datasources.osm.SchemaProvider.schema", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#schema:org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/apache\/sedona\/sql\/datasources\/osm\/SchemaProvider.html", "kind" : "trait"}], "org.apache.sedona.viz" : [], "org.apache.sedona.core.formatMapper.shapefileParser" : [{"name" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileRDD", "shortDescription" : "The Class ShapefileRDD.", "members_class" : [{"label" : "getBoundBox", "tail" : "(sc: JavaSparkContext, inputPath: String): BoundBox", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileRDD.getBoundBox", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#getBoundBox(sc:org.apache.spark.api.java.JavaSparkContext,inputPath:String):org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileRDD.count", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#count():Long", "kind" : "def"}, {"label" : "getLineStringRDD", "tail" : "(): JavaRDD[LineString]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileRDD.getLineStringRDD", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#getLineStringRDD():org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.LineString]", "kind" : "def"}, {"label" : "getPolygonRDD", "tail" : "(): JavaRDD[Polygon]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileRDD.getPolygonRDD", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#getPolygonRDD():org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.Polygon]", "kind" : "def"}, {"label" : "getPointRDD", "tail" : "(): JavaRDD[Point]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileRDD.getPointRDD", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#getPointRDD():org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.Point]", "kind" : "def"}, {"label" : "getShapeRDD", "tail" : "(): JavaRDD[Geometry]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileRDD.getShapeRDD", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#getShapeRDD():org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileRDD#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileRDD.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileReader", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.shapefileParser.ShapefileReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/ShapefileReader.html", "kind" : "class"}], "org.apache.sedona.core.formatMapper.shapefileParser.boundary" : [{"name" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryInputFormat", "shortDescription" : "", "members_class" : [{"label" : "getSplits", "tail" : "(job: JobContext): List[InputSplit]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryInputFormat.getSplits", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#getSplits(job:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(context: JobContext, file: Path): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryInputFormat.isSplitable", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,file:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "createRecordReader", "tail" : "(inputSplit: InputSplit, taskAttemptContext: TaskAttemptContext): RecordReader[Long, BoundBox]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryInputFormat.createRecordReader", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#createRecordReader(inputSplit:org.apache.hadoop.mapreduce.InputSplit,taskAttemptContext:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordReader[Long,org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox]", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getFileBlockLocations", "tail" : "(arg0: FileSystem, arg1: FileStatus): Array[BlockLocation]", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.getFileBlockLocations", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#getFileBlockLocations(x$1:org.apache.hadoop.fs.FileSystem,x$2:org.apache.hadoop.fs.FileStatus):Array[org.apache.hadoop.fs.BlockLocation]", "kind" : "def"}, {"label" : "createPool", "tail" : "(arg0: <repeated...>[PathFilter]): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.createPool", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#createPool(x$1:org.apache.hadoop.fs.PathFilter*):Unit", "kind" : "def"}, {"label" : "createPool", "tail" : "(arg0: List[PathFilter]): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.createPool", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#createPool(x$1:java.util.List[org.apache.hadoop.fs.PathFilter]):Unit", "kind" : "def"}, {"label" : "setMinSplitSizeRack", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMinSplitSizeRack", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#setMinSplitSizeRack(x$1:Long):Unit", "kind" : "def"}, {"label" : "setMinSplitSizeNode", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMinSplitSizeNode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#setMinSplitSizeNode(x$1:Long):Unit", "kind" : "def"}, {"label" : "setMaxSplitSize", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMaxSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#setMaxSplitSize(x$1:Long):Unit", "kind" : "def"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryInputFormat.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryRecordReader", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryRecordReader.close", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#close():Unit", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryRecordReader.getProgress", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#getProgress():Float", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): BoundBox", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryRecordReader.getCurrentValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#getCurrentValue():org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): Long", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryRecordReader.getCurrentKey", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#getCurrentKey():Long", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryRecordReader.nextKeyValue", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "initialize", "tail" : "(inputSplit: InputSplit, taskAttemptContext: TaskAttemptContext): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryRecordReader.initialize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#initialize(inputSplit:org.apache.hadoop.mapreduce.InputSplit,taskAttemptContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundaryRecordReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundaryRecordReader.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox", "shortDescription" : "Created by zongsizhang on 7\/6\/17.", "members_class" : [{"label" : "setMMax", "tail" : "(value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.setMMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#setMMax(value:Double):Unit", "kind" : "def"}, {"label" : "getMMax", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.getMMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getMMax():Double", "kind" : "def"}, {"label" : "setMMin", "tail" : "(value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.setMMin", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#setMMin(value:Double):Unit", "kind" : "def"}, {"label" : "getMMin", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.getMMin", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getMMin():Double", "kind" : "def"}, {"label" : "setZMax", "tail" : "(value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.setZMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#setZMax(value:Double):Unit", "kind" : "def"}, {"label" : "getZMax", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.getZMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getZMax():Double", "kind" : "def"}, {"label" : "setZMin", "tail" : "(value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.setZMin", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#setZMin(value:Double):Unit", "kind" : "def"}, {"label" : "getZMin", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.getZMin", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getZMin():Double", "kind" : "def"}, {"label" : "setYMax", "tail" : "(value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.setYMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#setYMax(value:Double):Unit", "kind" : "def"}, {"label" : "getYMax", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.getYMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getYMax():Double", "kind" : "def"}, {"label" : "setYMin", "tail" : "(value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.setYMin", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#setYMin(value:Double):Unit", "kind" : "def"}, {"label" : "getYMin", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.getYMin", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getYMin():Double", "kind" : "def"}, {"label" : "setXMax", "tail" : "(value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.setXMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#setXMax(value:Double):Unit", "kind" : "def"}, {"label" : "getXMax", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.getXMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getXMax():Double", "kind" : "def"}, {"label" : "setXMin", "tail" : "(value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.setXMin", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#setXMin(value:Double):Unit", "kind" : "def"}, {"label" : "getXMin", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.getXMin", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getXMin():Double", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#toString():String", "kind" : "def"}, {"label" : "copyBounds", "tail" : "(): Array[Double]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.copyBounds", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#copyBounds():Array[Double]", "kind" : "def"}, {"label" : "set", "tail" : "(i: Int, value: Double): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox.set", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#set(i:Int,value:Double):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.boundary.BoundBox#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/boundary\/BoundBox.html", "kind" : "class"}], "org.apache.sedona" : [], "org.apache.spark.sql.sedona_sql.strategies" : [{"name" : "org.apache.spark.sql.sedona_sql.strategies.SedonaArrowEvalPython", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildInternal", "tail" : "(newChild: LogicalPlan): SedonaArrowEvalPython", "member" : "org.apache.spark.sql.sedona_sql.strategies.SedonaArrowEvalPython.withNewChildInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#withNewChildInternal(newChild:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):org.apache.spark.sql.sedona_sql.strategies.SedonaArrowEvalPython", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategies.SedonaArrowEvalPython#<init>", "error" : "unsupported entity"}, {"label" : "evalType", "tail" : ": Int", "member" : "org.apache.spark.sql.sedona_sql.strategies.SedonaArrowEvalPython.evalType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#evalType:Int", "kind" : "val"}, {"label" : "child", "tail" : ": LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.strategies.SedonaArrowEvalPython.child", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#child:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "val"}, {"label" : "resultAttrs", "tail" : ": Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategies.SedonaArrowEvalPython.resultAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resultAttrs:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "val"}, {"label" : "udfs", "tail" : ": Seq[PythonUDF]", "member" : "org.apache.spark.sql.sedona_sql.strategies.SedonaArrowEvalPython.udfs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#udfs:Seq[org.apache.spark.sql.catalyst.expressions.PythonUDF]", "kind" : "val"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.plans.logical.BaseEvalPython.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "final val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.BaseEvalPython.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.catalyst.plans.logical.BaseEvalPython.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "validConstraints", "tail" : ": ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.UnaryNode.validConstraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#validConstraints:org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "lazy val"}, {"label" : "getAllValidConstraints", "tail" : "(projectList: Seq[NamedExpression]): ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.UnaryNode.getAllValidConstraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#getAllValidConstraints(projectList:Seq[org.apache.spark.sql.catalyst.expressions.NamedExpression]):org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "final def"}, {"label" : "mapChildren", "tail" : "(f: (LogicalPlan) â‡’ LogicalPlan): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : ": Seq[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#children:Seq[T]", "kind" : "final lazy val"}, {"label" : "sameOutput", "tail" : "(other: LogicalPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.sameOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#sameOutput(other:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Boolean", "kind" : "def"}, {"label" : "refresh", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.refresh", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#refresh():Unit", "kind" : "def"}, {"label" : "resolveQuoted", "tail" : "(name: String, resolver: Resolver): Option[NamedExpression]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveQuoted", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveQuoted(name:String,resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Option[org.apache.spark.sql.catalyst.expressions.NamedExpression]", "kind" : "def"}, {"label" : "resolve", "tail" : "(nameParts: Seq[String], resolver: Resolver): Option[NamedExpression]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolve(nameParts:Seq[String],resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Option[org.apache.spark.sql.catalyst.expressions.NamedExpression]", "kind" : "def"}, {"label" : "resolveChildren", "tail" : "(nameParts: Seq[String], resolver: Resolver): Option[NamedExpression]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveChildren(nameParts:Seq[String],resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Option[org.apache.spark.sql.catalyst.expressions.NamedExpression]", "kind" : "def"}, {"label" : "resolve", "tail" : "(schema: StructType, resolver: Resolver): Seq[Attribute]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolve(schema:org.apache.spark.sql.types.StructType,resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#statePrefix:String", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "maxRowsPerPartition", "tail" : "(): Option[Long]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.maxRowsPerPartition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#maxRowsPerPartition:Option[Long]", "kind" : "def"}, {"label" : "maxRows", "tail" : "(): Option[Long]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.maxRows", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#maxRows:Option[Long]", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "isStreaming", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.isStreaming", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#isStreaming:Boolean", "kind" : "def"}, {"label" : "metadataOutput", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.metadataOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#metadataOutput:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#logName:String", "kind" : "def"}, {"label" : "constraints", "tail" : ": ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.QueryPlanConstraints.constraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#constraints:org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "lazy val"}, {"label" : "constructIsNotNullConstraints", "tail" : "(constraints: ExpressionSet, output: Seq[Attribute]): ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.ConstraintHelper.constructIsNotNullConstraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#constructIsNotNullConstraints(constraints:org.apache.spark.sql.catalyst.expressions.ExpressionSet,output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]):org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "def"}, {"label" : "inferAdditionalConstraints", "tail" : "(constraints: ExpressionSet): ExpressionSet", "member" : "org.apache.spark.sql.catalyst.plans.logical.ConstraintHelper.inferAdditionalConstraints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#inferAdditionalConstraints(constraints:org.apache.spark.sql.catalyst.expressions.ExpressionSet):org.apache.spark.sql.catalyst.expressions.ExpressionSet", "kind" : "def"}, {"label" : "distinctKeys", "tail" : ": Set[ExpressionSet]", "member" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlanDistinctKeys.distinctKeys", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#distinctKeys:Set[org.apache.spark.sql.catalyst.expressions.ExpressionSet]", "kind" : "lazy val"}, {"label" : "invalidateStatsCache", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.logical.statsEstimation.LogicalPlanStats.invalidateStatsCache", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#invalidateStatsCache():Unit", "kind" : "final def"}, {"label" : "statsCache", "tail" : ": Option[Statistics]", "member" : "org.apache.spark.sql.catalyst.plans.logical.statsEstimation.LogicalPlanStats.statsCache", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#statsCache:Option[org.apache.spark.sql.catalyst.plans.logical.Statistics]", "kind" : "val"}, {"label" : "stats", "tail" : "(): Statistics", "member" : "org.apache.spark.sql.catalyst.plans.logical.statsEstimation.LogicalPlanStats.stats", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#stats:org.apache.spark.sql.catalyst.plans.logical.Statistics", "kind" : "def"}, {"label" : "clone", "tail" : "(): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#clone():org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):AnalysisHelper.this.type", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "assertNotAnalysisRule", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.assertNotAnalysisRule", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#assertNotAnalysisRule():Unit", "kind" : "def"}, {"label" : "resolveExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveExpressions", "tail" : "(r: PartialFunction[Expression, Expression]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveExpressions(r:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: LogicalPlan, attrMap: AttributeMap[Attribute]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#updateOuterReferencesInSubquery(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[LogicalPlan, (LogicalPlan, Seq[(Attribute, Attribute)])], skipCond: (LogicalPlan) â‡’ Boolean, canGetOutput: (LogicalPlan) â‡’ Boolean): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformUpWithNewOutput(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,(org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan=>Boolean,canGetOutput:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan=>Boolean):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsUpWithNewOutput", "tail" : "(rule: PartialFunction[LogicalPlan, (LogicalPlan, Seq[(Attribute, Attribute)])]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveOperatorsUpWithNewOutput(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,(org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveOperatorsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsDown", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveOperatorsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveOperatorsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsUp", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveOperatorsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperatorsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveOperatorsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "resolveOperators", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperators", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#resolveOperators(rule:PartialFunction[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "analyzed", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.analyzed", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#analyzed:Boolean", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: LogicalPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[LogicalPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaArrowEvalPython.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.catalyst.SQLConfHelper.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#toString():String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#nodeName:String", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, Seq[LogicalPlan]]): Stream[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[LogicalPlan, Seq[LogicalPlan]]): Stream[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (LogicalPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(LogicalPlan, LogicalPlan), LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[LogicalPlan, LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[LogicalPlan]): LogicalPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[LogicalPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[LogicalPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (LogicalPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (LogicalPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (LogicalPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (LogicalPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (LogicalPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (LogicalPlan) â‡’ Boolean): Option[LogicalPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: LogicalPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategies\/SedonaArrowEvalPython.html", "kind" : "case class"}], "org.apache.spark.sql.sedona_sql.UDT" : [{"name" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "deserialize", "tail" : "(datum: Any): Geography", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.deserialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#deserialize(datum:Any):org.apache.sedona.common.S2Geography.Geography", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: Geography): Array[Byte]", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.serialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#serialize(obj:org.apache.sedona.common.S2Geography.Geography):Array[Byte]", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[Geography]", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.userClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#userClass:Class[org.apache.sedona.common.S2Geography.Geography]", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#pyUDT:String", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.sqlType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT#<init>", "error" : "unsupported entity"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#catalogString:String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#serializedPyClass:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#simpleString:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "deserialize", "tail" : "(datum: Any): Geography", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.deserialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#deserialize(datum:Any):org.apache.sedona.common.S2Geography.Geography", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: Geography): Array[Byte]", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.serialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#serialize(obj:org.apache.sedona.common.S2Geography.Geography):Array[Byte]", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[Geography]", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.userClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#userClass:Class[org.apache.sedona.common.S2Geography.Geography]", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeographyUDT.sqlType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#simpleString:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeographyUDT.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "deserialize", "tail" : "(datum: Any): Geometry", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#deserialize(datum:Any):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: Geometry): Array[Byte]", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#serialize(obj:org.locationtech.jts.geom.Geometry):Array[Byte]", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#userClass:Class[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#pyUDT:String", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT#<init>", "error" : "unsupported entity"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#catalogString:String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#serializedPyClass:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#simpleString:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "deserialize", "tail" : "(datum: Any): Geometry", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#deserialize(datum:Any):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: Geometry): Array[Byte]", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#serialize(obj:org.locationtech.jts.geom.Geometry):Array[Byte]", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#userClass:Class[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.UDT.GeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#simpleString:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/GeometryUDT.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.UDT.IndexUDT", "shortDescription" : "", "members_class" : [{"label" : "userClass", "tail" : "(): Class[SpatialIndex]", "member" : "org.apache.spark.sql.sedona_sql.UDT.IndexUDT.userClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#userClass:Class[org.locationtech.jts.index.SpatialIndex]", "kind" : "def"}, {"label" : "deserialize", "tail" : "(datum: Any): SpatialIndex", "member" : "org.apache.spark.sql.sedona_sql.UDT.IndexUDT.deserialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#deserialize(datum:Any):org.locationtech.jts.index.SpatialIndex", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: SpatialIndex): GenericArrayData", "member" : "org.apache.spark.sql.sedona_sql.UDT.IndexUDT.serialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#serialize(obj:org.locationtech.jts.index.SpatialIndex):org.apache.spark.sql.catalyst.util.GenericArrayData", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.UDT.IndexUDT.sqlType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.UDT.IndexUDT#<init>", "error" : "unsupported entity"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#serializedPyClass:String", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.pyUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#simpleString:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/IndexUDT.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[GridCoverage2D]", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.userClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#userClass:Class[org.geotools.coverage.grid.GridCoverage2D]", "kind" : "def"}, {"label" : "deserialize", "tail" : "(datum: Any): GridCoverage2D", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.deserialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#deserialize(datum:Any):org.geotools.coverage.grid.GridCoverage2D", "kind" : "def"}, {"label" : "serialize", "tail" : "(raster: GridCoverage2D): Array[Byte]", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.serialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#serialize(raster:org.geotools.coverage.grid.GridCoverage2D):Array[Byte]", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.defaultSize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#defaultSize:Int", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#pyUDT:String", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.sqlType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT#<init>", "error" : "unsupported entity"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#catalogString:String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#sql:String", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#serializedPyClass:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#simpleString:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[GridCoverage2D]", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.userClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#userClass:Class[org.geotools.coverage.grid.GridCoverage2D]", "kind" : "def"}, {"label" : "deserialize", "tail" : "(datum: Any): GridCoverage2D", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.deserialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#deserialize(datum:Any):org.geotools.coverage.grid.GridCoverage2D", "kind" : "def"}, {"label" : "serialize", "tail" : "(raster: GridCoverage2D): Array[Byte]", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.serialize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#serialize(raster:org.geotools.coverage.grid.GridCoverage2D):Array[Byte]", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.defaultSize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUDT.sqlType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#sql:String", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#simpleString:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUDT.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.UDT.RasterUdtRegistratorWrapper", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html", "members_object" : [{"label" : "registerAll", "tail" : "(gridClassName: String): Unit", "member" : "org.apache.spark.sql.sedona_sql.UDT.RasterUdtRegistratorWrapper.registerAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#registerAll(gridClassName:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/RasterUdtRegistratorWrapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.UDT.UdtRegistratorWrapper", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html", "members_object" : [{"label" : "registerAll", "tail" : "(): Unit", "member" : "org.apache.spark.sql.sedona_sql.UDT.UdtRegistratorWrapper.registerAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#registerAll():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/UDT\/UdtRegistratorWrapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark" : [], "org.apache" : [], "org.apache.sedona.core.spatialOperator" : [{"name" : "org.apache.sedona.core.spatialOperator.JoinQuery", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.spatialOperator.JoinQuery#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialOperator\/JoinQuery.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialOperator.KNNQuery", "shortDescription" : "The Class KNNQuery.", "members_class" : [{"member" : "org.apache.sedona.core.spatialOperator.KNNQuery#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialOperator\/KNNQuery.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialOperator.RangeQuery", "shortDescription" : "The Class RangeQuery.", "members_class" : [{"member" : "org.apache.sedona.core.spatialOperator.RangeQuery#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialOperator\/RangeQuery.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialOperator.SpatialPredicate", "shortDescription" : "Spatial predicates for range queries and join queries.", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[SpatialPredicate]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: SpatialPredicate): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicate.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialOperator.SpatialPredicateEvaluators", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialOperator\/SpatialPredicateEvaluators.html", "kind" : "class"}], "org.apache.sedona.core.formatMapper" : [{"name" : "org.apache.sedona.core.formatMapper.EarthdataHDFPointMapper", "shortDescription" : "The Class EarthdataHDFPointMapper.", "members_class" : [{"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[Geometry]", "member" : "org.apache.sedona.core.formatMapper.EarthdataHDFPointMapper.call", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.EarthdataHDFPointMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.EarthdataHDFPointMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.EarthdataHDFPointMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.EarthdataHDFPointMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/EarthdataHDFPointMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.FormatMapper", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[T]", "member" : "org.apache.sedona.core.formatMapper.FormatMapper.call", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[T]", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.FormatMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.FormatMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.FormatMapper#<init>", "error" : "unsupported entity"}, {"label" : "addGeometry", "tail" : "(arg0: Geometry, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#addGeometry(x$1:org.locationtech.jts.geom.Geometry,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readGeometry", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#readGeometry(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "addMultiGeometry", "tail" : "(arg0: GeometryCollection, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addMultiGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#addMultiGeometry[T<:org.locationtech.jts.geom.Geometry](x$1:org.locationtech.jts.geom.GeometryCollection,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(arg0: String): Array[Coordinate]", "member" : "org.apache.sedona.common.utils.FormatUtils.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#readCoordinates(x$1:String):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readWkb", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkb", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#readWkb(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readWkt", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkt", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#readWkt(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readPropertyNames", "tail" : "(arg0: String): List[String]", "member" : "org.apache.sedona.common.utils.FormatUtils.readPropertyNames", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#readPropertyNames(x$1:String):java.util.List[String]", "kind" : "def"}, {"label" : "readGeoJSON", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeoJSON", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#readGeoJSON(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/FormatMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.GeoJsonReader", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.GeoJsonReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/GeoJsonReader.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.LineStringFormatMapper", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.LineStringFormatMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.LineStringFormatMapper#<init>", "error" : "unsupported entity"}, {"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[T]", "member" : "org.apache.sedona.core.formatMapper.FormatMapper.call", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[T]", "kind" : "def"}, {"label" : "addGeometry", "tail" : "(arg0: Geometry, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#addGeometry(x$1:org.locationtech.jts.geom.Geometry,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readGeometry", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#readGeometry(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "addMultiGeometry", "tail" : "(arg0: GeometryCollection, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addMultiGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#addMultiGeometry[T<:org.locationtech.jts.geom.Geometry](x$1:org.locationtech.jts.geom.GeometryCollection,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(arg0: String): Array[Coordinate]", "member" : "org.apache.sedona.common.utils.FormatUtils.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#readCoordinates(x$1:String):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readWkb", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkb", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#readWkb(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readWkt", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkt", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#readWkt(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readPropertyNames", "tail" : "(arg0: String): List[String]", "member" : "org.apache.sedona.common.utils.FormatUtils.readPropertyNames", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#readPropertyNames(x$1:String):java.util.List[String]", "kind" : "def"}, {"label" : "readGeoJSON", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeoJSON", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#readGeoJSON(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/LineStringFormatMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.PointFormatMapper", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.PointFormatMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.PointFormatMapper#<init>", "error" : "unsupported entity"}, {"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[T]", "member" : "org.apache.sedona.core.formatMapper.FormatMapper.call", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[T]", "kind" : "def"}, {"label" : "addGeometry", "tail" : "(arg0: Geometry, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#addGeometry(x$1:org.locationtech.jts.geom.Geometry,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readGeometry", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#readGeometry(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "addMultiGeometry", "tail" : "(arg0: GeometryCollection, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addMultiGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#addMultiGeometry[T<:org.locationtech.jts.geom.Geometry](x$1:org.locationtech.jts.geom.GeometryCollection,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(arg0: String): Array[Coordinate]", "member" : "org.apache.sedona.common.utils.FormatUtils.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#readCoordinates(x$1:String):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readWkb", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkb", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#readWkb(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readWkt", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkt", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#readWkt(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readPropertyNames", "tail" : "(arg0: String): List[String]", "member" : "org.apache.sedona.common.utils.FormatUtils.readPropertyNames", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#readPropertyNames(x$1:String):java.util.List[String]", "kind" : "def"}, {"label" : "readGeoJSON", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeoJSON", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#readGeoJSON(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/PointFormatMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.PolygonFormatMapper", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.PolygonFormatMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.PolygonFormatMapper#<init>", "error" : "unsupported entity"}, {"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[T]", "member" : "org.apache.sedona.core.formatMapper.FormatMapper.call", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[T]", "kind" : "def"}, {"label" : "addGeometry", "tail" : "(arg0: Geometry, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#addGeometry(x$1:org.locationtech.jts.geom.Geometry,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readGeometry", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#readGeometry(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "addMultiGeometry", "tail" : "(arg0: GeometryCollection, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addMultiGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#addMultiGeometry[T<:org.locationtech.jts.geom.Geometry](x$1:org.locationtech.jts.geom.GeometryCollection,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(arg0: String): Array[Coordinate]", "member" : "org.apache.sedona.common.utils.FormatUtils.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#readCoordinates(x$1:String):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readWkb", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkb", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#readWkb(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readWkt", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkt", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#readWkt(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readPropertyNames", "tail" : "(arg0: String): List[String]", "member" : "org.apache.sedona.common.utils.FormatUtils.readPropertyNames", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#readPropertyNames(x$1:String):java.util.List[String]", "kind" : "def"}, {"label" : "readGeoJSON", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeoJSON", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#readGeoJSON(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/PolygonFormatMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.RectangleFormatMapper", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.RectangleFormatMapper#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.RectangleFormatMapper#<init>", "error" : "unsupported entity"}, {"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[T]", "member" : "org.apache.sedona.core.formatMapper.FormatMapper.call", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[T]", "kind" : "def"}, {"label" : "addGeometry", "tail" : "(arg0: Geometry, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#addGeometry(x$1:org.locationtech.jts.geom.Geometry,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readGeometry", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#readGeometry(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "addMultiGeometry", "tail" : "(arg0: GeometryCollection, arg1: List[T]): Unit", "member" : "org.apache.sedona.common.utils.FormatUtils.addMultiGeometry", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#addMultiGeometry[T<:org.locationtech.jts.geom.Geometry](x$1:org.locationtech.jts.geom.GeometryCollection,x$2:java.util.List[T]):Unit", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(arg0: String): Array[Coordinate]", "member" : "org.apache.sedona.common.utils.FormatUtils.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#readCoordinates(x$1:String):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readWkb", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkb", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#readWkb(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readWkt", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readWkt", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#readWkt(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "readPropertyNames", "tail" : "(arg0: String): List[String]", "member" : "org.apache.sedona.common.utils.FormatUtils.readPropertyNames", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#readPropertyNames(x$1:String):java.util.List[String]", "kind" : "def"}, {"label" : "readGeoJSON", "tail" : "(arg0: String): Geometry", "member" : "org.apache.sedona.common.utils.FormatUtils.readGeoJSON", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#readGeoJSON(x$1:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/RectangleFormatMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.WkbReader", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.WkbReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/WkbReader.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.WktReader", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.WktReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/WktReader.html", "kind" : "class"}], "org.apache.spark.sql.sedona_sql.expressions.raster" : [{"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.BandData", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.BandData#<init>", "error" : "unsupported entity"}, {"label" : "serializedRaster", "tail" : ": Array[Byte]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.BandData.serializedRaster", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#serializedRaster:Array[Byte]", "kind" : "val"}, {"label" : "height", "tail" : ": Int", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.BandData.height", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#height:Int", "kind" : "val"}, {"label" : "width", "tail" : ": Int", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.BandData.width", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#width:Int", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.BandData.index", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#index:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/BandData.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.implicits", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html", "members_object" : [{"label" : "RasterEnhancer", "tail" : "", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.implicits.RasterEnhancer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#RasterEnhancerextendsAnyRef", "kind" : "implicit class"}, {"label" : "RasterInputExpressionEnhancer", "tail" : "", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.implicits.RasterInputExpressionEnhancer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#RasterInputExpressionEnhancerextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Add", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_Add", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Add.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_Add", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Add#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Add.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Add.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_AddBandFromArray", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_AddBandFromArray", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_AddBandFromArray.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_AddBandFromArray", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_AddBandFromArray#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_AddBandFromArray.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_AddBandFromArray.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BandAsArray", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_BandAsArray", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BandAsArray.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_BandAsArray", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BandAsArray#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BandAsArray.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BandAsArray.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseAnd", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_BitwiseAnd", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseAnd.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseAnd", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseAnd#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseAnd.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseAnd.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseOr", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_BitwiseOr", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseOr.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseOr", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseOr#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_BitwiseOr.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_BitwiseOr.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_CountValue", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_CountValue", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_CountValue.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_CountValue", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_CountValue#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_CountValue.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_CountValue.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Divide", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_Divide", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Divide.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_Divide", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Divide#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Divide.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Divide.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_FetchRegion", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_FetchRegion", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_FetchRegion.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_FetchRegion", "kind" : "def"}, {"label" : "eval", "tail" : "(inputRow: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_FetchRegion.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#eval(inputRow:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_FetchRegion#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_FetchRegion.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_FetchRegion.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThan", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_GreaterThan", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThan.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThan", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThan#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThan.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThan.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThanEqual", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_GreaterThanEqual", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThanEqual.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThanEqual", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThanEqual#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_GreaterThanEqual.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_GreaterThanEqual.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThan", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_LessThan", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThan.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThan", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThan#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThan.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThan.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThanEqual", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_LessThanEqual", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThanEqual.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThanEqual", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThanEqual#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LessThanEqual.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LessThanEqual.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalDifference", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_LogicalDifference", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalDifference.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalDifference", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalDifference#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalDifference.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalDifference.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalOver", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_LogicalOver", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalOver.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalOver", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalOver#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_LogicalOver.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_LogicalOver.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_MapAlgebra", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_MapAlgebra", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_MapAlgebra.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_MapAlgebra", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_MapAlgebra#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_MapAlgebra.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MapAlgebra.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mean", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_Mean", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mean.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mean", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mean#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mean.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mean.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mode", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_Mode", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mode", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mode#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Mode.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Mode.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Modulo", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_Modulo", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Modulo.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_Modulo", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Modulo#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Modulo.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Modulo.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Multiply", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_Multiply", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Multiply.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_Multiply", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Multiply#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Multiply.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Multiply.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_MultiplyFactor", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_MultiplyFactor", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_MultiplyFactor.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_MultiplyFactor", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_MultiplyFactor#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_MultiplyFactor.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_MultiplyFactor.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Normalize", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_Normalize", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Normalize.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_Normalize", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Normalize#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Normalize.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Normalize.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_NormalizedDifference", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_NormalizedDifference", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_NormalizedDifference.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_NormalizedDifference", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_NormalizedDifference#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_NormalizedDifference.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_NormalizedDifference.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate", "shortDescription" : "", "members_class" : [{"label" : "eval", "tail" : "(inputRow: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#eval(inputRow:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "final def"}, {"label" : "evaluator", "tail" : ": (Array[Byte], Array[Byte]) â‡’ Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.evaluator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#evaluator:(Array[Byte],Array[Byte])=>Boolean", "kind" : "lazy val"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#toString():String", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate#<init>", "error" : "unsupported entity"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#foldable:Boolean", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "evalRasters", "tail" : "(leftRaster: GridCoverage2D, rightRaster: GridCoverage2D): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.evalRasters", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#evalRasters(leftRaster:org.geotools.coverage.grid.GridCoverage2D,rightRaster:org.geotools.coverage.grid.GridCoverage2D):Boolean", "kind" : "abstract def"}, {"label" : "evalGeomRaster", "tail" : "(leftGeometry: Geometry, rightRaster: GridCoverage2D): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.evalGeomRaster", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#evalGeomRaster(leftGeometry:org.locationtech.jts.geom.Geometry,rightRaster:org.geotools.coverage.grid.GridCoverage2D):Boolean", "kind" : "abstract def"}, {"label" : "evalRasterGeom", "tail" : "(leftRaster: GridCoverage2D, rightGeometry: Geometry): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.evalRasterGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#evalRasterGeom(leftRaster:org.geotools.coverage.grid.GridCoverage2D,rightGeometry:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "abstract def"}, {"label" : "inputExpressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Predicate.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "abstract def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "abstract def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#withNewChildrenInternal(newChildren:IndexedSeq[BaseType]):BaseType", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Predicate.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_SquareRoot", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_SquareRoot", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_SquareRoot.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_SquareRoot", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_SquareRoot#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_SquareRoot.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_SquareRoot.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Subtract", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): RS_Subtract", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Subtract.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_sql.expressions.raster.RS_Subtract", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Subtract#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Subtract.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Subtract.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr", "shortDescription" : "Return a raster containing bands at given indexes from all rasters in a given column", "members_class" : [{"label" : "bufferEncoder", "tail" : "(): Encoder[ArrayBuffer[BandData]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr.bufferEncoder", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#bufferEncoder:org.apache.spark.sql.Encoder[scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData]]", "kind" : "def"}, {"label" : "outputEncoder", "tail" : "(): ExpressionEncoder[GridCoverage2D]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr.outputEncoder", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#outputEncoder:org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[org.geotools.coverage.grid.GridCoverage2D]", "kind" : "def"}, {"label" : "bufferSerde", "tail" : ": ExpressionEncoder[ArrayBuffer[BandData]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr.bufferSerde", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#bufferSerde:org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData]]", "kind" : "val"}, {"label" : "serde", "tail" : ": ExpressionEncoder[GridCoverage2D]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr.serde", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#serde:org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[org.geotools.coverage.grid.GridCoverage2D]", "kind" : "val"}, {"label" : "finish", "tail" : "(merged: ArrayBuffer[BandData]): GridCoverage2D", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr.finish", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#finish(merged:scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData]):org.geotools.coverage.grid.GridCoverage2D", "kind" : "def"}, {"label" : "merge", "tail" : "(buffer1: ArrayBuffer[BandData], buffer2: ArrayBuffer[BandData]): ArrayBuffer[BandData]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr.merge", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#merge(buffer1:scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData],buffer2:scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData]):scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData]", "kind" : "def"}, {"label" : "reduce", "tail" : "(buffer: ArrayBuffer[BandData], input: (GridCoverage2D, Int)): ArrayBuffer[BandData]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr.reduce", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#reduce(buffer:scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData],input:(org.geotools.coverage.grid.GridCoverage2D,Int)):scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData]", "kind" : "def"}, {"label" : "zero", "tail" : "(): ArrayBuffer[BandData]", "member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr.zero", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#zero:scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData]", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.raster.RS_Union_Aggr#<init>", "error" : "unsupported entity"}, {"label" : "toColumn", "tail" : "(): TypedColumn[(GridCoverage2D, Int), GridCoverage2D]", "member" : "org.apache.spark.sql.expressions.Aggregator.toColumn", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#toColumn:org.apache.spark.sql.TypedColumn[IN,OUT]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/raster\/RS_Union_Aggr.html", "kind" : "class"}], "org.apache.sedona.sql.utils" : [{"name" : "org.apache.sedona.sql.utils.Adapter", "shortDescription" : "Adapter for converting between DataFrame and SpatialRDD.", "object" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html", "members_object" : [{"label" : "toDf", "tail" : "(spatialPairRDD: JavaPairRDD[Geometry, Geometry], schema: StructType, sparkSession: SparkSession): DataFrame", "member" : "org.apache.sedona.sql.utils.Adapter.toDf", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toDf(spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry],schema:org.apache.spark.sql.types.StructType,sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialPairRDD: JavaPairRDD[Geometry, Geometry], leftFieldnames: Seq[String], rightFieldNames: Seq[String], sparkSession: SparkSession): DataFrame", "member" : "org.apache.sedona.sql.utils.Adapter.toDf", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toDf(spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry],leftFieldnames:Seq[String],rightFieldNames:Seq[String],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialPairRDD: JavaPairRDD[Geometry, Geometry], sparkSession: SparkSession): DataFrame", "member" : "org.apache.sedona.sql.utils.Adapter.toDf", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toDf(spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialRDD: SpatialRDD[T], schema: StructType, sparkSession: SparkSession): DataFrame", "member" : "org.apache.sedona.sql.utils.Adapter.toDf", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toDf[T<:org.locationtech.jts.geom.Geometry](spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[T],schema:org.apache.spark.sql.types.StructType,sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialRDD: SpatialRDD[T], fieldNames: Seq[String], sparkSession: SparkSession): DataFrame", "member" : "org.apache.sedona.sql.utils.Adapter.toDf", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toDf[T<:org.locationtech.jts.geom.Geometry](spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[T],fieldNames:Seq[String],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialRDD: SpatialRDD[T], sparkSession: SparkSession): DataFrame", "member" : "org.apache.sedona.sql.utils.Adapter.toDf", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toDf[T<:org.locationtech.jts.geom.Geometry](spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[T],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(dataFrame: DataFrame, geometryColId: Int): SpatialRDD[Geometry]", "member" : "org.apache.sedona.sql.utils.Adapter.toSpatialRdd", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toSpatialRdd(dataFrame:org.apache.spark.sql.DataFrame,geometryColId:Int):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(dataFrame: DataFrame, geometryColId: Int, fieldNames: Seq[String]): SpatialRDD[Geometry]", "member" : "org.apache.sedona.sql.utils.Adapter.toSpatialRdd", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toSpatialRdd(dataFrame:org.apache.spark.sql.DataFrame,geometryColId:Int,fieldNames:Seq[String]):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(dataFrame: DataFrame, geometryFieldName: String, fieldNames: Seq[String]): SpatialRDD[Geometry]", "member" : "org.apache.sedona.sql.utils.Adapter.toSpatialRdd", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toSpatialRdd(dataFrame:org.apache.spark.sql.DataFrame,geometryFieldName:String,fieldNames:Seq[String]):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(dataFrame: DataFrame, geometryFieldName: String): SpatialRDD[Geometry]", "member" : "org.apache.sedona.sql.utils.Adapter.toSpatialRdd", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toSpatialRdd(dataFrame:org.apache.spark.sql.DataFrame,geometryFieldName:String):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/Adapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.utils.GeometrySerializer", "shortDescription" : "SerDe using the WKB reader and writer objects", "object" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html", "members_object" : [{"label" : "deserialize", "tail" : "(value: Array[Byte]): Geometry", "member" : "org.apache.sedona.sql.utils.GeometrySerializer.deserialize", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#deserialize(value:Array[Byte]):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "serialize", "tail" : "(geometry: Geometry): Array[Byte]", "member" : "org.apache.sedona.sql.utils.GeometrySerializer.serialize", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#serialize(geometry:org.locationtech.jts.geom.Geometry):Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/GeometrySerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.utils.GeoToolsCoverageAvailability", "shortDescription" : "A helper object to check if GeoTools GridCoverage2D is available on the classpath.", "object" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html", "members_object" : [{"label" : "isGeoToolsAvailable", "tail" : ": Boolean", "member" : "org.apache.sedona.sql.utils.GeoToolsCoverageAvailability.isGeoToolsAvailable", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#isGeoToolsAvailable:Boolean", "kind" : "lazy val"}, {"label" : "gridClassName", "tail" : ": String", "member" : "org.apache.sedona.sql.utils.GeoToolsCoverageAvailability.gridClassName", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#gridClassName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/GeoToolsCoverageAvailability$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.utils.IndexSerializer", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html", "members_object" : [{"label" : "deserialize", "tail" : "(values: ArrayData): SpatialIndex", "member" : "org.apache.sedona.sql.utils.IndexSerializer.deserialize", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#deserialize(values:org.apache.spark.sql.catalyst.util.ArrayData):org.locationtech.jts.index.SpatialIndex", "kind" : "def"}, {"label" : "serialize", "tail" : "(index: SpatialIndex): Array[Byte]", "member" : "org.apache.sedona.sql.utils.IndexSerializer.serialize", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#serialize(index:org.locationtech.jts.index.SpatialIndex):Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/IndexSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.utils.RasterSerializer", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html", "members_object" : [{"label" : "deserialize", "tail" : "(value: Array[Byte]): GridCoverage2D", "member" : "org.apache.sedona.sql.utils.RasterSerializer.deserialize", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#deserialize(value:Array[Byte]):org.geotools.coverage.grid.GridCoverage2D", "kind" : "def"}, {"label" : "serialize", "tail" : "(raster: GridCoverage2D): Array[Byte]", "member" : "org.apache.sedona.sql.utils.RasterSerializer.serialize", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#serialize(raster:org.geotools.coverage.grid.GridCoverage2D):Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/RasterSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.utils.SedonaSQLRegistrator", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html", "members_object" : [{"label" : "dropAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.sql.utils.SedonaSQLRegistrator.dropAll", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#dropAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sparkSession: SparkSession, language: String): Unit", "member" : "org.apache.sedona.sql.utils.SedonaSQLRegistrator.registerAll", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#registerAll(sparkSession:org.apache.spark.sql.SparkSession,language:String):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sqlContext: SQLContext, language: String): Unit", "member" : "org.apache.sedona.sql.utils.SedonaSQLRegistrator.registerAll", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#registerAll(sqlContext:org.apache.spark.sql.SQLContext,language:String):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.sql.utils.SedonaSQLRegistrator.registerAll", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#registerAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sqlContext: SQLContext): Unit", "member" : "org.apache.sedona.sql.utils.SedonaSQLRegistrator.registerAll", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#registerAll(sqlContext:org.apache.spark.sql.SQLContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/utils\/SedonaSQLRegistrator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.viz.extension.visualizationEffect" : [{"name" : "org.apache.sedona.viz.extension.visualizationEffect.ChoroplethMap", "shortDescription" : "The Class ChoroplethMap.", "members_class" : [{"label" : "Visualize", "tail" : "(sparkContext: JavaSparkContext, spatialPairRDD: JavaPairRDD[Polygon, Long]): Boolean", "member" : "org.apache.sedona.viz.extension.visualizationEffect.ChoroplethMap.Visualize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#Visualize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Polygon,Long]):Boolean", "kind" : "def"}, {"label" : "EncodeToColor", "tail" : "(normalizedCount: Int): Color", "member" : "org.apache.sedona.viz.extension.visualizationEffect.ChoroplethMap.EncodeToColor", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#EncodeToColor(normalizedCount:Int):java.awt.Color", "kind" : "def"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ChoroplethMap#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ChoroplethMap#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ChoroplethMap#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ChoroplethMap#<init>", "error" : "unsupported entity"}, {"label" : "Rasterize", "tail" : "(sparkContext: JavaSparkContext, spatialPairRDD: JavaPairRDD[Polygon, Long], useSparkDefaultPartition: Boolean): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Rasterize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#Rasterize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Polygon,Long],useSparkDefaultPartition:Boolean):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "Rasterize", "tail" : "(sparkContext: JavaSparkContext, spatialRDD: SpatialRDD, useSparkDefaultPartition: Boolean): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Rasterize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#Rasterize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD,useSparkDefaultPartition:Boolean):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "EncodeToRGB", "tail" : "(normalizedCount: Int): Integer", "member" : "org.apache.sedona.viz.core.VisualizationOperator.EncodeToRGB", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#EncodeToRGB(normalizedCount:Int):Integer", "kind" : "def"}, {"label" : "CustomizeColor", "tail" : "(red: Int, green: Int, blue: Int, colorAlpha: Int, controlColorChannel: Color, useInverseRatioForControlColorChannel: Boolean): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.CustomizeColor", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#CustomizeColor(red:Int,green:Int,blue:Int,colorAlpha:Int,controlColorChannel:java.awt.Color,useInverseRatioForControlColorChannel:Boolean):Boolean", "kind" : "def"}, {"label" : "setMaxPixelCount", "tail" : "(maxPixelCount: Double): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.setMaxPixelCount", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#setMaxPixelCount(maxPixelCount:Double):Boolean", "kind" : "def"}, {"label" : "RenderImage", "tail" : "(sparkContext: JavaSparkContext): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.RenderImage", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#RenderImage(sparkContext:org.apache.spark.api.java.JavaSparkContext):Boolean", "kind" : "def"}, {"label" : "Colorize", "tail" : "(): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Colorize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#Colorize():Boolean", "kind" : "def"}, {"label" : "ApplyPhotoFilter", "tail" : "(sparkContext: JavaSparkContext): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.ApplyPhotoFilter", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#ApplyPhotoFilter(sparkContext:org.apache.spark.api.java.JavaSparkContext):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "InitPhotoFilterWeightMatrix", "tail" : "(photoFilter: PhotoFilter): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.InitPhotoFilterWeightMatrix", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#InitPhotoFilterWeightMatrix(photoFilter:org.apache.sedona.viz.core.PhotoFilter):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ChoroplethMap.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.visualizationEffect.HeatMap", "shortDescription" : "The Class HeatMap.", "members_class" : [{"label" : "Visualize", "tail" : "(sparkContext: JavaSparkContext, spatialRDD: SpatialRDD[_ <: Geometry]): Boolean", "member" : "org.apache.sedona.viz.extension.visualizationEffect.HeatMap.Visualize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#Visualize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[_<:org.locationtech.jts.geom.Geometry]):Boolean", "kind" : "def"}, {"label" : "EncodeToRGB", "tail" : "(normalizedCount: Int): Integer", "member" : "org.apache.sedona.viz.extension.visualizationEffect.HeatMap.EncodeToRGB", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#EncodeToRGB(normalizedCount:Int):Integer", "kind" : "def"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.HeatMap#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.HeatMap#<init>", "error" : "unsupported entity"}, {"label" : "Rasterize", "tail" : "(sparkContext: JavaSparkContext, spatialPairRDD: JavaPairRDD[Polygon, Long], useSparkDefaultPartition: Boolean): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Rasterize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#Rasterize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Polygon,Long],useSparkDefaultPartition:Boolean):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "Rasterize", "tail" : "(sparkContext: JavaSparkContext, spatialRDD: SpatialRDD, useSparkDefaultPartition: Boolean): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Rasterize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#Rasterize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD,useSparkDefaultPartition:Boolean):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "EncodeToColor", "tail" : "(normalizedCount: Int): Color", "member" : "org.apache.sedona.viz.core.VisualizationOperator.EncodeToColor", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#EncodeToColor(normalizedCount:Int):java.awt.Color", "kind" : "def"}, {"label" : "CustomizeColor", "tail" : "(red: Int, green: Int, blue: Int, colorAlpha: Int, controlColorChannel: Color, useInverseRatioForControlColorChannel: Boolean): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.CustomizeColor", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#CustomizeColor(red:Int,green:Int,blue:Int,colorAlpha:Int,controlColorChannel:java.awt.Color,useInverseRatioForControlColorChannel:Boolean):Boolean", "kind" : "def"}, {"label" : "setMaxPixelCount", "tail" : "(maxPixelCount: Double): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.setMaxPixelCount", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#setMaxPixelCount(maxPixelCount:Double):Boolean", "kind" : "def"}, {"label" : "RenderImage", "tail" : "(sparkContext: JavaSparkContext): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.RenderImage", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#RenderImage(sparkContext:org.apache.spark.api.java.JavaSparkContext):Boolean", "kind" : "def"}, {"label" : "Colorize", "tail" : "(): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Colorize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#Colorize():Boolean", "kind" : "def"}, {"label" : "ApplyPhotoFilter", "tail" : "(sparkContext: JavaSparkContext): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.ApplyPhotoFilter", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#ApplyPhotoFilter(sparkContext:org.apache.spark.api.java.JavaSparkContext):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "InitPhotoFilterWeightMatrix", "tail" : "(photoFilter: PhotoFilter): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.InitPhotoFilterWeightMatrix", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#InitPhotoFilterWeightMatrix(photoFilter:org.apache.sedona.viz.core.PhotoFilter):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/HeatMap.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot", "shortDescription" : "The Class ScatterPlot.", "members_class" : [{"label" : "Visualize", "tail" : "(sparkContext: JavaSparkContext, spatialRDD: SpatialRDD[_ <: Geometry]): Boolean", "member" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot.Visualize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#Visualize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[_<:org.locationtech.jts.geom.Geometry]):Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.viz.extension.visualizationEffect.ScatterPlot#<init>", "error" : "unsupported entity"}, {"label" : "Rasterize", "tail" : "(sparkContext: JavaSparkContext, spatialPairRDD: JavaPairRDD[Polygon, Long], useSparkDefaultPartition: Boolean): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Rasterize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#Rasterize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Polygon,Long],useSparkDefaultPartition:Boolean):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "Rasterize", "tail" : "(sparkContext: JavaSparkContext, spatialRDD: SpatialRDD, useSparkDefaultPartition: Boolean): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Rasterize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#Rasterize(sparkContext:org.apache.spark.api.java.JavaSparkContext,spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD,useSparkDefaultPartition:Boolean):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "EncodeToRGB", "tail" : "(normalizedCount: Int): Integer", "member" : "org.apache.sedona.viz.core.VisualizationOperator.EncodeToRGB", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#EncodeToRGB(normalizedCount:Int):Integer", "kind" : "def"}, {"label" : "EncodeToColor", "tail" : "(normalizedCount: Int): Color", "member" : "org.apache.sedona.viz.core.VisualizationOperator.EncodeToColor", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#EncodeToColor(normalizedCount:Int):java.awt.Color", "kind" : "def"}, {"label" : "CustomizeColor", "tail" : "(red: Int, green: Int, blue: Int, colorAlpha: Int, controlColorChannel: Color, useInverseRatioForControlColorChannel: Boolean): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.CustomizeColor", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#CustomizeColor(red:Int,green:Int,blue:Int,colorAlpha:Int,controlColorChannel:java.awt.Color,useInverseRatioForControlColorChannel:Boolean):Boolean", "kind" : "def"}, {"label" : "setMaxPixelCount", "tail" : "(maxPixelCount: Double): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.setMaxPixelCount", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#setMaxPixelCount(maxPixelCount:Double):Boolean", "kind" : "def"}, {"label" : "RenderImage", "tail" : "(sparkContext: JavaSparkContext): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.RenderImage", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#RenderImage(sparkContext:org.apache.spark.api.java.JavaSparkContext):Boolean", "kind" : "def"}, {"label" : "Colorize", "tail" : "(): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.Colorize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#Colorize():Boolean", "kind" : "def"}, {"label" : "ApplyPhotoFilter", "tail" : "(sparkContext: JavaSparkContext): JavaPairRDD[Pixel, Double]", "member" : "org.apache.sedona.viz.core.VisualizationOperator.ApplyPhotoFilter", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#ApplyPhotoFilter(sparkContext:org.apache.spark.api.java.JavaSparkContext):org.apache.spark.api.java.JavaPairRDD[org.apache.sedona.viz.utils.Pixel,Double]", "kind" : "def"}, {"label" : "InitPhotoFilterWeightMatrix", "tail" : "(photoFilter: PhotoFilter): Boolean", "member" : "org.apache.sedona.viz.core.VisualizationOperator.InitPhotoFilterWeightMatrix", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#InitPhotoFilterWeightMatrix(photoFilter:org.apache.sedona.viz.core.PhotoFilter):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/visualizationEffect\/ScatterPlot.html", "kind" : "class"}], "org.apache.sedona.viz.extension.photoFilter" : [{"name" : "org.apache.sedona.viz.extension.photoFilter.BoxBlur", "shortDescription" : "The Class BoxBlur.", "members_class" : [{"member" : "org.apache.sedona.viz.extension.photoFilter.BoxBlur#<init>", "error" : "unsupported entity"}, {"label" : "getConvolutionMatrix", "tail" : "(): Array[Array[Double]]", "member" : "org.apache.sedona.viz.core.PhotoFilter.getConvolutionMatrix", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#getConvolutionMatrix():Array[Array[Double]]", "kind" : "def"}, {"label" : "getFilterRadius", "tail" : "(): Int", "member" : "org.apache.sedona.viz.core.PhotoFilter.getFilterRadius", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#getFilterRadius():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/BoxBlur.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.photoFilter.Emboss", "shortDescription" : "The Class Emboss.", "members_class" : [{"member" : "org.apache.sedona.viz.extension.photoFilter.Emboss#<init>", "error" : "unsupported entity"}, {"label" : "getConvolutionMatrix", "tail" : "(): Array[Array[Double]]", "member" : "org.apache.sedona.viz.core.PhotoFilter.getConvolutionMatrix", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#getConvolutionMatrix():Array[Array[Double]]", "kind" : "def"}, {"label" : "getFilterRadius", "tail" : "(): Int", "member" : "org.apache.sedona.viz.core.PhotoFilter.getFilterRadius", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#getFilterRadius():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Emboss.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.photoFilter.GaussianBlur", "shortDescription" : "The Class GaussianBlur.", "members_class" : [{"member" : "org.apache.sedona.viz.extension.photoFilter.GaussianBlur#<init>", "error" : "unsupported entity"}, {"label" : "getConvolutionMatrix", "tail" : "(): Array[Array[Double]]", "member" : "org.apache.sedona.viz.core.PhotoFilter.getConvolutionMatrix", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#getConvolutionMatrix():Array[Array[Double]]", "kind" : "def"}, {"label" : "getFilterRadius", "tail" : "(): Int", "member" : "org.apache.sedona.viz.core.PhotoFilter.getFilterRadius", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#getFilterRadius():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/GaussianBlur.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.photoFilter.Outline", "shortDescription" : "The Class Outline.", "members_class" : [{"member" : "org.apache.sedona.viz.extension.photoFilter.Outline#<init>", "error" : "unsupported entity"}, {"label" : "getConvolutionMatrix", "tail" : "(): Array[Array[Double]]", "member" : "org.apache.sedona.viz.core.PhotoFilter.getConvolutionMatrix", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#getConvolutionMatrix():Array[Array[Double]]", "kind" : "def"}, {"label" : "getFilterRadius", "tail" : "(): Int", "member" : "org.apache.sedona.viz.core.PhotoFilter.getFilterRadius", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#getFilterRadius():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Outline.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.extension.photoFilter.Sharpen", "shortDescription" : "The Class Sharpen.", "members_class" : [{"member" : "org.apache.sedona.viz.extension.photoFilter.Sharpen#<init>", "error" : "unsupported entity"}, {"label" : "getConvolutionMatrix", "tail" : "(): Array[Array[Double]]", "member" : "org.apache.sedona.viz.core.PhotoFilter.getConvolutionMatrix", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#getConvolutionMatrix():Array[Array[Double]]", "kind" : "def"}, {"label" : "getFilterRadius", "tail" : "(): Int", "member" : "org.apache.sedona.viz.core.PhotoFilter.getFilterRadius", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#getFilterRadius():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/photoFilter\/Sharpen.html", "kind" : "class"}], "org.apache.sedona.sql.datasources.osmpbf.features" : [{"name" : "org.apache.sedona.sql.datasources.osmpbf.features.TagsResolver", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.sql.datasources.osmpbf.features.TagsResolver#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/features\/TagsResolver.html", "kind" : "class"}], "org.apache.sedona.sql.datasources.geopackage.model" : [{"name" : "org.apache.sedona.sql.datasources.geopackage.model.Envelope", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.sedona.sql.datasources.geopackage.model.Envelope#<init>", "error" : "unsupported entity"}, {"label" : "maxY", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.Envelope.maxY", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#maxY:Double", "kind" : "val"}, {"label" : "maxX", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.Envelope.maxX", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#maxX:Double", "kind" : "val"}, {"label" : "minY", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.Envelope.minY", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#minY:Double", "kind" : "val"}, {"label" : "minX", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.Envelope.minX", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#minX:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/Envelope.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField", "shortDescription" : "", "members_case class" : [{"label" : "toStructField", "tail" : "(tableType: TableType): StructField", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField.toStructField", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#toStructField(tableType:org.apache.sedona.sql.datasources.geopackage.model.TableType.TableType):org.apache.spark.sql.types.StructField", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#toString():String", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField#<init>", "error" : "unsupported entity"}, {"label" : "isNullable", "tail" : ": Boolean", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField.isNullable", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#isNullable:Boolean", "kind" : "val"}, {"label" : "dataType", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField.dataType", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#dataType:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField.name", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageField.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageLoadOptions", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageLoadOptions#<init>", "error" : "unsupported entity"}, {"label" : "tableName", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageLoadOptions.tableName", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#tableName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageLoadOptions.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageOptions", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageOptions#<init>", "error" : "unsupported entity"}, {"label" : "showMetadata", "tail" : ": Boolean", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageOptions.showMetadata", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#showMetadata:Boolean", "kind" : "val"}, {"label" : "tableName", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageOptions.tableName", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#tableName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageOptions.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageReadOptions", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageReadOptions#<init>", "error" : "unsupported entity"}, {"label" : "currentFile", "tail" : ": PartitionedFile", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageReadOptions.currentFile", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#currentFile:org.apache.spark.sql.execution.datasources.PartitionedFile", "kind" : "val"}, {"label" : "partitionedFiles", "tail" : ": HashSet[PartitionedFile]", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageReadOptions.partitionedFiles", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#partitionedFiles:scala.collection.mutable.HashSet[org.apache.spark.sql.execution.datasources.PartitionedFile]", "kind" : "val"}, {"label" : "partitionOptions", "tail" : ": PartitionOptions", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageReadOptions.partitionOptions", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#partitionOptions:org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions", "kind" : "val"}, {"label" : "tempFile", "tail" : ": File", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageReadOptions.tempFile", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#tempFile:java.io.File", "kind" : "val"}, {"label" : "tableName", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageReadOptions.tableName", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#tableName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageReadOptions.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html", "members_object" : [{"label" : "DOUBLE", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.DOUBLE", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#DOUBLE:String", "kind" : "val"}, {"label" : "FLOAT", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.FLOAT", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#FLOAT:String", "kind" : "val"}, {"label" : "MEDIUMINT", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.MEDIUMINT", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#MEDIUMINT:String", "kind" : "val"}, {"label" : "SMALLINT", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.SMALLINT", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#SMALLINT:String", "kind" : "val"}, {"label" : "TINY_INT", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.TINY_INT", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#TINY_INT:String", "kind" : "val"}, {"label" : "DATETIME", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.DATETIME", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#DATETIME:String", "kind" : "val"}, {"label" : "DATE", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.DATE", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#DATE:String", "kind" : "val"}, {"label" : "BOOLEAN", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.BOOLEAN", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#BOOLEAN:String", "kind" : "val"}, {"label" : "BLOB", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.BLOB", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#BLOB:String", "kind" : "val"}, {"label" : "TEXT", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.TEXT", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#TEXT:String", "kind" : "var"}, {"label" : "REAL", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.REAL", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#REAL:String", "kind" : "val"}, {"label" : "INTEGER", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.INTEGER", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#INTEGER:String", "kind" : "val"}, {"label" : "INT", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.INT", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#INT:String", "kind" : "val"}, {"label" : "GEOMETRYCOLLECTION", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.GEOMETRYCOLLECTION", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#GEOMETRYCOLLECTION:String", "kind" : "val"}, {"label" : "MULTIPOLYGON", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.MULTIPOLYGON", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#MULTIPOLYGON:String", "kind" : "val"}, {"label" : "MULTILINESTRING", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.MULTILINESTRING", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#MULTILINESTRING:String", "kind" : "val"}, {"label" : "MULTIPOINT", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.MULTIPOINT", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#MULTIPOINT:String", "kind" : "val"}, {"label" : "GEOMETRY", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.GEOMETRY", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#GEOMETRY:String", "kind" : "val"}, {"label" : "POLYGON", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.POLYGON", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#POLYGON:String", "kind" : "val"}, {"label" : "LINESTRING", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.LINESTRING", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#LINESTRING:String", "kind" : "val"}, {"label" : "POINT", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.GeoPackageType.POINT", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#POINT:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/GeoPackageType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "UNKNOWN", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.UNKNOWN", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#UNKNOWN:org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.Value", "kind" : "val"}, {"label" : "TIFF", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.TIFF", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#TIFF:org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.Value", "kind" : "val"}, {"label" : "WEBP", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.WEBP", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#WEBP:org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.Value", "kind" : "val"}, {"label" : "JPEG", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.JPEG", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#JPEG:org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.Value", "kind" : "val"}, {"label" : "PNG", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.PNG", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#PNG:org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.Value", "kind" : "val"}, {"label" : "ImageFileFormat", "tail" : "", "member" : "org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.ImageFileFormat", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#ImageFileFormat=org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/ImageFileFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.MetadataSchema", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html", "members_object" : [{"label" : "schema", "tail" : "(): Option[StructType]", "member" : "org.apache.sedona.sql.datasources.geopackage.model.MetadataSchema.schema", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/MetadataSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions", "shortDescription" : "", "members_case class" : [{"label" : "withTileRowMetadata", "tail" : "(tileRowMetadata: TileRowMetadata): PartitionOptions", "member" : "org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions.withTileRowMetadata", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#withTileRowMetadata(tileRowMetadata:org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata):org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions", "kind" : "def"}, {"label" : "withTile", "tail" : "(tile: TileMetadata): PartitionOptions", "member" : "org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions.withTile", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#withTile(tile:org.apache.sedona.sql.datasources.geopackage.model.TileMetadata):org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions#<init>", "error" : "unsupported entity"}, {"label" : "tableType", "tail" : ": TableType", "member" : "org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions.tableType", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#tableType:org.apache.sedona.sql.datasources.geopackage.model.TableType.TableType", "kind" : "val"}, {"label" : "tile", "tail" : ": Option[TileMetadata]", "member" : "org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions.tile", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#tile:Option[org.apache.sedona.sql.datasources.geopackage.model.TileMetadata]", "kind" : "val"}, {"label" : "columns", "tail" : ": Seq[GeoPackageField]", "member" : "org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions.columns", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#columns:Seq[org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/PartitionOptions.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.TableType", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "UNKNOWN", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TableType.UNKNOWN", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#UNKNOWN:org.apache.sedona.sql.datasources.geopackage.model.TableType.Value", "kind" : "val"}, {"label" : "METADATA", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TableType.METADATA", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#METADATA:org.apache.sedona.sql.datasources.geopackage.model.TableType.Value", "kind" : "val"}, {"label" : "TILES", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TableType.TILES", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#TILES:org.apache.sedona.sql.datasources.geopackage.model.TableType.Value", "kind" : "val"}, {"label" : "FEATURES", "tail" : ": Value", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TableType.FEATURES", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#FEATURES:org.apache.sedona.sql.datasources.geopackage.model.TableType.Value", "kind" : "val"}, {"label" : "TableType", "tail" : "", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TableType.TableType", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#TableType=org.apache.sedona.sql.datasources.geopackage.model.TableType.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TableType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix#<init>", "error" : "unsupported entity"}, {"label" : "pixelYSize", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix.pixelYSize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#pixelYSize:Double", "kind" : "val"}, {"label" : "pixelXSize", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix.pixelXSize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#pixelXSize:Double", "kind" : "val"}, {"label" : "tileHeight", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix.tileHeight", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#tileHeight:Int", "kind" : "val"}, {"label" : "tileWidth", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix.tileWidth", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#tileWidth:Int", "kind" : "val"}, {"label" : "matrixHeight", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix.matrixHeight", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#matrixHeight:Int", "kind" : "val"}, {"label" : "matrixWidth", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix.matrixWidth", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#matrixWidth:Int", "kind" : "val"}, {"label" : "zoomLevel", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMatrix.zoomLevel", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#zoomLevel:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMatrix.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata", "shortDescription" : "", "members_case class" : [{"label" : "getEnvelope", "tail" : "(tileRowMetadata: TileRowMetadata): Envelope", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.getEnvelope", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#getEnvelope(tileRowMetadata:org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata):org.apache.sedona.sql.datasources.geopackage.model.Envelope", "kind" : "def"}, {"label" : "getSRID", "tail" : "(): CoordinateReferenceSystem", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.getSRID", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#getSRID():org.geotools.api.referencing.crs.CoordinateReferenceSystem", "kind" : "def"}, {"label" : "withTileRowMetadata", "tail" : "(tileRowMetadata: TileRowMetadata): TileMetadata", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.withTileRowMetadata", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#withTileRowMetadata(tileRowMetadata:org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata):org.apache.sedona.sql.datasources.geopackage.model.TileMetadata", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata#<init>", "error" : "unsupported entity"}, {"label" : "tileRowMetadata", "tail" : ": Option[TileRowMetadata]", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.tileRowMetadata", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#tileRowMetadata:Option[org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata]", "kind" : "val"}, {"label" : "zoomLevelMetadata", "tail" : ": HashMap[Int, TileMatrix]", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.zoomLevelMetadata", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#zoomLevelMetadata:scala.collection.mutable.HashMap[Int,org.apache.sedona.sql.datasources.geopackage.model.TileMatrix]", "kind" : "val"}, {"label" : "srsID", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.srsID", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#srsID:Int", "kind" : "val"}, {"label" : "maxY", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.maxY", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#maxY:Double", "kind" : "val"}, {"label" : "maxX", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.maxX", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#maxX:Double", "kind" : "val"}, {"label" : "minY", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.minY", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#minY:Double", "kind" : "val"}, {"label" : "minX", "tail" : ": Double", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.minX", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#minX:Double", "kind" : "val"}, {"label" : "tableName", "tail" : ": String", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileMetadata.tableName", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#tableName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileMetadata.html", "kind" : "case class"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata#<init>", "error" : "unsupported entity"}, {"label" : "zoomLevel", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata.zoomLevel", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#zoomLevel:Int", "kind" : "val"}, {"label" : "tileRow", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata.tileRow", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#tileRow:Int", "kind" : "val"}, {"label" : "tileColumn", "tail" : ": Int", "member" : "org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata.tileColumn", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#tileColumn:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/model\/TileRowMetadata.html", "kind" : "case class"}], "org.apache.sedona.sql.datasources.geopackage.transform" : [{"name" : "org.apache.sedona.sql.datasources.geopackage.transform.DataTypesTransformations", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html", "members_object" : [{"label" : "epoch", "tail" : "(timestampStr: String): Long", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.DataTypesTransformations.epoch", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#epoch(timestampStr:String):Long", "kind" : "def"}, {"label" : "getDays", "tail" : "(dateString: String): Int", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.DataTypesTransformations.getDays", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#getDays(dateString:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/DataTypesTransformations$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.transform.GeometryReader", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html", "members_object" : [{"label" : "skipEnvelope", "tail" : "(value: Any, buffer: ByteBuffer): Any", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.GeometryReader.skipEnvelope", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#skipEnvelope(value:Any,buffer:java.nio.ByteBuffer):Any", "kind" : "def"}, {"label" : "extractWKB", "tail" : "(gpkgGeom: Array[Byte]): Array[Byte]", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.GeometryReader.extractWKB", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#extractWKB(gpkgGeom:Array[Byte]):Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/GeometryReader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.transform.Image", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html", "members_object" : [{"label" : "readImageFromBinary", "tail" : "(imageBinary: Array[Byte]): BufferedImage", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.Image.readImageFromBinary", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#readImageFromBinary(imageBinary:Array[Byte]):java.awt.image.BufferedImage", "kind" : "def"}, {"label" : "createGridCoverage2D", "tail" : "(image: BufferedImage, tileMetadata: TileMetadata, tileRowMetadata: TileRowMetadata): GridCoverage2D", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.Image.createGridCoverage2D", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#createGridCoverage2D(image:java.awt.image.BufferedImage,tileMetadata:org.apache.sedona.sql.datasources.geopackage.model.TileMetadata,tileRowMetadata:org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata):org.geotools.coverage.grid.GridCoverage2D", "kind" : "def"}, {"label" : "bytesToHex", "tail" : "(bytes: Array[Byte]): String", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.Image.bytesToHex", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#bytesToHex(bytes:Array[Byte]):String", "kind" : "def"}, {"label" : "detectFileFormat", "tail" : "(byteArray: Array[Byte]): ImageFileFormat", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.Image.detectFileFormat", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#detectFileFormat(byteArray:Array[Byte]):org.apache.sedona.sql.datasources.geopackage.model.ImageFileFormat.ImageFileFormat", "kind" : "def"}, {"label" : "readImageFile", "tail" : "(byteArray: Array[Byte], tileMetadata: TileMetadata, tileRowMetadata: TileRowMetadata): GridCoverage2D", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.Image.readImageFile", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#readImageFile(byteArray:Array[Byte],tileMetadata:org.apache.sedona.sql.datasources.geopackage.model.TileMetadata,tileRowMetadata:org.apache.sedona.sql.datasources.geopackage.model.TileRowMetadata):org.geotools.coverage.grid.GridCoverage2D", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/Image$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.transform.ValuesMapper", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html", "members_object" : [{"label" : "mapValues", "tail" : "(metadata: PartitionOptions, rs: ResultSet): Seq[Any]", "member" : "org.apache.sedona.sql.datasources.geopackage.transform.ValuesMapper.mapValues", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#mapValues(metadata:org.apache.sedona.sql.datasources.geopackage.model.PartitionOptions,rs:java.sql.ResultSet):Seq[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/transform\/ValuesMapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.core.spatialRddTool" : [{"name" : "org.apache.sedona.core.spatialRddTool.IndexBuilder", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(objectIterator: Iterator[T]): Iterator[SpatialIndex]", "member" : "org.apache.sedona.core.spatialRddTool.IndexBuilder.call", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#call(objectIterator:java.util.Iterator[T]):java.util.Iterator[org.locationtech.jts.index.SpatialIndex]", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialRddTool.IndexBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialRddTool\/IndexBuilder.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialRddTool.StatCalculator", "shortDescription" : "", "members_class" : [{"label" : "getCount", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRddTool.StatCalculator.getCount", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#getCount():Long", "kind" : "def"}, {"label" : "getBoundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialRddTool.StatCalculator.getBoundary", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#getBoundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialRddTool.StatCalculator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialRddTool\/StatCalculator.html", "kind" : "class"}], "org.apache.spark.sql.sedona_sql.expressions" : [{"name" : "org.apache.spark.sql.sedona_sql.expressions.DataframePhysicalFunction", "members_trait" : [{"label" : "execute", "tail" : "(plan: SparkPlan, resultAttrs: Seq[Attribute]): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.expressions.DataframePhysicalFunction.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#execute(plan:org.apache.spark.sql.execution.SparkPlan,resultAttrs:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]):org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "getResultName", "tail" : "(resultAttrs: Seq[Attribute]): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.getResultName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#getResultName(resultAttrs:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]):String", "kind" : "def"}, {"label" : "getInputNames", "tail" : "(i: Int, fieldName: String): Seq[String]", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.getInputNames", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#getInputNames(i:Int,fieldName:String):Seq[String]", "kind" : "def"}, {"label" : "getScalarValue", "tail" : "(i: Int, name: String)(ct: ClassTag[T]): T", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.getScalarValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#getScalarValue[T](i:Int,name:String)(implicitct:scala.reflect.ClassTag[T]):T", "kind" : "def"}, {"label" : "getInputName", "tail" : "(i: Int, fieldName: String): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.getInputName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#getInputName(i:Int,fieldName:String):String", "kind" : "def"}, {"label" : "geometryColumnName", "tail" : ": String", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.geometryColumnName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#geometryColumnName:String", "kind" : "final lazy val"}, {"label" : "sparkSession", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.sparkSession", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "final lazy val"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#nullable:Boolean", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#deterministic:Boolean", "kind" : "final lazy val"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Unevaluable.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "final def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.catalyst.expressions.Unevaluable.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "final def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Unevaluable.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#foldable:Boolean", "kind" : "final def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transformDataframe", "tail" : "(dataframe: DataFrame, resultAttrs: Seq[Attribute]): DataFrame", "member" : "org.apache.spark.sql.sedona_sql.expressions.DataframePhysicalFunction.transformDataframe", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#transformDataframe(dataframe:org.apache.spark.sql.DataFrame,resultAttrs:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]):org.apache.spark.sql.DataFrame", "kind" : "abstract def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "abstract def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "abstract def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#withNewChildrenInternal(newChildren:IndexedSeq[BaseType]):BaseType", "kind" : "abstract def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#children:Seq[BaseType]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "DataframePhysicalFunctions are Functions that will be replaced with a Physical Node for theirevaluation.", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/DataframePhysicalFunction.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression", "members_trait" : [{"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#foldable:Boolean", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "abstract def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "abstract def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#nullable:Boolean", "kind" : "abstract def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#withNewChildrenInternal(newChildren:IndexedSeq[BaseType]):BaseType", "kind" : "abstract def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#children:Seq[BaseType]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Make expression foldable by constant folding optimizer.", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FoldableExpression.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.FunctionResolver", "shortDescription" : "A utility object for resolving functions based on input argument types.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html", "members_object" : [{"label" : "resolveFunction", "tail" : "(expressions: Seq[Expression], functionOverloads: Seq[InferrableFunction]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.FunctionResolver.resolveFunction", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#resolveFunction(expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression],functionOverloads:Seq[org.apache.spark.sql.sedona_sql.expressions.InferrableFunction]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/FunctionResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.implicits", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html", "members_object" : [{"label" : "GeographyEnhancer", "tail" : "", "member" : "org.apache.spark.sql.sedona_sql.expressions.implicits.GeographyEnhancer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#GeographyEnhancerextendsAnyRef", "kind" : "implicit class"}, {"label" : "GeometryEnhancer", "tail" : "", "member" : "org.apache.spark.sql.sedona_sql.expressions.implicits.GeometryEnhancer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#GeometryEnhancerextendsAnyRef", "kind" : "implicit class"}, {"label" : "ArrayDataEnhancer", "tail" : "", "member" : "org.apache.spark.sql.sedona_sql.expressions.implicits.ArrayDataEnhancer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#ArrayDataEnhancerextendsAnyRef", "kind" : "implicit class"}, {"label" : "SequenceEnhancer", "tail" : "", "member" : "org.apache.spark.sql.sedona_sql.expressions.implicits.SequenceEnhancer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#SequenceEnhancer[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "InputExpressionEnhancer", "tail" : "", "member" : "org.apache.spark.sql.sedona_sql.expressions.implicits.InputExpressionEnhancer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#InputExpressionEnhancerextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html", "members_object" : [{"label" : "allowRightNull", "tail" : "(f: (A1, A2) â‡’ R)(typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction.allowRightNull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#allowRightNull[R,A1,A2](f:(A1,A2)=>R)(implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "apply", "tail" : "(typeTag: scala.reflect.api.JavaUniverse.TypeTag[_], evaluatorBuilder: (Array[(InternalRow) â‡’ Any]) â‡’ (InternalRow) â‡’ Any): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#apply(typeTag:reflect.runtime.universe.TypeTag[_],evaluatorBuilder:Array[org.apache.spark.sql.catalyst.InternalRow=>Any]=>(org.apache.spark.sql.catalyst.InternalRow=>Any)):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction#<init>", "error" : "unsupported entity"}, {"label" : "evaluatorBuilder", "tail" : ": (Array[(InternalRow) â‡’ Any]) â‡’ (InternalRow) â‡’ Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction.evaluatorBuilder", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#evaluatorBuilder:Array[org.apache.spark.sql.catalyst.InternalRow=>Any]=>(org.apache.spark.sql.catalyst.InternalRow=>Any)", "kind" : "val"}, {"label" : "argExtractorBuilders", "tail" : ": Seq[(Expression) â‡’ (InternalRow) â‡’ Any]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction.argExtractorBuilders", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#argExtractorBuilders:Seq[org.apache.spark.sql.catalyst.expressions.Expression=>(org.apache.spark.sql.catalyst.InternalRow=>Any)]", "kind" : "val"}, {"label" : "serializer", "tail" : ": (Any) â‡’ Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction.serializer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#serializer:Any=>Any", "kind" : "val"}, {"label" : "sparkReturnType", "tail" : ": DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction.sparkReturnType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#sparkReturnType:org.apache.spark.sql.types.DataType", "kind" : "val"}, {"label" : "sparkInputTypes", "tail" : ": Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunction.sparkInputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#sparkInputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunction.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter", "shortDescription" : "Implicit conversions from Java\/Scala functions to InferrableFunction.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html", "members_object" : [{"label" : "nullTolerantInferrableFunction16", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], arg13: InferrableType[A13], arg14: InferrableType[A14], arg15: InferrableType[A15], arg16: InferrableType[A16], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction16", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction16[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>R)(implicitevidence$288:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$289:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$290:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$291:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$292:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$293:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$294:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$295:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$296:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$297:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$298:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$299:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$300:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicitevidence$301:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A13],implicitevidence$302:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A14],implicitevidence$303:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A15],implicitevidence$304:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A16],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction15", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], arg13: InferrableType[A13], arg14: InferrableType[A14], arg15: InferrableType[A15], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction15", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction15[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>R)(implicitevidence$272:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$273:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$274:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$275:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$276:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$277:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$278:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$279:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$280:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$281:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$282:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$283:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$284:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicitevidence$285:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A13],implicitevidence$286:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A14],implicitevidence$287:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A15],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction14", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], arg13: InferrableType[A13], arg14: InferrableType[A14], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction14", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction14[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>R)(implicitevidence$257:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$258:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$259:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$260:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$261:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$262:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$263:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$264:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$265:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$266:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$267:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$268:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$269:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicitevidence$270:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A13],implicitevidence$271:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A14],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction13", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], arg13: InferrableType[A13], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction13", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction13[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>R)(implicitevidence$243:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$244:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$245:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$246:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$247:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$248:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$249:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$250:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$251:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$252:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$253:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$254:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$255:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicitevidence$256:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A13],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction12", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction12", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction12[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>R)(implicitevidence$230:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$231:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$232:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$233:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$234:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$235:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$236:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$237:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$238:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$239:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$240:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$241:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$242:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction11", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction11", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction11[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>R)(implicitevidence$218:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$219:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$220:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$221:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$222:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$223:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$224:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$225:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$226:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$227:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$228:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$229:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction10", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction10", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction10[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>R)(implicitevidence$207:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$208:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$209:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$210:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$211:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$212:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$213:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$214:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$215:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$216:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$217:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction9", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction9", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction9[R,A1,A2,A3,A4,A5,A6,A7,A8,A9](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>R)(implicitevidence$197:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$198:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$199:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$200:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$201:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$202:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$203:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$204:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$205:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$206:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction8", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction8", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction8[R,A1,A2,A3,A4,A5,A6,A7,A8](f:(A1,A2,A3,A4,A5,A6,A7,A8)=>R)(implicitevidence$188:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$189:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$190:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$191:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$192:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$193:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$194:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$195:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$196:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction7", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction7", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction7[R,A1,A2,A3,A4,A5,A6,A7](f:(A1,A2,A3,A4,A5,A6,A7)=>R)(implicitevidence$180:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$181:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$182:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$183:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$184:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$185:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$186:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$187:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction6", "tail" : "(f: (A1, A2, A3, A4, A5, A6) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction6", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction6[R,A1,A2,A3,A4,A5,A6](f:(A1,A2,A3,A4,A5,A6)=>R)(implicitevidence$173:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$174:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$175:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$176:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$177:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$178:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$179:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction5", "tail" : "(f: (A1, A2, A3, A4, A5) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction5", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction5[R,A1,A2,A3,A4,A5](f:(A1,A2,A3,A4,A5)=>R)(implicitevidence$167:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$168:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$169:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$170:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$171:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$172:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction4", "tail" : "(f: (A1, A2, A3, A4) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction4", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction4[R,A1,A2,A3,A4](f:(A1,A2,A3,A4)=>R)(implicitevidence$162:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$163:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$164:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$165:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$166:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction3", "tail" : "(f: (A1, A2, A3) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction3", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction3[R,A1,A2,A3](f:(A1,A2,A3)=>R)(implicitevidence$158:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$159:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$160:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$161:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction2", "tail" : "(f: (A1, A2) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction2", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction2[R,A1,A2](f:(A1,A2)=>R)(implicitevidence$155:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$156:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$157:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "nullTolerantInferrableFunction1", "tail" : "(f: (A1) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.nullTolerantInferrableFunction1", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#nullTolerantInferrableFunction1[R,A1](f:A1=>R)(implicitevidence$153:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$154:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicittypeTag:reflect.runtime.universe.TypeTag[A1=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "def"}, {"label" : "inferrableFunction16", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], arg13: InferrableType[A13], arg14: InferrableType[A14], arg15: InferrableType[A15], arg16: InferrableType[A16], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction16", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction16[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>R)(implicitevidence$136:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$137:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$138:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$139:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$140:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$141:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$142:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$143:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$144:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$145:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$146:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$147:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$148:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicitevidence$149:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A13],implicitevidence$150:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A14],implicitevidence$151:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A15],implicitevidence$152:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A16],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction15", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], arg13: InferrableType[A13], arg14: InferrableType[A14], arg15: InferrableType[A15], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction15", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction15[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>R)(implicitevidence$120:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$121:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$122:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$123:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$124:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$125:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$126:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$127:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$128:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$129:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$130:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$131:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$132:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicitevidence$133:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A13],implicitevidence$134:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A14],implicitevidence$135:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A15],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction14", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], arg13: InferrableType[A13], arg14: InferrableType[A14], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction14", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction14[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>R)(implicitevidence$105:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$106:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$107:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$108:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$109:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$110:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$111:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$112:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$113:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$114:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$115:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$116:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$117:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicitevidence$118:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A13],implicitevidence$119:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A14],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction13", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], arg13: InferrableType[A13], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction13", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction13[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>R)(implicitevidence$91:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$92:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$93:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$94:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$95:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$96:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$97:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$98:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$99:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$100:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$101:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$102:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$103:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicitevidence$104:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A13],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction12", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], arg12: InferrableType[A12], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction12", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction12[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>R)(implicitevidence$78:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$79:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$80:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$81:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$82:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$83:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$84:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$85:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$86:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$87:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$88:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$89:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicitevidence$90:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A12],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction11", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], arg11: InferrableType[A11], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction11", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction11[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>R)(implicitevidence$66:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$67:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$68:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$69:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$70:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$71:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$72:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$73:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$74:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$75:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$76:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicitevidence$77:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A11],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction10", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], arg10: InferrableType[A10], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction10", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction10[R,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>R)(implicitevidence$55:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$56:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$57:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$58:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$59:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$60:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$61:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$62:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$63:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$64:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicitevidence$65:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A10],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction9", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8, A9) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], arg9: InferrableType[A9], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8, A9) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction9", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction9[R,A1,A2,A3,A4,A5,A6,A7,A8,A9](f:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>R)(implicitevidence$45:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$46:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$47:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$48:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$49:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$50:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$51:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$52:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$53:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicitevidence$54:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A9],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction8", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7, A8) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], arg8: InferrableType[A8], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7, A8) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction8", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction8[R,A1,A2,A3,A4,A5,A6,A7,A8](f:(A1,A2,A3,A4,A5,A6,A7,A8)=>R)(implicitevidence$36:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$37:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$38:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$39:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$40:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$41:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$42:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$43:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicitevidence$44:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A8],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7,A8)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction7", "tail" : "(f: (A1, A2, A3, A4, A5, A6, A7) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], arg7: InferrableType[A7], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6, A7) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction7", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction7[R,A1,A2,A3,A4,A5,A6,A7](f:(A1,A2,A3,A4,A5,A6,A7)=>R)(implicitevidence$28:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$29:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$30:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$31:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$32:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$33:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$34:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicitevidence$35:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A7],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6,A7)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction6", "tail" : "(f: (A1, A2, A3, A4, A5, A6) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], arg6: InferrableType[A6], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5, A6) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction6", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction6[R,A1,A2,A3,A4,A5,A6](f:(A1,A2,A3,A4,A5,A6)=>R)(implicitevidence$21:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$22:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$23:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$24:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$25:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$26:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicitevidence$27:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A6],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5,A6)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction5", "tail" : "(f: (A1, A2, A3, A4, A5) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], arg5: InferrableType[A5], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4, A5) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction5", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction5[R,A1,A2,A3,A4,A5](f:(A1,A2,A3,A4,A5)=>R)(implicitevidence$15:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$16:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$17:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$18:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$19:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicitevidence$20:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A5],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4,A5)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction4", "tail" : "(f: (A1, A2, A3, A4) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], arg4: InferrableType[A4], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3, A4) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction4", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction4[R,A1,A2,A3,A4](f:(A1,A2,A3,A4)=>R)(implicitevidence$10:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$11:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$12:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$13:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicitevidence$14:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A4],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3,A4)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction3", "tail" : "(f: (A1, A2, A3) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], arg3: InferrableType[A3], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2, A3) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction3", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction3[R,A1,A2,A3](f:(A1,A2,A3)=>R)(implicitevidence$6:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$7:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$8:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicitevidence$9:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A3],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2,A3)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction2", "tail" : "(f: (A1, A2) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], arg2: InferrableType[A2], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1, A2) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction2", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction2[R,A1,A2](f:(A1,A2)=>R)(implicitevidence$3:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$4:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicitevidence$5:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A2],implicittypeTag:reflect.runtime.universe.TypeTag[(A1,A2)=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "inferrableFunction1", "tail" : "(f: (A1) â‡’ R)(arg0: InferrableType[R], arg1: InferrableType[A1], typeTag: scala.reflect.api.JavaUniverse.TypeTag[(A1) â‡’ R]): InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableFunctionConverter.inferrableFunction1", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#inferrableFunction1[R,A1](f:A1=>R)(implicitevidence$1:org.apache.spark.sql.sedona_sql.expressions.InferrableType[R],implicitevidence$2:org.apache.spark.sql.sedona_sql.expressions.InferrableType[A1],implicittypeTag:reflect.runtime.universe.TypeTag[A1=>R]):org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableFunctionConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html", "members_object" : [{"label" : "rasterArraySerializer", "tail" : "(output: Any): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.rasterArraySerializer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#rasterArraySerializer(output:Any):Any", "kind" : "def"}, {"label" : "rasterSerializer", "tail" : "(output: Any): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.rasterSerializer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#rasterSerializer(output:Any):Any", "kind" : "def"}, {"label" : "rasterExtractor", "tail" : "(expr: Expression)(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.rasterExtractor", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#rasterExtractor(expr:org.apache.spark.sql.catalyst.expressions.Expression)(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "rasterUDTArray", "tail" : ": ArrayType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.rasterUDTArray", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#rasterUDTArray:org.apache.spark.sql.types.ArrayType", "kind" : "val"}, {"label" : "rasterUDT", "tail" : ": UserDefinedType[_]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.rasterUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#rasterUDT:org.apache.spark.sql.types.UserDefinedType[_]", "kind" : "val"}, {"label" : "isRasterArrayType", "tail" : "(t: scala.reflect.api.JavaUniverse.Type): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.isRasterArrayType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#isRasterArrayType(t:reflect.runtime.universe.Type):Boolean", "kind" : "def"}, {"label" : "isRasterType", "tail" : "(t: scala.reflect.api.JavaUniverse.Type): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.isRasterType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#isRasterType(t:reflect.runtime.universe.Type):Boolean", "kind" : "def"}, {"label" : "gridCoverage2DArrayInstance", "tail" : ": InferrableType[Array[GridCoverage2D]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.gridCoverage2DArrayInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#gridCoverage2DArrayInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[org.geotools.coverage.grid.GridCoverage2D]]", "kind" : "implicit val"}, {"label" : "gridCoverage2DInstance", "tail" : ": InferrableType[GridCoverage2D]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableRasterTypes.gridCoverage2DInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#gridCoverage2DInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[org.geotools.coverage.grid.GridCoverage2D]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableRasterTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html", "members_class" : [{"member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "javaGeogListInstance", "tail" : ": InferrableType[List[Geography]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.javaGeogListInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#javaGeogListInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[java.util.List[org.apache.sedona.common.S2Geography.Geography]]", "kind" : "implicit val"}, {"label" : "javaGeomListInstance", "tail" : ": InferrableType[List[Geometry]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.javaGeomListInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#javaGeomListInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[java.util.List[org.locationtech.jts.geom.Geometry]]", "kind" : "implicit val"}, {"label" : "javaDoubleListInstance", "tail" : ": InferrableType[List[Double]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.javaDoubleListInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#javaDoubleListInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[java.util.List[Double]]", "kind" : "implicit val"}, {"label" : "doubleArrayInstance", "tail" : ": InferrableType[Array[Double]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.doubleArrayInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#doubleArrayInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[Double]]", "kind" : "implicit val"}, {"label" : "javaLongArrayInstance", "tail" : ": InferrableType[Array[Long]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.javaLongArrayInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#javaLongArrayInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[Long]]", "kind" : "implicit val"}, {"label" : "longArrayInstance", "tail" : ": InferrableType[Array[Long]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.longArrayInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#longArrayInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[Long]]", "kind" : "implicit val"}, {"label" : "javaIntArrayInstance", "tail" : ": InferrableType[Array[Integer]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.javaIntArrayInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#javaIntArrayInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[Integer]]", "kind" : "implicit val"}, {"label" : "intArrayInstance", "tail" : ": InferrableType[Array[Int]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.intArrayInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#intArrayInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[Int]]", "kind" : "implicit val"}, {"label" : "binaryInstance", "tail" : ": InferrableType[Array[Byte]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.binaryInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#binaryInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[Byte]]", "kind" : "implicit val"}, {"label" : "stringInstance", "tail" : ": InferrableType[String]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.stringInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#stringInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[String]", "kind" : "implicit val"}, {"label" : "longInstance", "tail" : ": InferrableType[Long]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.longInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#longInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Long]", "kind" : "implicit val"}, {"label" : "intInstance", "tail" : ": InferrableType[Int]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.intInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#intInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Int]", "kind" : "implicit val"}, {"label" : "booleanOptInstance", "tail" : ": InferrableType[Option[Boolean]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.booleanOptInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#booleanOptInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Option[Boolean]]", "kind" : "implicit val"}, {"label" : "booleanInstance", "tail" : ": InferrableType[Boolean]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.booleanInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#booleanInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Boolean]", "kind" : "implicit val"}, {"label" : "doubleInstance", "tail" : ": InferrableType[Double]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.doubleInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#doubleInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Double]", "kind" : "implicit val"}, {"label" : "javaLongInstance", "tail" : ": InferrableType[Long]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.javaLongInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#javaLongInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Long]", "kind" : "implicit val"}, {"label" : "javaIntegerInstance", "tail" : ": InferrableType[Integer]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.javaIntegerInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#javaIntegerInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Integer]", "kind" : "implicit val"}, {"label" : "javaDoubleInstance", "tail" : ": InferrableType[Double]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.javaDoubleInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#javaDoubleInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Double]", "kind" : "implicit val"}, {"label" : "geographyArrayInstance", "tail" : ": InferrableType[Array[Geography]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.geographyArrayInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#geographyArrayInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[org.apache.sedona.common.S2Geography.Geography]]", "kind" : "implicit val"}, {"label" : "geographyInstance", "tail" : ": InferrableType[Geography]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.geographyInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#geographyInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[org.apache.sedona.common.S2Geography.Geography]", "kind" : "implicit val"}, {"label" : "geometryArrayInstance", "tail" : ": InferrableType[Array[Geometry]]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.geometryArrayInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#geometryArrayInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[Array[org.locationtech.jts.geom.Geometry]]", "kind" : "implicit val"}, {"label" : "geometryInstance", "tail" : ": InferrableType[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferrableType.geometryInstance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#geometryInstance:org.apache.spark.sql.sedona_sql.expressions.InferrableType[org.locationtech.jts.geom.Geometry]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferrableType.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression", "shortDescription" : "This is the base class for wrapping Java\/Scala functions as a catalyst expression in Spark SQL.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html", "members_class" : [{"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#toString():String", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "f", "tail" : ": InferrableFunction", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.f", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#f:org.apache.spark.sql.sedona_sql.expressions.InferrableFunction", "kind" : "lazy val"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression#<init>", "error" : "unsupported entity"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#foldable:Boolean", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "inputExpressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "abstract def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#withNewChildrenInternal(newChildren:IndexedSeq[BaseType]):BaseType", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "throwExpressionInferenceException", "tail" : "(name: String, inputArgs: Seq[Any], e: Exception): Nothing", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpression.throwExpressionInferenceException", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#throwExpressionInferenceException(name:String,inputArgs:Seq[Any],e:Exception):Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpression.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpressionException", "shortDescription" : "Custom exception to include the input row and the original exception message.", "members_class" : [{"member" : "org.apache.spark.sql.sedona_sql.expressions.InferredExpressionException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredExpressionException.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.InferredRasterExpression", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html", "members_object" : [{"label" : "rasterArraySerializer", "tail" : ": (Any) â‡’ Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredRasterExpression.rasterArraySerializer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#rasterArraySerializer:Any=>Any", "kind" : "val"}, {"label" : "rasterSerializer", "tail" : ": (Any) â‡’ Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredRasterExpression.rasterSerializer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#rasterSerializer:Any=>Any", "kind" : "val"}, {"label" : "rasterExtractor", "tail" : ": (Expression) â‡’ (InternalRow) â‡’ Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredRasterExpression.rasterExtractor", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#rasterExtractor:org.apache.spark.sql.catalyst.expressions.Expression=>(org.apache.spark.sql.catalyst.InternalRow=>Any)", "kind" : "val"}, {"label" : "rasterUDTArray", "tail" : "(): ArrayType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredRasterExpression.rasterUDTArray", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#rasterUDTArray:org.apache.spark.sql.types.ArrayType", "kind" : "def"}, {"label" : "rasterUDT", "tail" : "(): UserDefinedType[_]", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredRasterExpression.rasterUDT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#rasterUDT:org.apache.spark.sql.types.UserDefinedType[_]", "kind" : "def"}, {"label" : "isRasterArrayType", "tail" : "(t: scala.reflect.api.JavaUniverse.Type): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredRasterExpression.isRasterArrayType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#isRasterArrayType(t:reflect.runtime.universe.Type):Boolean", "kind" : "def"}, {"label" : "isRasterType", "tail" : "(t: scala.reflect.api.JavaUniverse.Type): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredRasterExpression.isRasterType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#isRasterType(t:reflect.runtime.universe.Type):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredRasterExpression$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.InferredTypes", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html", "members_object" : [{"label" : "inferSparkType", "tail" : "(t: scala.reflect.api.JavaUniverse.Type): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredTypes.inferSparkType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#inferSparkType(t:reflect.runtime.universe.Type):org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "buildSerializer", "tail" : "(t: scala.reflect.api.JavaUniverse.Type): (Any) â‡’ Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredTypes.buildSerializer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#buildSerializer(t:reflect.runtime.universe.Type):Any=>Any", "kind" : "def"}, {"label" : "buildArgumentExtractor", "tail" : "(t: scala.reflect.api.JavaUniverse.Type): (Expression) â‡’ (InternalRow) â‡’ Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.InferredTypes.buildArgumentExtractor", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#buildArgumentExtractor(t:reflect.runtime.universe.Type):org.apache.spark.sql.catalyst.expressions.Expression=>(org.apache.spark.sql.catalyst.InternalRow=>Any)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/InferredTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.LibPostalUtils", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html", "members_object" : [{"label" : "getExpanderFromConf", "tail" : "(dataDir: String, useSenzing: Boolean): AddressExpander", "member" : "org.apache.spark.sql.sedona_sql.expressions.LibPostalUtils.getExpanderFromConf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#getExpanderFromConf(dataDir:String,useSenzing:Boolean):com.mapzen.jpostal.AddressExpander", "kind" : "def"}, {"label" : "getParserFromConf", "tail" : "(dataDir: String, useSenzing: Boolean): AddressParser", "member" : "org.apache.spark.sql.sedona_sql.expressions.LibPostalUtils.getParserFromConf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#getParserFromConf(dataDir:String,useSenzing:Boolean):com.mapzen.jpostal.AddressParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/LibPostalUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.NullIntolerantShim", "members_trait" : [{"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "abstract def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "abstract def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#nullable:Boolean", "kind" : "abstract def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#withNewChildrenInternal(newChildren:IndexedSeq[BaseType]):BaseType", "kind" : "abstract def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#children:Seq[BaseType]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/NullIntolerantShim.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction", "members_trait" : [{"label" : "getResultName", "tail" : "(resultAttrs: Seq[Attribute]): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.getResultName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#getResultName(resultAttrs:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]):String", "kind" : "def"}, {"label" : "getInputNames", "tail" : "(i: Int, fieldName: String): Seq[String]", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.getInputNames", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#getInputNames(i:Int,fieldName:String):Seq[String]", "kind" : "def"}, {"label" : "getScalarValue", "tail" : "(i: Int, name: String)(ct: ClassTag[T]): T", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.getScalarValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#getScalarValue[T](i:Int,name:String)(implicitct:scala.reflect.ClassTag[T]):T", "kind" : "def"}, {"label" : "getInputName", "tail" : "(i: Int, fieldName: String): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.getInputName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#getInputName(i:Int,fieldName:String):String", "kind" : "def"}, {"label" : "geometryColumnName", "tail" : ": String", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.geometryColumnName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#geometryColumnName:String", "kind" : "final lazy val"}, {"label" : "sparkSession", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.sparkSession", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "final lazy val"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#nullable:Boolean", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#deterministic:Boolean", "kind" : "final lazy val"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Unevaluable.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "final def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.catalyst.expressions.Unevaluable.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "final def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Unevaluable.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#foldable:Boolean", "kind" : "final def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "execute", "tail" : "(plan: SparkPlan, resultAttrs: Seq[Attribute]): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#execute(plan:org.apache.spark.sql.execution.SparkPlan,resultAttrs:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]):org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "abstract def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "abstract def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "abstract def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#withNewChildrenInternal(newChildren:IndexedSeq[BaseType]):BaseType", "kind" : "abstract def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#children:Seq[BaseType]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "PhysicalFunctions are Functions that will be replaced with a Physical Node for theirevaluation.", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/PhysicalFunction.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.SerdeAware", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "evalWithoutSerialization", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.SerdeAware.evalWithoutSerialization", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html#evalWithoutSerialization(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/SerdeAware.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.st_aggregates", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html", "members_object" : [{"label" : "ST_Union_Aggr", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_aggregates.ST_Union_Aggr", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#ST_Union_Aggr(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Union_Aggr", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_aggregates.ST_Union_Aggr", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#ST_Union_Aggr(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Intersection_Aggr", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_aggregates.ST_Intersection_Aggr", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#ST_Intersection_Aggr(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Intersection_Aggr", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_aggregates.ST_Intersection_Aggr", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#ST_Intersection_Aggr(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Envelope_Aggr", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_aggregates.ST_Envelope_Aggr", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#ST_Envelope_Aggr(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Envelope_Aggr", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_aggregates.ST_Envelope_Aggr", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#ST_Envelope_Aggr(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_aggregates$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html", "members_object" : [{"label" : "ST_GeogToGeometry", "tail" : "(geog: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogToGeometry", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogToGeometry(geog:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogToGeometry", "tail" : "(geog: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogToGeometry", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogToGeometry(geog:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MPointFromText", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MPointFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MPointFromText(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MPointFromText", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MPointFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MPointFromText(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MPointFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MPointFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MPointFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MPointFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MPointFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MPointFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogCollFromText", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogCollFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogCollFromText(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogCollFromText", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogCollFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogCollFromText(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogCollFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogCollFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogCollFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogCollFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogCollFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogCollFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomCollFromText", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomCollFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomCollFromText(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomCollFromText", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomCollFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomCollFromText(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomCollFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomCollFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomCollFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomCollFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomCollFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomCollFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MLineFromText", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MLineFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MLineFromText(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MLineFromText", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MLineFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MLineFromText(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MLineFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MLineFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MLineFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MLineFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MLineFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MLineFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MPolyFromText", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MPolyFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MPolyFromText(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MPolyFromText", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MPolyFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MPolyFromText(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MPolyFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MPolyFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MPolyFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MPolyFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MPolyFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MPolyFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PolygonFromText", "tail" : "(coords: String, delimiter: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PolygonFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PolygonFromText(coords:String,delimiter:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PolygonFromText", "tail" : "(coords: Column, delimiter: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PolygonFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PolygonFromText(coords:org.apache.spark.sql.Column,delimiter:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PolygonFromEnvelope", "tail" : "(minX: Double, minY: Double, maxX: Double, maxY: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PolygonFromEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PolygonFromEnvelope(minX:Double,minY:Double,maxX:Double,maxY:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PolygonFromEnvelope", "tail" : "(minX: String, minY: String, maxX: String, maxY: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PolygonFromEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PolygonFromEnvelope(minX:String,minY:String,maxX:String,maxY:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PolygonFromEnvelope", "tail" : "(minX: Column, minY: Column, maxX: Column, maxY: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PolygonFromEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PolygonFromEnvelope(minX:org.apache.spark.sql.Column,minY:org.apache.spark.sql.Column,maxX:org.apache.spark.sql.Column,maxY:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeEnvelope", "tail" : "(minX: Double, minY: Double, maxX: Double, maxY: Double, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakeEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakeEnvelope(minX:Double,minY:Double,maxX:Double,maxY:Double,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeEnvelope", "tail" : "(minX: String, minY: String, maxX: String, maxY: String, srid: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakeEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakeEnvelope(minX:String,minY:String,maxX:String,maxY:String,srid:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeEnvelope", "tail" : "(minX: Column, minY: Column, maxX: Column, maxY: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakeEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakeEnvelope(minX:org.apache.spark.sql.Column,minY:org.apache.spark.sql.Column,maxX:org.apache.spark.sql.Column,maxY:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeEnvelope", "tail" : "(minX: Double, minY: Double, maxX: Double, maxY: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakeEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakeEnvelope(minX:Double,minY:Double,maxX:Double,maxY:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeEnvelope", "tail" : "(minX: String, minY: String, maxX: String, maxY: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakeEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakeEnvelope(minX:String,minY:String,maxX:String,maxY:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeEnvelope", "tail" : "(minX: Column, minY: Column, maxX: Column, maxY: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakeEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakeEnvelope(minX:org.apache.spark.sql.Column,minY:org.apache.spark.sql.Column,maxX:org.apache.spark.sql.Column,maxY:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromText", "tail" : "(coords: String, delimiter: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromText(coords:String,delimiter:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromText", "tail" : "(coords: Column, delimiter: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromText(coords:org.apache.spark.sql.Column,delimiter:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: Double, y: Double, z: Double, m: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:Double,y:Double,z:Double,m:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: String, y: String, z: String, m: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:String,y:String,z:String,m:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: Column, y: Column, z: Column, m: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,z:org.apache.spark.sql.Column,m:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: Double, y: Double, z: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:Double,y:Double,z:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: String, y: String, z: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:String,y:String,z:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: Column, y: Column, z: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,z:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: Double, y: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:Double,y:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: String, y: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:String,y:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePoint", "tail" : "(x: Column, y: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePoint(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePointM", "tail" : "(x: Double, y: Double, m: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePointM(x:Double,y:Double,m:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePointM", "tail" : "(x: String, y: String, m: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePointM(x:String,y:String,m:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePointM", "tail" : "(x: Column, y: Column, m: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_MakePointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_MakePointM(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,m:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LinestringFromWKB", "tail" : "(wkb: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LinestringFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LinestringFromWKB(wkb:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LinestringFromWKB", "tail" : "(wkb: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LinestringFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LinestringFromWKB(wkb:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LinestringFromWKB", "tail" : "(wkb: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LinestringFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LinestringFromWKB(wkb:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LinestringFromWKB", "tail" : "(wkb: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LinestringFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LinestringFromWKB(wkb:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineFromWKB", "tail" : "(wkb: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LineFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LineFromWKB(wkb:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineFromWKB", "tail" : "(wkb: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LineFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LineFromWKB(wkb:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineFromWKB", "tail" : "(wkb: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LineFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LineFromWKB(wkb:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineFromWKB", "tail" : "(wkb: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LineFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LineFromWKB(wkb:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromWKB", "tail" : "(wkb: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromWKB(wkb:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromWKB", "tail" : "(wkb: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromWKB(wkb:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromWKB", "tail" : "(wkb: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromWKB(wkb:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromWKB", "tail" : "(wkb: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromWKB(wkb:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZM", "tail" : "(x: Double, y: Double, z: Double, m: Double, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZM(x:Double,y:Double,z:Double,m:Double,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZM", "tail" : "(x: String, y: String, z: String, m: String, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZM(x:String,y:String,z:String,m:String,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZM", "tail" : "(x: Column, y: Column, z: Column, m: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZM(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,z:org.apache.spark.sql.Column,m:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZM", "tail" : "(x: Double, y: Double, z: Double, m: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZM(x:Double,y:Double,z:Double,m:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZM", "tail" : "(x: String, y: String, z: String, m: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZM(x:String,y:String,z:String,m:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZM", "tail" : "(x: Column, y: Column, z: Column, m: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZM(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,z:org.apache.spark.sql.Column,m:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointM", "tail" : "(x: Double, y: Double, m: Double, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointM(x:Double,y:Double,m:Double,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointM", "tail" : "(x: String, y: String, m: String, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointM(x:String,y:String,m:String,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointM", "tail" : "(x: Column, y: Column, m: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointM(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,m:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointM", "tail" : "(x: Double, y: Double, m: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointM(x:Double,y:Double,m:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointM", "tail" : "(x: String, y: String, m: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointM(x:String,y:String,m:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointM", "tail" : "(x: Column, y: Column, m: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointM(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,m:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZ", "tail" : "(x: Double, y: Double, z: Double, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZ(x:Double,y:Double,z:Double,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZ", "tail" : "(x: String, y: String, z: String, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZ(x:String,y:String,z:String,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZ", "tail" : "(x: Column, y: Column, z: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZ(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,z:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZ", "tail" : "(x: Double, y: Double, z: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZ(x:Double,y:Double,z:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZ", "tail" : "(x: String, y: String, z: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZ(x:String,y:String,z:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointZ", "tail" : "(x: Column, y: Column, z: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointZ(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column,z:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Point", "tail" : "(x: Double, y: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_Point", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_Point(x:Double,y:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Point", "tail" : "(x: String, y: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_Point", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_Point(x:String,y:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Point", "tail" : "(x: Column, y: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_Point", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_Point(x:org.apache.spark.sql.Column,y:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineStringFromText", "tail" : "(coords: String, delimiter: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LineStringFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LineStringFromText(coords:String,delimiter:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineStringFromText", "tail" : "(coords: Column, delimiter: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LineStringFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LineStringFromText(coords:org.apache.spark.sql.Column,delimiter:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LineFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LineFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_LineFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_LineFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromEWKB", "tail" : "(wkb: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromEWKB(wkb:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromEWKB", "tail" : "(wkb: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromEWKB(wkb:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromWKB", "tail" : "(wkb: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromWKB(wkb:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromWKB", "tail" : "(wkb: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromWKB(wkb:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromWKB", "tail" : "(wkb: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromWKB(wkb:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromWKB", "tail" : "(wkb: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromWKB(wkb:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromText", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromText(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromText", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromText(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromEWKT", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromEWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromEWKT(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromEWKT", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromEWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromEWKT(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromWKT", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromWKT(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromWKT", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromWKT(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromWKT", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromWKT(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromWKT", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromWKT(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromEWKT", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromEWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromEWKT(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromEWKT", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromEWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromEWKT(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromWKT", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromWKT(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromWKT", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromWKT(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromWKT", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromWKT(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromWKT", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromWKT(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromEWKB", "tail" : "(wkb: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromEWKB(wkb:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromEWKB", "tail" : "(wkb: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromEWKB(wkb:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromWKB", "tail" : "(wkb: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromWKB(wkb:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromWKB", "tail" : "(wkb: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromWKB(wkb:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometryFromText", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeometryFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeometryFromText(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometryFromText", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeometryFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeometryFromText(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometryFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeometryFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeometryFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometryFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeometryFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeometryFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromText", "tail" : "(wkt: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromText(wkt:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromText", "tail" : "(wkt: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromText(wkt:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromText", "tail" : "(wkt: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromText(wkt:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromText", "tail" : "(wkt: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromText(wkt:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromKML", "tail" : "(kmlString: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromKML", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromKML(kmlString:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromKML", "tail" : "(kmlString: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromKML", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromKML(kmlString:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromGML", "tail" : "(gmlString: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromGML", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromGML(gmlString:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromGML", "tail" : "(gmlString: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromGML", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromGML(gmlString:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromGeoJSON", "tail" : "(geojsonString: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromGeoJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromGeoJSON(geojsonString:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromGeoJSON", "tail" : "(geojsonString: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromGeoJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromGeoJSON(geojsonString:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromGeoHash", "tail" : "(geohash: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromGeoHash(geohash:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromGeoHash", "tail" : "(geohash: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromGeoHash(geohash:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromGeoHash", "tail" : "(geohash: String, precision: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromGeoHash(geohash:String,precision:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointFromGeoHash", "tail" : "(geohash: Column, precision: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_PointFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_PointFromGeoHash(geohash:org.apache.spark.sql.Column,precision:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromGeoHash", "tail" : "(geohash: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromGeoHash(geohash:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromGeoHash", "tail" : "(geohash: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromGeoHash(geohash:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromGeoHash", "tail" : "(geohash: String, precision: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromGeoHash(geohash:String,precision:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeogFromGeoHash", "tail" : "(geohash: Column, precision: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeogFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeogFromGeoHash(geohash:org.apache.spark.sql.Column,precision:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromGeoHash", "tail" : "(geohash: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromGeoHash(geohash:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromGeoHash", "tail" : "(geohash: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromGeoHash(geohash:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromGeoHash", "tail" : "(geohash: String, precision: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromGeoHash(geohash:String,precision:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeomFromGeoHash", "tail" : "(geohash: Column, precision: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_constructors.ST_GeomFromGeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ST_GeomFromGeoHash(geohash:org.apache.spark.sql.Column,precision:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_constructors$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.st_functions", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html", "members_object" : [{"label" : "ST_WeightedDistanceBandColumn", "tail" : "(geometry: Column, threshold: Column, alpha: Column, includeZeroDistanceNeighbors: Column, includeSelf: Column, selfWeight: Column, useSpheroid: Column, attributes: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_WeightedDistanceBandColumn", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_WeightedDistanceBandColumn(geometry:org.apache.spark.sql.Column,threshold:org.apache.spark.sql.Column,alpha:org.apache.spark.sql.Column,includeZeroDistanceNeighbors:org.apache.spark.sql.Column,includeSelf:org.apache.spark.sql.Column,selfWeight:org.apache.spark.sql.Column,useSpheroid:org.apache.spark.sql.Column,attributes:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_BinaryDistanceBandColumn", "tail" : "(geometry: Column, threshold: Column, includeZeroDistanceNeighbors: Column, includeSelf: Column, useSpheroid: Column, attributes: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_BinaryDistanceBandColumn", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_BinaryDistanceBandColumn(geometry:org.apache.spark.sql.Column,threshold:org.apache.spark.sql.Column,includeZeroDistanceNeighbors:org.apache.spark.sql.Column,includeSelf:org.apache.spark.sql.Column,useSpheroid:org.apache.spark.sql.Column,attributes:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GLocal", "tail" : "(x: Column, weights: Column, star: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GLocal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GLocal(x:org.apache.spark.sql.Column,weights:org.apache.spark.sql.Column,star:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LocalOutlierFactor", "tail" : "(geom: Column, k: Column, useSpheroid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LocalOutlierFactor", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LocalOutlierFactor(geom:org.apache.spark.sql.Column,k:org.apache.spark.sql.Column,useSpheroid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DBSCAN", "tail" : "(geom: Column, epsilon: Column, minPoints: Column, useSpheroid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DBSCAN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DBSCAN(geom:org.apache.spark.sql.Column,epsilon:org.apache.spark.sql.Column,minPoints:org.apache.spark.sql.Column,useSpheroid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_InterpolatePoint", "tail" : "(geom1: String, geom2: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_InterpolatePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_InterpolatePoint(geom1:String,geom2:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_InterpolatePoint", "tail" : "(geom1: Column, geom2: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_InterpolatePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_InterpolatePoint(geom1:org.apache.spark.sql.Column,geom2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsCollection", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsCollection", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsCollection(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsCollection", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsCollection", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsCollection(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CoordDim", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_CoordDim", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_CoordDim(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CoordDim", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_CoordDim", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_CoordDim(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_HausdorffDistance", "tail" : "(g1: String, g2: String, densityFrac: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_HausdorffDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_HausdorffDistance(g1:String,g2:String,densityFrac:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_HausdorffDistance", "tail" : "(g1: Column, g2: Column, densityFrac: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_HausdorffDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_HausdorffDistance(g1:org.apache.spark.sql.Column,g2:org.apache.spark.sql.Column,densityFrac:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_HausdorffDistance", "tail" : "(g1: String, g2: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_HausdorffDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_HausdorffDistance(g1:String,g2:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_HausdorffDistance", "tail" : "(g1: Column, g2: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_HausdorffDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_HausdorffDistance(g1:org.apache.spark.sql.Column,g2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DelaunayTriangles", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DelaunayTriangles", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DelaunayTriangles(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DelaunayTriangles", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DelaunayTriangles", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DelaunayTriangles(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DelaunayTriangles", "tail" : "(geometry: String, tolerance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DelaunayTriangles", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DelaunayTriangles(geometry:String,tolerance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DelaunayTriangles", "tail" : "(geometry: Column, tolerance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DelaunayTriangles", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DelaunayTriangles(geometry:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DelaunayTriangles", "tail" : "(geometry: String, tolerance: Double, flags: Integer): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DelaunayTriangles", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DelaunayTriangles(geometry:String,tolerance:Double,flags:Integer):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DelaunayTriangles", "tail" : "(geometry: Column, tolerance: Column, flags: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DelaunayTriangles", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DelaunayTriangles(geometry:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column,flags:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Degrees", "tail" : "(angleInRadian: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Degrees", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Degrees(angleInRadian:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Degrees", "tail" : "(angleInRadian: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Degrees", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Degrees(angleInRadian:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Angle", "tail" : "(line1: String, line2: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Angle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Angle(line1:String,line2:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Angle", "tail" : "(line1: Column, line2: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Angle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Angle(line1:org.apache.spark.sql.Column,line2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Angle", "tail" : "(p1: String, p2: String, p3: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Angle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Angle(p1:String,p2:String,p3:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Angle", "tail" : "(p1: Column, p2: Column, p3: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Angle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Angle(p1:org.apache.spark.sql.Column,p2:org.apache.spark.sql.Column,p3:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Angle", "tail" : "(p1: String, p2: String, p3: String, p4: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Angle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Angle(p1:String,p2:String,p3:String,p4:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Angle", "tail" : "(p1: Column, p2: Column, p3: Column, p4: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Angle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Angle(p1:org.apache.spark.sql.Column,p2:org.apache.spark.sql.Column,p3:org.apache.spark.sql.Column,p4:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_BoundingDiagonal", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_BoundingDiagonal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_BoundingDiagonal(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_BoundingDiagonal", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_BoundingDiagonal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_BoundingDiagonal(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Affine", "tail" : "(geometry: String, a: Double, b: Double, d: Double, e: Double, xOff: Double, yOff: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Affine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Affine(geometry:String,a:Double,b:Double,d:Double,e:Double,xOff:Double,yOff:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Affine", "tail" : "(geometry: Column, a: Column, b: Column, d: Column, e: Column, xOff: Column, yOff: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Affine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Affine(geometry:org.apache.spark.sql.Column,a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column,d:org.apache.spark.sql.Column,e:org.apache.spark.sql.Column,xOff:org.apache.spark.sql.Column,yOff:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Affine", "tail" : "(geometry: String, a: Double, b: Double, c: Double, d: Double, e: Double, f: Double, g: Double, h: Double, i: Double, xOff: Double, yOff: Double, zOff: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Affine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Affine(geometry:String,a:Double,b:Double,c:Double,d:Double,e:Double,f:Double,g:Double,h:Double,i:Double,xOff:Double,yOff:Double,zOff:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Affine", "tail" : "(geometry: Column, a: Column, b: Column, c: Column, d: Column, e: Column, f: Column, g: Column, h: Column, i: Column, xOff: Column, yOff: Column, zOff: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Affine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Affine(geometry:org.apache.spark.sql.Column,a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column,c:org.apache.spark.sql.Column,d:org.apache.spark.sql.Column,e:org.apache.spark.sql.Column,f:org.apache.spark.sql.Column,g:org.apache.spark.sql.Column,h:org.apache.spark.sql.Column,i:org.apache.spark.sql.Column,xOff:org.apache.spark.sql.Column,yOff:org.apache.spark.sql.Column,zOff:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_FrechetDistance", "tail" : "(g1: String, g2: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_FrechetDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_FrechetDistance(g1:String,g2:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_FrechetDistance", "tail" : "(g1: Column, g2: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_FrechetDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_FrechetDistance(g1:org.apache.spark.sql.Column,g2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_VoronoiPolygons", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_VoronoiPolygons", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_VoronoiPolygons(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_VoronoiPolygons", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_VoronoiPolygons", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_VoronoiPolygons(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_VoronoiPolygons", "tail" : "(geometry: String, tolerance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_VoronoiPolygons", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_VoronoiPolygons(geometry:String,tolerance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_VoronoiPolygons", "tail" : "(geometry: Column, tolerance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_VoronoiPolygons", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_VoronoiPolygons(geometry:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_VoronoiPolygons", "tail" : "(geometry: String, tolerance: Double, extendTo: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_VoronoiPolygons", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_VoronoiPolygons(geometry:String,tolerance:Double,extendTo:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_VoronoiPolygons", "tail" : "(geometry: Column, tolerance: Column, extendTo: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_VoronoiPolygons", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_VoronoiPolygons(geometry:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column,extendTo:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_TriangulatePolygon", "tail" : "(geom: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_TriangulatePolygon", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_TriangulatePolygon(geom:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_TriangulatePolygon", "tail" : "(geom: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_TriangulatePolygon", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_TriangulatePolygon(geom:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Translate", "tail" : "(geometry: String, deltaX: Double, deltaY: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Translate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Translate(geometry:String,deltaX:Double,deltaY:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Translate", "tail" : "(geometry: Column, deltaX: Column, deltaY: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Translate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Translate(geometry:org.apache.spark.sql.Column,deltaX:org.apache.spark.sql.Column,deltaY:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Translate", "tail" : "(geometry: String, deltaX: Double, deltaY: Double, deltaZ: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Translate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Translate(geometry:String,deltaX:Double,deltaY:Double,deltaZ:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Translate", "tail" : "(geometry: Column, deltaX: Column, deltaY: Column, deltaZ: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Translate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Translate(geometry:org.apache.spark.sql.Column,deltaX:org.apache.spark.sql.Column,deltaY:org.apache.spark.sql.Column,deltaZ:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NRings", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NRings", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NRings(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NRings", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NRings", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NRings(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeneratePoints", "tail" : "(geometry: Column, numPoints: Column, seed: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeneratePoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeneratePoints(geometry:org.apache.spark.sql.Column,numPoints:org.apache.spark.sql.Column,seed:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeneratePoints", "tail" : "(geometry: String, numPoints: String, seed: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeneratePoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeneratePoints(geometry:String,numPoints:String,seed:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeneratePoints", "tail" : "(geometry: String, numPoints: Integer, seed: Integer): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeneratePoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeneratePoints(geometry:String,numPoints:Integer,seed:Integer):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeneratePoints", "tail" : "(geometry: String, numPoints: Integer): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeneratePoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeneratePoints(geometry:String,numPoints:Integer):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeneratePoints", "tail" : "(geometry: String, numPoints: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeneratePoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeneratePoints(geometry:String,numPoints:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeneratePoints", "tail" : "(geometry: Column, numPoints: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeneratePoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeneratePoints(geometry:org.apache.spark.sql.Column,numPoints:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ForceRHR", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ForceRHR", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ForceRHR(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ForceRHR", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ForceRHR", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ForceRHR(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ForcePolygonCW", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ForcePolygonCW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ForcePolygonCW(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ForcePolygonCW", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ForcePolygonCW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ForcePolygonCW(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ForceCollection", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ForceCollection", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ForceCollection(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ForceCollection", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ForceCollection", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ForceCollection(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force4D", "tail" : "(geometry: String, zValue: Double, mValue: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force4D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force4D(geometry:String,zValue:Double,mValue:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force4D", "tail" : "(geometry: Column, zValue: Column, mValue: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force4D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force4D(geometry:org.apache.spark.sql.Column,zValue:org.apache.spark.sql.Column,mValue:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force4D", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force4D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force4D(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force4D", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force4D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force4D(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3DZ", "tail" : "(geometry: String, zValue: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3DZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3DZ(geometry:String,zValue:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3DZ", "tail" : "(geometry: Column, zValue: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3DZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3DZ(geometry:org.apache.spark.sql.Column,zValue:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3DZ", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3DZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3DZ(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3DZ", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3DZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3DZ(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3DM", "tail" : "(geometry: String, zValue: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3DM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3DM(geometry:String,zValue:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3DM", "tail" : "(geometry: Column, zValue: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3DM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3DM(geometry:org.apache.spark.sql.Column,zValue:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3DM", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3DM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3DM(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3DM", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3DM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3DM(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3D", "tail" : "(geometry: String, zValue: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3D(geometry:String,zValue:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3D", "tail" : "(geometry: Column, zValue: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3D(geometry:org.apache.spark.sql.Column,zValue:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3D", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3D(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force3D", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force3D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force3D(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NumPoints", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NumPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NumPoints(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NumPoints", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NumPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NumPoints(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LengthSpheroid", "tail" : "(a: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LengthSpheroid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LengthSpheroid(a:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LengthSpheroid", "tail" : "(a: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LengthSpheroid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LengthSpheroid(a:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AreaSpheroid", "tail" : "(a: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AreaSpheroid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AreaSpheroid(a:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AreaSpheroid", "tail" : "(a: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AreaSpheroid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AreaSpheroid(a:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DistanceSpheroid", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DistanceSpheroid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DistanceSpheroid(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DistanceSpheroid", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DistanceSpheroid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DistanceSpheroid(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DistanceSphere", "tail" : "(a: String, b: String, c: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DistanceSphere", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DistanceSphere(a:String,b:String,c:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DistanceSphere", "tail" : "(a: Column, b: Column, c: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DistanceSphere", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DistanceSphere(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column,c:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DistanceSphere", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DistanceSphere", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DistanceSphere(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DistanceSphere", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DistanceSphere", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DistanceSphere(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometricMedian", "tail" : "(geometry: String, tolerance: Double, maxIter: Int, failIfNotConverged: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometricMedian", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometricMedian(geometry:String,tolerance:Double,maxIter:Int,failIfNotConverged:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometricMedian", "tail" : "(geometry: Column, tolerance: Column, maxIter: Column, failIfNotConverged: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometricMedian", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometricMedian(geometry:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column,maxIter:org.apache.spark.sql.Column,failIfNotConverged:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometricMedian", "tail" : "(geometry: String, tolerance: Double, maxIter: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometricMedian", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometricMedian(geometry:String,tolerance:Double,maxIter:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometricMedian", "tail" : "(geometry: Column, tolerance: Column, maxIter: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometricMedian", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometricMedian(geometry:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column,maxIter:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometricMedian", "tail" : "(geometry: String, tolerance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometricMedian", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometricMedian(geometry:String,tolerance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometricMedian", "tail" : "(geometry: Column, tolerance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometricMedian", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometricMedian(geometry:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometricMedian", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometricMedian", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometricMedian(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometricMedian", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometricMedian", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometricMedian(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ZMin", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ZMin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ZMin(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ZMin", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ZMin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ZMin(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ZMax", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ZMax", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ZMax(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ZMax", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ZMax", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ZMax(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Zmflag", "tail" : "(geom: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Zmflag", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Zmflag(geom:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Zmflag", "tail" : "(geom: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Zmflag", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Zmflag(geom:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Z", "tail" : "(point: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Z", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Z(point:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Z", "tail" : "(point: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Z", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Z(point:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_YMin", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_YMin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_YMin(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_YMin", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_YMin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_YMin(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_YMax", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_YMax", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_YMax(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_YMax", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_YMax", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_YMax(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Y", "tail" : "(point: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Y", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Y(point:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Y", "tail" : "(point: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Y", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Y(point:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_XMin", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_XMin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_XMin(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_XMin", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_XMin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_XMin(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_XMax", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_XMax", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_XMax(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_XMax", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_XMax", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_XMax(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_X", "tail" : "(point: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_X", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_X(point:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_X", "tail" : "(point: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_X", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_X(point:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Union", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Union", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Union(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Union", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Union", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Union(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Union", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Union", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Union(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Union", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Union", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Union(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_UnaryUnion", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_UnaryUnion", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_UnaryUnion(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_UnaryUnion", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_UnaryUnion", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_UnaryUnion(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SimplifyPolygonHull", "tail" : "(geometry: String, vertexFactor: Double, isOuter: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SimplifyPolygonHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SimplifyPolygonHull(geometry:String,vertexFactor:Double,isOuter:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SimplifyPolygonHull", "tail" : "(geometry: Column, vertexFactor: Column, isOuter: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SimplifyPolygonHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SimplifyPolygonHull(geometry:org.apache.spark.sql.Column,vertexFactor:org.apache.spark.sql.Column,isOuter:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SimplifyPolygonHull", "tail" : "(geometry: String, vertexFactor: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SimplifyPolygonHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SimplifyPolygonHull(geometry:String,vertexFactor:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SimplifyPolygonHull", "tail" : "(geometry: Column, vertexFactor: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SimplifyPolygonHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SimplifyPolygonHull(geometry:org.apache.spark.sql.Column,vertexFactor:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SimplifyVW", "tail" : "(geometry: String, distanceTolerance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SimplifyVW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SimplifyVW(geometry:String,distanceTolerance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SimplifyVW", "tail" : "(geometry: Column, distanceTolerance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SimplifyVW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SimplifyVW(geometry:org.apache.spark.sql.Column,distanceTolerance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Simplify", "tail" : "(geometry: String, distanceTolerance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Simplify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Simplify(geometry:String,distanceTolerance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Simplify", "tail" : "(geometry: Column, distanceTolerance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Simplify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Simplify(geometry:org.apache.spark.sql.Column,distanceTolerance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Transform", "tail" : "(geometry: Column, targetCRS: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Transform(geometry:org.apache.spark.sql.Column,targetCRS:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Transform", "tail" : "(geometry: String, targetCRS: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Transform(geometry:String,targetCRS:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Transform", "tail" : "(geometry: String, sourceCRS: String, targetCRS: String, disableError: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Transform(geometry:String,sourceCRS:String,targetCRS:String,disableError:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Transform", "tail" : "(geometry: Column, sourceCRS: Column, targetCRS: Column, disableError: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Transform(geometry:org.apache.spark.sql.Column,sourceCRS:org.apache.spark.sql.Column,targetCRS:org.apache.spark.sql.Column,disableError:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Transform", "tail" : "(geometry: String, sourceCRS: String, targetCRS: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Transform(geometry:String,sourceCRS:String,targetCRS:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Transform", "tail" : "(geometry: Column, sourceCRS: Column, targetCRS: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Transform(geometry:org.apache.spark.sql.Column,sourceCRS:org.apache.spark.sql.Column,targetCRS:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SymDifference", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SymDifference", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SymDifference(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SymDifference", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SymDifference", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SymDifference(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Split", "tail" : "(input: String, blade: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Split", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Split(input:String,blade:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Split", "tail" : "(input: Column, blade: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Split", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Split(input:org.apache.spark.sql.Column,blade:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SimplifyPreserveTopology", "tail" : "(geometry: String, distanceTolerance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SimplifyPreserveTopology", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SimplifyPreserveTopology(geometry:String,distanceTolerance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SimplifyPreserveTopology", "tail" : "(geometry: Column, distanceTolerance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SimplifyPreserveTopology", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SimplifyPreserveTopology(geometry:org.apache.spark.sql.Column,distanceTolerance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Segmentize", "tail" : "(geometry: String, maxSegmentLength: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Segmentize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Segmentize(geometry:String,maxSegmentLength:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Segmentize", "tail" : "(geometry: Column, maxSegmentLength: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Segmentize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Segmentize(geometry:org.apache.spark.sql.Column,maxSegmentLength:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SubDivideExplode", "tail" : "(geometry: String, maxVertices: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SubDivideExplode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SubDivideExplode(geometry:String,maxVertices:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SubDivideExplode", "tail" : "(geometry: Column, maxVertices: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SubDivideExplode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SubDivideExplode(geometry:org.apache.spark.sql.Column,maxVertices:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SubDivide", "tail" : "(geometry: String, maxVertices: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SubDivide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SubDivide(geometry:String,maxVertices:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SubDivide", "tail" : "(geometry: Column, maxVertices: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SubDivide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SubDivide(geometry:org.apache.spark.sql.Column,maxVertices:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Snap", "tail" : "(input: String, reference: String, tolerance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Snap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Snap(input:String,reference:String,tolerance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Snap", "tail" : "(input: Column, reference: Column, tolerance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Snap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Snap(input:org.apache.spark.sql.Column,reference:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_StartPoint", "tail" : "(lineString: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_StartPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_StartPoint(lineString:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_StartPoint", "tail" : "(lineString: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_StartPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_StartPoint(lineString:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SRID", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SRID", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SRID(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SRID", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SRID", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SRID(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SetSRID", "tail" : "(geometry: String, srid: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SetSRID", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SetSRID(geometry:String,srid:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SetSRID", "tail" : "(geometry: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SetSRID", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SetSRID(geometry:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SetPoint", "tail" : "(lineString: String, index: Int, point: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SetPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SetPoint(lineString:String,index:Int,point:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_SetPoint", "tail" : "(lineString: Column, index: Column, point: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_SetPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_SetPoint(lineString:org.apache.spark.sql.Column,index:org.apache.spark.sql.Column,point:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_S2ToGeom", "tail" : "(cellIDs: Array[Long]): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_S2ToGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_S2ToGeom(cellIDs:Array[Long]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_S2ToGeom", "tail" : "(cellIDs: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_S2ToGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_S2ToGeom(cellIDs:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_S2CellIDs", "tail" : "(geometry: String, level: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_S2CellIDs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_S2CellIDs(geometry:String,level:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_S2CellIDs", "tail" : "(geometry: Column, level: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_S2CellIDs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_S2CellIDs(geometry:org.apache.spark.sql.Column,level:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Rotate", "tail" : "(geometry: String, angle: Double, originX: Double, originY: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Rotate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Rotate(geometry:String,angle:Double,originX:Double,originY:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Rotate", "tail" : "(geometry: Column, angle: Column, originX: Column, originY: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Rotate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Rotate(geometry:org.apache.spark.sql.Column,angle:org.apache.spark.sql.Column,originX:org.apache.spark.sql.Column,originY:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Rotate", "tail" : "(geometry: String, angle: Double, pointOrigin: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Rotate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Rotate(geometry:String,angle:Double,pointOrigin:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Rotate", "tail" : "(geometry: Column, angle: Column, pointOrigin: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Rotate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Rotate(geometry:org.apache.spark.sql.Column,angle:org.apache.spark.sql.Column,pointOrigin:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Rotate", "tail" : "(geometry: String, angle: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Rotate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Rotate(geometry:String,angle:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Rotate", "tail" : "(geometry: Column, angle: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Rotate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Rotate(geometry:org.apache.spark.sql.Column,angle:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RotateY", "tail" : "(geometry: String, angle: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RotateY", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RotateY(geometry:String,angle:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RotateY", "tail" : "(geometry: String, angle: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RotateY", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RotateY(geometry:String,angle:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RotateY", "tail" : "(geometry: Column, angle: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RotateY", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RotateY(geometry:org.apache.spark.sql.Column,angle:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RotateX", "tail" : "(geometry: String, angle: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RotateX", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RotateX(geometry:String,angle:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RotateX", "tail" : "(geometry: String, angle: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RotateX", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RotateX(geometry:String,angle:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RotateX", "tail" : "(geometry: Column, angle: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RotateX", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RotateX(geometry:org.apache.spark.sql.Column,angle:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ScaleGeom", "tail" : "(geometry: String, factor: String, origin: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ScaleGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ScaleGeom(geometry:String,factor:String,origin:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ScaleGeom", "tail" : "(geometry: Column, factor: Column, origin: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ScaleGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ScaleGeom(geometry:org.apache.spark.sql.Column,factor:org.apache.spark.sql.Column,origin:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ScaleGeom", "tail" : "(geometry: String, factor: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ScaleGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ScaleGeom(geometry:String,factor:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ScaleGeom", "tail" : "(geometry: Column, factor: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ScaleGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ScaleGeom(geometry:org.apache.spark.sql.Column,factor:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Scale", "tail" : "(geometry: String, scaleX: String, scaleY: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Scale", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Scale(geometry:String,scaleX:String,scaleY:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Scale", "tail" : "(geometry: String, scaleX: Double, scaleY: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Scale", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Scale(geometry:String,scaleX:Double,scaleY:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Scale", "tail" : "(geometry: Column, scaleX: Column, scaleY: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Scale", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Scale(geometry:org.apache.spark.sql.Column,scaleX:org.apache.spark.sql.Column,scaleY:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Reverse", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Reverse", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Reverse(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Reverse", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Reverse", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Reverse(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RemoveRepeatedPoints", "tail" : "(geom: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RemoveRepeatedPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RemoveRepeatedPoints(geom:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RemoveRepeatedPoints", "tail" : "(geom: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RemoveRepeatedPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RemoveRepeatedPoints(geom:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RemoveRepeatedPoints", "tail" : "(geom: String, tolerance: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RemoveRepeatedPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RemoveRepeatedPoints(geom:String,tolerance:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RemoveRepeatedPoints", "tail" : "(geom: String, tolerance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RemoveRepeatedPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RemoveRepeatedPoints(geom:String,tolerance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RemoveRepeatedPoints", "tail" : "(geom: Column, tolerance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RemoveRepeatedPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RemoveRepeatedPoints(geom:org.apache.spark.sql.Column,tolerance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RemovePoint", "tail" : "(lineString: String, index: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RemovePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RemovePoint(lineString:String,index:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RemovePoint", "tail" : "(lineString: Column, index: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_RemovePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_RemovePoint(lineString:org.apache.spark.sql.Column,index:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ReducePrecision", "tail" : "(geometry: String, precision: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ReducePrecision", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ReducePrecision(geometry:String,precision:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ReducePrecision", "tail" : "(geometry: Column, precision: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ReducePrecision", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ReducePrecision(geometry:org.apache.spark.sql.Column,precision:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointOnSurface", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_PointOnSurface", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_PointOnSurface(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointOnSurface", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_PointOnSurface", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_PointOnSurface(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointN", "tail" : "(geometry: String, n: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_PointN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_PointN(geometry:String,n:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_PointN", "tail" : "(geometry: Column, n: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_PointN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_PointN(geometry:org.apache.spark.sql.Column,n:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NumInteriorRing", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NumInteriorRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NumInteriorRing(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NumInteriorRing", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NumInteriorRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NumInteriorRing(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NumInteriorRings", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NumInteriorRings", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NumInteriorRings(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NumInteriorRings", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NumInteriorRings", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NumInteriorRings(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NumGeometries", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NumGeometries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NumGeometries(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NumGeometries", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NumGeometries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NumGeometries(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NDims", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NDims", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NDims(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NDims", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NDims", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NDims(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NPoints", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NPoints(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_NPoints", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_NPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_NPoints(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Normalize", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Normalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Normalize(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Normalize", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Normalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Normalize(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Multi", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Multi", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Multi(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Multi", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Multi", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Multi(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ForcePolygonCCW", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ForcePolygonCCW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ForcePolygonCCW(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ForcePolygonCCW", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ForcePolygonCCW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ForcePolygonCCW(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsPolygonCCW", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsPolygonCCW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsPolygonCCW(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsPolygonCCW", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsPolygonCCW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsPolygonCCW(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumBoundingRadius", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumBoundingRadius", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumBoundingRadius(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumBoundingRadius", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumBoundingRadius", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumBoundingRadius(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumBoundingCircle", "tail" : "(geometry: String, quadrantSegments: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumBoundingCircle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumBoundingCircle(geometry:String,quadrantSegments:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumBoundingCircle", "tail" : "(geometry: Column, quadrantSegments: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumBoundingCircle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumBoundingCircle(geometry:org.apache.spark.sql.Column,quadrantSegments:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumBoundingCircle", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumBoundingCircle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumBoundingCircle(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumBoundingCircle", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumBoundingCircle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumBoundingCircle(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumClearanceLine", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumClearanceLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumClearanceLine(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumClearanceLine", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumClearanceLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumClearanceLine(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumClearance", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumClearance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumClearance(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MinimumClearance", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MinimumClearance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MinimumClearance(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MaxDistance", "tail" : "(geom1: String, geom2: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MaxDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MaxDistance(geom1:String,geom2:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MaxDistance", "tail" : "(geom1: Column, geom2: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MaxDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MaxDistance(geom1:org.apache.spark.sql.Column,geom2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MaximumInscribedCircle", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MaximumInscribedCircle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MaximumInscribedCircle(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MaximumInscribedCircle", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MaximumInscribedCircle", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MaximumInscribedCircle(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeValid", "tail" : "(geometry: String, keepCollapsed: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakeValid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakeValid(geometry:String,keepCollapsed:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeValid", "tail" : "(geometry: Column, keepCollapsed: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakeValid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakeValid(geometry:org.apache.spark.sql.Column,keepCollapsed:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeValid", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakeValid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakeValid(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeValid", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakeValid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakeValid(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePolygon", "tail" : "(lineString: String, holes: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakePolygon", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakePolygon(lineString:String,holes:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePolygon", "tail" : "(lineString: Column, holes: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakePolygon", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakePolygon(lineString:org.apache.spark.sql.Column,holes:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePolygon", "tail" : "(lineString: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakePolygon", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakePolygon(lineString:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakePolygon", "tail" : "(lineString: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakePolygon", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakePolygon(lineString:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Project", "tail" : "(point: String, distance: Double, azimuth: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Project", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Project(point:String,distance:Double,azimuth:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Project", "tail" : "(point: String, distance: String, azimuth: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Project", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Project(point:String,distance:String,azimuth:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Project", "tail" : "(point: Column, distance: Column, azimuth: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Project", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Project(point:org.apache.spark.sql.Column,distance:org.apache.spark.sql.Column,azimuth:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Project", "tail" : "(point: String, distance: Double, azimuth: Double, lenient: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Project", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Project(point:String,distance:Double,azimuth:Double,lenient:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Project", "tail" : "(point: String, distance: String, azimuth: String, lenient: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Project", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Project(point:String,distance:String,azimuth:String,lenient:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Project", "tail" : "(point: Column, distance: Column, azimuth: Column, lenient: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Project", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Project(point:org.apache.spark.sql.Column,distance:org.apache.spark.sql.Column,azimuth:org.apache.spark.sql.Column,lenient:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Polygonize", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Polygonize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Polygonize(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Polygonize", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Polygonize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Polygonize(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Polygon", "tail" : "(lineString: String, srid: Integer): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Polygon", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Polygon(lineString:String,srid:Integer):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Polygon", "tail" : "(lineString: Column, srid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Polygon", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Polygon(lineString:org.apache.spark.sql.Column,srid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Points", "tail" : "(geom: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Points", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Points(geom:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Points", "tail" : "(geom: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Points", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Points(geom:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter2D", "tail" : "(geom: String, use_spheroid: Boolean, lenient: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter2D(geom:String,use_spheroid:Boolean,lenient:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter2D", "tail" : "(geom: Column, use_spheroid: Column, lenient: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter2D(geom:org.apache.spark.sql.Column,use_spheroid:org.apache.spark.sql.Column,lenient:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter2D", "tail" : "(geom: String, use_spheroid: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter2D(geom:String,use_spheroid:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter2D", "tail" : "(geom: Column, use_spheroid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter2D(geom:org.apache.spark.sql.Column,use_spheroid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter2D", "tail" : "(geom: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter2D(geom:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter2D", "tail" : "(geom: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter2D(geom:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter", "tail" : "(geom: String, use_spheroid: Boolean, lenient: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter(geom:String,use_spheroid:Boolean,lenient:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter", "tail" : "(geom: Column, use_spheroid: Column, lenient: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter(geom:org.apache.spark.sql.Column,use_spheroid:org.apache.spark.sql.Column,lenient:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter", "tail" : "(geom: String, use_spheroid: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter(geom:String,use_spheroid:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter", "tail" : "(geom: Column, use_spheroid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter(geom:org.apache.spark.sql.Column,use_spheroid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter", "tail" : "(geom: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter(geom:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Perimeter", "tail" : "(geom: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Perimeter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Perimeter(geom:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeLine", "tail" : "(geom1: String, geom2: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakeLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakeLine(geom1:String,geom2:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeLine", "tail" : "(geom1: Column, geom2: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakeLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakeLine(geom1:org.apache.spark.sql.Column,geom2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeLine", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakeLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakeLine(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MakeLine", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MakeLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MakeLine(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MMax", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MMax", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MMax(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MMax", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MMax", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MMax(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MMin", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MMin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MMin(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_MMin", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_MMin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_MMin(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_M", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_M", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_M(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_M", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_M", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_M(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_HasM", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_HasM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_HasM(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_HasM", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_HasM", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_HasM(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_HasZ", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_HasZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_HasZ(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_HasZ", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_HasZ", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_HasZ(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LocateAlong", "tail" : "(geom: String, measure: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LocateAlong", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LocateAlong(geom:String,measure:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LocateAlong", "tail" : "(geom: Column, measure: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LocateAlong", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LocateAlong(geom:org.apache.spark.sql.Column,measure:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LocateAlong", "tail" : "(geom: String, measure: Double, offset: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LocateAlong", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LocateAlong(geom:String,measure:Double,offset:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LocateAlong", "tail" : "(geom: Column, measure: Column, offset: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LocateAlong", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LocateAlong(geom:org.apache.spark.sql.Column,measure:org.apache.spark.sql.Column,offset:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LongestLine", "tail" : "(geom1: String, geom2: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LongestLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LongestLine(geom1:String,geom2:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LongestLine", "tail" : "(geom1: Column, geom2: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LongestLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LongestLine(geom1:org.apache.spark.sql.Column,geom2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineSubstring", "tail" : "(lineString: String, startFraction: Double, endFraction: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineSubstring", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineSubstring(lineString:String,startFraction:Double,endFraction:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineSubstring", "tail" : "(lineString: Column, startFraction: Column, endFraction: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineSubstring", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineSubstring(lineString:org.apache.spark.sql.Column,startFraction:org.apache.spark.sql.Column,endFraction:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineSegments", "tail" : "(geom: String, lenient: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineSegments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineSegments(geom:String,lenient:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineSegments", "tail" : "(geom: Column, lenient: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineSegments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineSegments(geom:org.apache.spark.sql.Column,lenient:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineSegments", "tail" : "(geom: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineSegments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineSegments(geom:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineSegments", "tail" : "(geom: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineSegments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineSegments(geom:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineMerge", "tail" : "(multiLineString: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineMerge", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineMerge(multiLineString:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineMerge", "tail" : "(multiLineString: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineMerge", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineMerge(multiLineString:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineLocatePoint", "tail" : "(linestring: String, point: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineLocatePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineLocatePoint(linestring:String,point:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineLocatePoint", "tail" : "(linestring: Column, point: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineLocatePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineLocatePoint(linestring:org.apache.spark.sql.Column,point:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineInterpolatePoint", "tail" : "(geometry: String, fraction: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineInterpolatePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineInterpolatePoint(geometry:String,fraction:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineInterpolatePoint", "tail" : "(geometry: Column, fraction: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineInterpolatePoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineInterpolatePoint(geometry:org.apache.spark.sql.Column,fraction:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineFromMultiPoint", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineFromMultiPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineFromMultiPoint(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LineFromMultiPoint", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LineFromMultiPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LineFromMultiPoint(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Length2D", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Length2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Length2D(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Length2D", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Length2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Length2D(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Length", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Length", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Length(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Length", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Length", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Length(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidDetail", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidDetail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidDetail(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidDetail", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidDetail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidDetail(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidDetail", "tail" : "(geometry: String, flag: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidDetail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidDetail(geometry:String,flag:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidDetail", "tail" : "(geometry: String, flag: Integer): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidDetail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidDetail(geometry:String,flag:Integer):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidDetail", "tail" : "(geometry: Column, flag: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidDetail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidDetail(geometry:org.apache.spark.sql.Column,flag:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidReason", "tail" : "(geometry: String, flag: Integer): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidReason", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidReason(geometry:String,flag:Integer):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidReason", "tail" : "(geometry: Column, flag: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidReason", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidReason(geometry:org.apache.spark.sql.Column,flag:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidReason", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidReason", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidReason(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidReason", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidReason", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidReason(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValid", "tail" : "(geometry: String, flag: Integer): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValid(geometry:String,flag:Integer):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValid", "tail" : "(geometry: Column, flag: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValid(geometry:org.apache.spark.sql.Column,flag:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValid", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValid(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValid", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValid(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidTrajectory", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidTrajectory", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidTrajectory(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsValidTrajectory", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsValidTrajectory", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsValidTrajectory(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsSimple", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsSimple", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsSimple(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsSimple", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsSimple", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsSimple(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsRing", "tail" : "(lineString: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsRing(lineString:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsRing", "tail" : "(lineString: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsRing(lineString:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsPolygonCW", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsPolygonCW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsPolygonCW(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsPolygonCW", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsPolygonCW", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsPolygonCW(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsEmpty", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsEmpty", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsEmpty(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsEmpty", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsEmpty", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsEmpty(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsClosed", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsClosed", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsClosed(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_IsClosed", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_IsClosed", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_IsClosed(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Intersection", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Intersection", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Intersection(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Intersection", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Intersection", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Intersection(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_InteriorRingN", "tail" : "(polygon: String, n: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_InteriorRingN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_InteriorRingN(polygon:String,n:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_InteriorRingN", "tail" : "(polygon: Column, n: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_InteriorRingN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_InteriorRingN(polygon:org.apache.spark.sql.Column,n:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3ToGeom", "tail" : "(cellIds: Array[Long]): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3ToGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3ToGeom(cellIds:Array[Long]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3ToGeom", "tail" : "(cellIds: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3ToGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3ToGeom(cellIds:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3KRing", "tail" : "(cell: Long, k: Integer, exactRing: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3KRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3KRing(cell:Long,k:Integer,exactRing:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3KRing", "tail" : "(cell: Column, k: Integer, exactRing: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3KRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3KRing(cell:org.apache.spark.sql.Column,k:Integer,exactRing:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3KRing", "tail" : "(cell: Column, k: Column, exactRing: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3KRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3KRing(cell:org.apache.spark.sql.Column,k:org.apache.spark.sql.Column,exactRing:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3CellIDs", "tail" : "(geometry: String, level: Int, fullCover: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3CellIDs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3CellIDs(geometry:String,level:Int,fullCover:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3CellIDs", "tail" : "(geometry: Column, level: Column, fullCover: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3CellIDs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3CellIDs(geometry:org.apache.spark.sql.Column,level:org.apache.spark.sql.Column,fullCover:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3CellDistance", "tail" : "(cell1: Long, cell2: Long): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3CellDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3CellDistance(cell1:Long,cell2:Long):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_H3CellDistance", "tail" : "(cell1: Column, cell2: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_H3CellDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_H3CellDistance(cell1:org.apache.spark.sql.Column,cell2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometryType", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometryType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometryType(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometryType", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometryType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometryType(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometryN", "tail" : "(multiGeometry: String, n: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometryN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometryN(multiGeometry:String,n:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeometryN", "tail" : "(multiGeometry: Column, n: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeometryN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeometryN(multiGeometry:org.apache.spark.sql.Column,n:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeoHash", "tail" : "(geometry: String, precision: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeoHash(geometry:String,precision:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_GeoHash", "tail" : "(geometry: Column, precision: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_GeoHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_GeoHash(geometry:org.apache.spark.sql.Column,precision:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force2D", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force2D(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force2D", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force2D(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force_2D", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force_2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force_2D(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Force_2D", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Force_2D", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Force_2D(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_FlipCoordinates", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_FlipCoordinates", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_FlipCoordinates(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_FlipCoordinates", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_FlipCoordinates", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_FlipCoordinates(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ExteriorRing", "tail" : "(polygon: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ExteriorRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ExteriorRing(polygon:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ExteriorRing", "tail" : "(polygon: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ExteriorRing", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ExteriorRing(polygon:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: String, deltaX: Double, deltaY: Double, deltaZ: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:String,deltaX:Double,deltaY:Double,deltaZ:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: String, deltaX: String, deltaY: String, deltaZ: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:String,deltaX:String,deltaY:String,deltaZ:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: Column, deltaX: Column, deltaY: Column, deltaZ: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:org.apache.spark.sql.Column,deltaX:org.apache.spark.sql.Column,deltaY:org.apache.spark.sql.Column,deltaZ:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: String, deltaX: Double, deltaY: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:String,deltaX:Double,deltaY:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: String, deltaX: String, deltaY: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:String,deltaX:String,deltaY:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: Column, deltaX: Column, deltaY: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:org.apache.spark.sql.Column,deltaX:org.apache.spark.sql.Column,deltaY:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: String, uniformDelta: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:String,uniformDelta:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: String, uniformDelta: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:String,uniformDelta:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Expand", "tail" : "(geometry: Column, uniformDelta: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Expand", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Expand(geometry:org.apache.spark.sql.Column,uniformDelta:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Envelope", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Envelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Envelope(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Envelope", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Envelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Envelope(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_EndPoint", "tail" : "(lineString: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_EndPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_EndPoint(lineString:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_EndPoint", "tail" : "(lineString: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_EndPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_EndPoint(lineString:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DumpPoints", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DumpPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DumpPoints(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DumpPoints", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_DumpPoints", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_DumpPoints(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Dump", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Dump", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Dump(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Dump", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Dump", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Dump(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Distance", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Distance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Distance(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Distance", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Distance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Distance(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Dimension", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Dimension", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Dimension(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Dimension", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Dimension", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Dimension(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Difference", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Difference", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Difference(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Difference", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Difference", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Difference(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CrossesDateLine", "tail" : "(a: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_CrossesDateLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_CrossesDateLine(a:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CrossesDateLine", "tail" : "(a: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_CrossesDateLine", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_CrossesDateLine(a:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ConvexHull", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ConvexHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ConvexHull(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ConvexHull", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ConvexHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ConvexHull(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ConcaveHull", "tail" : "(geometry: String, pctConvex: Double, allowHoles: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ConcaveHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ConcaveHull(geometry:String,pctConvex:Double,allowHoles:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ConcaveHull", "tail" : "(geometry: Column, pctConvex: Column, allowHoles: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ConcaveHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ConcaveHull(geometry:org.apache.spark.sql.Column,pctConvex:org.apache.spark.sql.Column,allowHoles:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ConcaveHull", "tail" : "(geometry: String, pctConvex: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ConcaveHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ConcaveHull(geometry:String,pctConvex:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ConcaveHull", "tail" : "(geometry: Column, pctConvex: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ConcaveHull", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ConcaveHull(geometry:org.apache.spark.sql.Column,pctConvex:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CollectionExtract", "tail" : "(collection: String, geomType: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_CollectionExtract", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_CollectionExtract(collection:String,geomType:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CollectionExtract", "tail" : "(collection: Column, geomType: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_CollectionExtract", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_CollectionExtract(collection:org.apache.spark.sql.Column,geomType:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CollectionExtract", "tail" : "(collection: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_CollectionExtract", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_CollectionExtract(collection:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CollectionExtract", "tail" : "(collection: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_CollectionExtract", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_CollectionExtract(collection:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Collect", "tail" : "(geoms: Any*): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Collect(geoms:Any*):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Collect", "tail" : "(geoms: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Collect(geoms:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Collect", "tail" : "(geoms: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Collect(geoms:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ClosestPoint", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ClosestPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ClosestPoint(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ClosestPoint", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ClosestPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ClosestPoint(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Centroid", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Centroid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Centroid(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Centroid", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Centroid", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Centroid(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_BuildArea", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_BuildArea", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_BuildArea(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_BuildArea", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_BuildArea", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_BuildArea(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ShiftLongitude", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ShiftLongitude", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ShiftLongitude(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_ShiftLongitude", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_ShiftLongitude", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_ShiftLongitude(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_BestSRID", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_BestSRID", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_BestSRID(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_BestSRID", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_BestSRID", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_BestSRID(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Buffer", "tail" : "(geometry: String, buffer: Double, useSpheroid: Boolean, parameters: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Buffer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Buffer(geometry:String,buffer:Double,useSpheroid:Boolean,parameters:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Buffer", "tail" : "(geometry: Column, buffer: Column, useSpheroid: Column, parameters: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Buffer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Buffer(geometry:org.apache.spark.sql.Column,buffer:org.apache.spark.sql.Column,useSpheroid:org.apache.spark.sql.Column,parameters:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Buffer", "tail" : "(geometry: String, buffer: Double, useSpheroid: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Buffer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Buffer(geometry:String,buffer:Double,useSpheroid:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Buffer", "tail" : "(geometry: Column, buffer: Column, useSpheroid: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Buffer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Buffer(geometry:org.apache.spark.sql.Column,buffer:org.apache.spark.sql.Column,useSpheroid:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Buffer", "tail" : "(geometry: String, buffer: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Buffer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Buffer(geometry:String,buffer:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Buffer", "tail" : "(geometry: Column, buffer: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Buffer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Buffer(geometry:org.apache.spark.sql.Column,buffer:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Boundary", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Boundary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Boundary(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Boundary", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Boundary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Boundary(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Azimuth", "tail" : "(pointA: String, pointB: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Azimuth", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Azimuth(pointA:String,pointB:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Azimuth", "tail" : "(pointA: Column, pointB: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Azimuth", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Azimuth(pointA:org.apache.spark.sql.Column,pointB:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsText", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsText(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsText", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsText", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsText(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsKML", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsKML", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsKML(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsKML", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsKML", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsKML(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsGML", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsGML", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsGML(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsGML", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsGML", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsGML(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsGeoJSON", "tail" : "(geometry: String, Type: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsGeoJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsGeoJSON(geometry:String,Type:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsGeoJSON", "tail" : "(geometry: Column, Type: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsGeoJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsGeoJSON(geometry:org.apache.spark.sql.Column,Type:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsGeoJSON", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsGeoJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsGeoJSON(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsGeoJSON", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsGeoJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsGeoJSON(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsEWKT", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsEWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsEWKT(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsEWKT", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsEWKT", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsEWKT(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsHEXEWKB", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsHEXEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsHEXEWKB(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsHEXEWKB", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsHEXEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsHEXEWKB(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsHEXEWKB", "tail" : "(geometry: String, endian: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsHEXEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsHEXEWKB(geometry:String,endian:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsHEXEWKB", "tail" : "(geometry: Column, endian: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsHEXEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsHEXEWKB(geometry:org.apache.spark.sql.Column,endian:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsEWKB", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsEWKB(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsEWKB", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsEWKB", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsEWKB(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsBinary", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsBinary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsBinary(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AsBinary", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AsBinary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AsBinary(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Area", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Area", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Area(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Area", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_Area", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_Area(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LabelPoint", "tail" : "(geometry: String, gridResolution: Integer, goodnessThreshold: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LabelPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LabelPoint(geometry:String,gridResolution:Integer,goodnessThreshold:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LabelPoint", "tail" : "(geometry: Column, gridResolution: Column, goodnessThreshold: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LabelPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LabelPoint(geometry:org.apache.spark.sql.Column,gridResolution:org.apache.spark.sql.Column,goodnessThreshold:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LabelPoint", "tail" : "(geometry: String, gridResolution: Integer): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LabelPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LabelPoint(geometry:String,gridResolution:Integer):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LabelPoint", "tail" : "(geometry: Column, gridResolution: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LabelPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LabelPoint(geometry:org.apache.spark.sql.Column,gridResolution:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LabelPoint", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LabelPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LabelPoint(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_LabelPoint", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_LabelPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_LabelPoint(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AddPoint", "tail" : "(lineString: String, point: String, index: Int): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AddPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AddPoint(lineString:String,point:String,index:Int):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AddPoint", "tail" : "(lineString: Column, point: Column, index: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AddPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AddPoint(lineString:org.apache.spark.sql.Column,point:org.apache.spark.sql.Column,index:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AddPoint", "tail" : "(lineString: String, point: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AddPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AddPoint(lineString:String,point:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AddPoint", "tail" : "(lineString: Column, point: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AddPoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AddPoint(lineString:org.apache.spark.sql.Column,point:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AddMeasure", "tail" : "(geom: String, measureStart: String, measureEnd: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AddMeasure", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AddMeasure(geom:String,measureStart:String,measureEnd:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AddMeasure", "tail" : "(geom: String, measureStart: Double, measureEnd: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AddMeasure", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AddMeasure(geom:String,measureStart:Double,measureEnd:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_AddMeasure", "tail" : "(geom: Column, measureStart: Column, measureEnd: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_AddMeasure", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_AddMeasure(geom:org.apache.spark.sql.Column,measureStart:org.apache.spark.sql.Column,measureEnd:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_3DDistance", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_3DDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_3DDistance(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_3DDistance", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ST_3DDistance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ST_3DDistance(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "GeometryType", "tail" : "(geometry: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.GeometryType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#GeometryType(geometry:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "GeometryType", "tail" : "(geometry: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.GeometryType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#GeometryType(geometry:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ParseAddress", "tail" : "(address: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ParseAddress", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ParseAddress(address:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ParseAddress", "tail" : "(address: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ParseAddress", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ParseAddress(address:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ExpandAddress", "tail" : "(address: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ExpandAddress", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ExpandAddress(address:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ExpandAddress", "tail" : "(address: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_functions.ExpandAddress", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ExpandAddress(address:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_functions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate", "shortDescription" : "", "members_class" : [{"label" : "eval", "tail" : "(inputRow: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate.eval", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#eval(inputRow:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate.dataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputTypes", "tail" : "(): Seq[AbstractDataType]", "member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate.inputTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#inputTypes:Seq[org.apache.spark.sql.types.AbstractDataType]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate.nullable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#toString():String", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate#<init>", "error" : "unsupported entity"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.ExpectsInputTypes.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.FoldableExpression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#foldable:Boolean", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#prettyName:String", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "evalGeom", "tail" : "(leftGeometry: Geometry, rightGeometry: Geometry): Boolean", "member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate.evalGeom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#evalGeom(leftGeometry:org.locationtech.jts.geom.Geometry,rightGeometry:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "abstract def"}, {"label" : "inputExpressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.expressions.ST_Predicate.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "abstract def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "abstract def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#withNewChildrenInternal(newChildren:IndexedSeq[BaseType]):BaseType", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/ST_Predicate.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html", "members_object" : [{"label" : "ST_KNN", "tail" : "(a: String, b: String, distance: Double, useSphere: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_KNN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_KNN(a:String,b:String,distance:Double,useSphere:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_KNN", "tail" : "(a: Column, b: Column, distance: Column, useSphere: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_KNN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_KNN(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column,distance:org.apache.spark.sql.Column,useSphere:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_KNN", "tail" : "(a: String, b: String, distance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_KNN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_KNN(a:String,b:String,distance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_KNN", "tail" : "(a: Column, b: Column, distance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_KNN", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_KNN(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column,distance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DWithin", "tail" : "(a: String, b: String, distance: Double, useSphere: Boolean): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_DWithin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_DWithin(a:String,b:String,distance:Double,useSphere:Boolean):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DWithin", "tail" : "(a: Column, b: Column, distance: Column, useSphere: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_DWithin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_DWithin(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column,distance:org.apache.spark.sql.Column,useSphere:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DWithin", "tail" : "(a: String, b: String, distance: Double): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_DWithin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_DWithin(a:String,b:String,distance:Double):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_DWithin", "tail" : "(a: Column, b: Column, distance: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_DWithin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_DWithin(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column,distance:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CoveredBy", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_CoveredBy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_CoveredBy(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_CoveredBy", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_CoveredBy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_CoveredBy(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Covers", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Covers", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Covers(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Covers", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Covers", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Covers(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Within", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Within", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Within(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Within", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Within", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Within(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RelateMatch", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_RelateMatch", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_RelateMatch(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_RelateMatch", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_RelateMatch", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_RelateMatch(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Relate", "tail" : "(a: String, b: String, intersectionMatrix: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Relate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Relate(a:String,b:String,intersectionMatrix:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Relate", "tail" : "(a: Column, b: Column, intersectionMatrix: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Relate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Relate(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column,intersectionMatrix:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Relate", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Relate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Relate(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Relate", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Relate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Relate(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Touches", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Touches", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Touches(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Touches", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Touches", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Touches(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Overlaps", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Overlaps", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Overlaps(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Overlaps", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Overlaps", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Overlaps(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_OrderingEquals", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_OrderingEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_OrderingEquals(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_OrderingEquals", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_OrderingEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_OrderingEquals(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Intersects", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Intersects", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Intersects(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Intersects", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Intersects", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Intersects(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Equals", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Equals(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Equals", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Equals(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Disjoint", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Disjoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Disjoint(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Disjoint", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Disjoint", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Disjoint(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Crosses", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Crosses", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Crosses(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Crosses", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Crosses", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Crosses(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Contains", "tail" : "(a: String, b: String): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Contains", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Contains(a:String,b:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "ST_Contains", "tail" : "(a: Column, b: Column): Column", "member" : "org.apache.spark.sql.sedona_sql.expressions.st_predicates.ST_Contains", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ST_Contains(a:org.apache.spark.sql.Column,b:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/st_predicates$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.expressions.TraitSTAggregateExec", "members_trait" : [{"label" : "finish", "tail" : "(out: Geometry): Geometry", "member" : "org.apache.spark.sql.sedona_sql.expressions.TraitSTAggregateExec.finish", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#finish(out:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "outputEncoder", "tail" : "(): ExpressionEncoder[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.expressions.TraitSTAggregateExec.outputEncoder", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#outputEncoder:org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "bufferEncoder", "tail" : "(): ExpressionEncoder[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.expressions.TraitSTAggregateExec.bufferEncoder", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#bufferEncoder:org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "zero", "tail" : "(): Geometry", "member" : "org.apache.spark.sql.sedona_sql.expressions.TraitSTAggregateExec.zero", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#zero:org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "serde", "tail" : ": ExpressionEncoder[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.expressions.TraitSTAggregateExec.serde", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#serde:org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[org.locationtech.jts.geom.Geometry]", "kind" : "val"}, {"label" : "initialGeometry", "tail" : ": Geometry", "member" : "org.apache.spark.sql.sedona_sql.expressions.TraitSTAggregateExec.initialGeometry", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#initialGeometry:org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "traits for creating Aggregate Function", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/expressions\/TraitSTAggregateExec.html", "kind" : "trait"}], "org.apache.sedona.python.wrapper.utils" : [{"name" : "org.apache.sedona.python.wrapper.utils.implicits", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html", "members_object" : [{"label" : "GeometryEnhancer", "tail" : "", "member" : "org.apache.sedona.python.wrapper.utils.implicits.GeometryEnhancer", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#GeometryEnhancerextendsAnyRef", "kind" : "implicit class"}, {"label" : "DoubleImplicit", "tail" : "", "member" : "org.apache.sedona.python.wrapper.utils.implicits.DoubleImplicit", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#DoubleImplicitextendsAnyRef", "kind" : "implicit class"}, {"label" : "IntImplicit", "tail" : "", "member" : "org.apache.sedona.python.wrapper.utils.implicits.IntImplicit", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#IntImplicitextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.python.wrapper.utils.PythonAdapterWrapper", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html", "members_object" : [{"label" : "toDf", "tail" : "(spatialPairRDD: JavaPairRDD[Geometry, Geometry], leftFieldnames: ArrayList[String], rightFieldNames: ArrayList[String], sparkSession: SparkSession): DataFrame", "member" : "org.apache.sedona.python.wrapper.utils.PythonAdapterWrapper.toDf", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#toDf(spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry],leftFieldnames:java.util.ArrayList[String],rightFieldNames:java.util.ArrayList[String],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialRDD: SpatialRDD[T], fieldNames: ArrayList[String], sparkSession: SparkSession): DataFrame", "member" : "org.apache.sedona.python.wrapper.utils.PythonAdapterWrapper.toDf", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#toDf[T<:org.locationtech.jts.geom.Geometry](spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[T],fieldNames:java.util.ArrayList[String],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(df: DataFrame, geometryColumn: String, fieldNames: List[String]): SpatialRDD[Geometry]", "member" : "org.apache.sedona.python.wrapper.utils.PythonAdapterWrapper.toSpatialRdd", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#toSpatialRdd(df:org.apache.spark.sql.DataFrame,geometryColumn:String,fieldNames:java.util.List[String]):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/utils\/PythonAdapterWrapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.python.wrapper.adapters" : [{"name" : "org.apache.sedona.python.wrapper.adapters.EnvelopeAdapter", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html", "members_object" : [{"label" : "getFromPython", "tail" : "(bytes: Array[Byte]): List[Envelope]", "member" : "org.apache.sedona.python.wrapper.adapters.EnvelopeAdapter.getFromPython", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#getFromPython(bytes:Array[Byte]):java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/EnvelopeAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.python.wrapper.adapters.GeometryAdapter", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html", "members_object" : [{"label" : "translateToJava", "tail" : "(geometryBytes: ArrayList[Int]): Geometry", "member" : "org.apache.sedona.python.wrapper.adapters.GeometryAdapter.translateToJava", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#translateToJava(geometryBytes:java.util.ArrayList[Int]):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "geometrySerializer", "tail" : ": PythonGeometrySerializer", "member" : "org.apache.sedona.python.wrapper.adapters.GeomSerializer.geometrySerializer", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#geometrySerializer:org.apache.sedona.python.wrapper.translation.PythonGeometrySerializer", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeometryAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.python.wrapper.adapters.GeomSerializer", "members_trait" : [{"label" : "geometrySerializer", "tail" : ": PythonGeometrySerializer", "member" : "org.apache.sedona.python.wrapper.adapters.GeomSerializer.geometrySerializer", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#geometrySerializer:org.apache.sedona.python.wrapper.translation.PythonGeometrySerializer", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/apache\/sedona\/python\/wrapper\/adapters\/GeomSerializer.html", "kind" : "trait"}, {"name" : "org.apache.sedona.python.wrapper.adapters.JoinParamsAdapter", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html", "members_object" : [{"label" : "createJoinParams", "tail" : "(useIndex: Boolean, considerBoundaryIntersection: Boolean, indexType: String, joinBuildSide: String): JoinParams", "member" : "org.apache.sedona.python.wrapper.adapters.JoinParamsAdapter.createJoinParams", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#createJoinParams(useIndex:Boolean,considerBoundaryIntersection:Boolean,indexType:String,joinBuildSide:String):org.apache.sedona.core.spatialOperator.JoinQuery.JoinParams", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/JoinParamsAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.python.wrapper.adapters.PythonConverter", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html", "members_object" : [{"label" : "translateGeometrySeqToPython", "tail" : "(spatialData: List[Geometry]): Array[Array[Byte]]", "member" : "org.apache.sedona.python.wrapper.adapters.PythonConverter.translateGeometrySeqToPython", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#translateGeometrySeqToPython(spatialData:java.util.List[org.locationtech.jts.geom.Geometry]):Array[Array[Byte]]", "kind" : "def"}, {"label" : "translatePythonRDDToJava", "tail" : "(pythonRDD: JavaRDD[Array[Byte]]): JavaRDD[Geometry]", "member" : "org.apache.sedona.python.wrapper.adapters.PythonConverter.translatePythonRDDToJava", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#translatePythonRDDToJava(pythonRDD:org.apache.spark.api.java.JavaRDD[Array[Byte]]):org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "translateSpatialPairRDDWithListToPython", "tail" : "(spatialRDD: JavaPairRDD[Geometry, List[Geometry]]): JavaRDD[Array[Byte]]", "member" : "org.apache.sedona.python.wrapper.adapters.PythonConverter.translateSpatialPairRDDWithListToPython", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#translateSpatialPairRDDWithListToPython(spatialRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,java.util.List[org.locationtech.jts.geom.Geometry]]):org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "def"}, {"label" : "translateSpatialPairRDDToPython", "tail" : "(spatialRDD: JavaPairRDD[Geometry, Geometry]): JavaRDD[Array[Byte]]", "member" : "org.apache.sedona.python.wrapper.adapters.PythonConverter.translateSpatialPairRDDToPython", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#translateSpatialPairRDDToPython(spatialRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry]):org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "def"}, {"label" : "translateSpatialRDDToPython", "tail" : "(spatialRDD: JavaRDD[Geometry]): JavaRDD[Array[Byte]]", "member" : "org.apache.sedona.python.wrapper.adapters.PythonConverter.translateSpatialRDDToPython", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#translateSpatialRDDToPython(spatialRDD:org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.Geometry]):org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "def"}, {"label" : "geometrySerializer", "tail" : ": PythonGeometrySerializer", "member" : "org.apache.sedona.python.wrapper.adapters.GeomSerializer.geometrySerializer", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#geometrySerializer:org.apache.sedona.python.wrapper.translation.PythonGeometrySerializer", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.python.wrapper.adapters.PythonRddToJavaRDDAdapter", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html", "members_object" : [{"label" : "deserializeToLineStringRawRDD", "tail" : "(javaRDD: JavaRDD[Array[Byte]]): JavaRDD[LineString]", "member" : "org.apache.sedona.python.wrapper.adapters.PythonRddToJavaRDDAdapter.deserializeToLineStringRawRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#deserializeToLineStringRawRDD(javaRDD:org.apache.spark.api.java.JavaRDD[Array[Byte]]):org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.LineString]", "kind" : "def"}, {"label" : "deserializeToPolygonRawRDD", "tail" : "(javaRDD: JavaRDD[Array[Byte]]): JavaRDD[Polygon]", "member" : "org.apache.sedona.python.wrapper.adapters.PythonRddToJavaRDDAdapter.deserializeToPolygonRawRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#deserializeToPolygonRawRDD(javaRDD:org.apache.spark.api.java.JavaRDD[Array[Byte]]):org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.Polygon]", "kind" : "def"}, {"label" : "deserializeToPointRawRDD", "tail" : "(javaRDD: JavaRDD[Array[Byte]]): JavaRDD[Point]", "member" : "org.apache.sedona.python.wrapper.adapters.PythonRddToJavaRDDAdapter.deserializeToPointRawRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#deserializeToPointRawRDD(javaRDD:org.apache.spark.api.java.JavaRDD[Array[Byte]]):org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.Point]", "kind" : "def"}, {"label" : "geometrySerializer", "tail" : ": PythonGeometrySerializer", "member" : "org.apache.sedona.python.wrapper.adapters.GeomSerializer.geometrySerializer", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#geometrySerializer:org.apache.sedona.python.wrapper.translation.PythonGeometrySerializer", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/PythonRddToJavaRDDAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.python.wrapper.adapters.RawJvmIndexRDDAdapter", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html", "members_object" : [{"label" : "setRawIndexRDD", "tail" : "(spatialRDD: SpatialRDD[Geometry], indexRDD: JavaRDD[SpatialIndex]): Boolean", "member" : "org.apache.sedona.python.wrapper.adapters.RawJvmIndexRDDAdapter.setRawIndexRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#setRawIndexRDD(spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],indexRDD:org.apache.spark.api.java.JavaRDD[org.locationtech.jts.index.SpatialIndex]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/RawJvmIndexRDDAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.python.wrapper.adapters.SpatialObjectLoaderAdapter", "shortDescription" : "", "object" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html", "members_object" : [{"label" : "loadIndexRDD", "tail" : "(sc: JavaSparkContext, path: String): JavaRDD[SpatialIndex]", "member" : "org.apache.sedona.python.wrapper.adapters.SpatialObjectLoaderAdapter.loadIndexRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#loadIndexRDD(sc:org.apache.spark.api.java.JavaSparkContext,path:String):org.apache.spark.api.java.JavaRDD[org.locationtech.jts.index.SpatialIndex]", "kind" : "def"}, {"label" : "loadLineStringSpatialRDD", "tail" : "(sc: JavaSparkContext, path: String): LineStringRDD", "member" : "org.apache.sedona.python.wrapper.adapters.SpatialObjectLoaderAdapter.loadLineStringSpatialRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#loadLineStringSpatialRDD(sc:org.apache.spark.api.java.JavaSparkContext,path:String):org.apache.sedona.core.spatialRDD.LineStringRDD", "kind" : "def"}, {"label" : "loadSpatialRDD", "tail" : "(sc: JavaSparkContext, path: String): SpatialRDD[Geometry]", "member" : "org.apache.sedona.python.wrapper.adapters.SpatialObjectLoaderAdapter.loadSpatialRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#loadSpatialRDD(sc:org.apache.spark.api.java.JavaSparkContext,path:String):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "loadPolygonSpatialRDD", "tail" : "(sc: JavaSparkContext, path: String): PolygonRDD", "member" : "org.apache.sedona.python.wrapper.adapters.SpatialObjectLoaderAdapter.loadPolygonSpatialRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#loadPolygonSpatialRDD(sc:org.apache.spark.api.java.JavaSparkContext,path:String):org.apache.sedona.core.spatialRDD.PolygonRDD", "kind" : "def"}, {"label" : "loadPointSpatialRDD", "tail" : "(sc: JavaSparkContext, path: String): PointRDD", "member" : "org.apache.sedona.python.wrapper.adapters.SpatialObjectLoaderAdapter.loadPointSpatialRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#loadPointSpatialRDD(sc:org.apache.spark.api.java.JavaSparkContext,path:String):org.apache.sedona.core.spatialRDD.PointRDD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/adapters\/SpatialObjectLoaderAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql.sedona_sql.io.raster" : [{"name" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitter", "shortDescription" : "", "members_class" : [{"member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitter#<init>", "error" : "unsupported entity"}, {"label" : "abortTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.abortTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#abortTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "commitTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.commitTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#commitTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "needsTaskCommit", "tail" : "(taskContext: TaskAttemptContext): Boolean", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.needsTaskCommit", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#needsTaskCommit(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Boolean", "kind" : "def"}, {"label" : "setupTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.setupTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#setupTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "commitJob", "tail" : "(jobContext: JobContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.commitJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#commitJob(jobContext:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "setupJob", "tail" : "(jobContext: JobContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.setupJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#setupJob(jobContext:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "recoverTask", "tail" : "(arg0: TaskAttemptContext): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.recoverTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#recoverTask(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "isRecoverySupported", "tail" : "(arg0: JobContext): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isRecoverySupported", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#isRecoverySupported(x$1:org.apache.hadoop.mapreduce.JobContext):Boolean", "kind" : "def"}, {"label" : "isCommitJobRepeatable", "tail" : "(arg0: JobContext): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isCommitJobRepeatable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#isCommitJobRepeatable(x$1:org.apache.hadoop.mapreduce.JobContext):Boolean", "kind" : "def"}, {"label" : "isRecoverySupported", "tail" : "(): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isRecoverySupported", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#isRecoverySupported():Boolean", "kind" : "def"}, {"label" : "abortJob", "tail" : "(arg0: JobContext, arg1: State): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.abortJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#abortJob(x$1:org.apache.hadoop.mapreduce.JobContext,x$2:org.apache.hadoop.mapreduce.JobStatus.State):Unit", "kind" : "def"}, {"label" : "cleanupJob", "tail" : "(arg0: JobContext): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.cleanupJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#cleanupJob(x$1:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitter.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterFactory", "shortDescription" : "", "members_class" : [{"label" : "createOutputCommitter", "tail" : "(outputPath: Path, context: TaskAttemptContext): PathOutputCommitter", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterFactory.createOutputCommitter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#createOutputCommitter(outputPath:org.apache.hadoop.fs.Path,context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.lib.output.PathOutputCommitter", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterFactory#<init>", "error" : "unsupported entity"}, {"label" : "createFileOutputCommitter", "tail" : "(arg0: Path, arg1: TaskAttemptContext): PathOutputCommitter", "member" : "org.apache.hadoop.mapreduce.lib.output.PathOutputCommitterFactory.createFileOutputCommitter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#createFileOutputCommitter(x$1:org.apache.hadoop.fs.Path,x$2:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.lib.output.PathOutputCommitter", "kind" : "final def"}, {"label" : "getConf", "tail" : "(): Configuration", "member" : "org.apache.hadoop.conf.Configured.getConf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#getConf():org.apache.hadoop.conf.Configuration", "kind" : "def"}, {"label" : "setConf", "tail" : "(arg0: Configuration): Unit", "member" : "org.apache.hadoop.conf.Configured.setConf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#setConf(x$1:org.apache.hadoop.conf.Configuration):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterFactory.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait", "members_trait" : [{"label" : "abortTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.abortTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#abortTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "commitTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.commitTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#commitTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "needsTaskCommit", "tail" : "(taskContext: TaskAttemptContext): Boolean", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.needsTaskCommit", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#needsTaskCommit(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Boolean", "kind" : "def"}, {"label" : "setupTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.setupTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#setupTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "commitJob", "tail" : "(jobContext: JobContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.commitJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#commitJob(jobContext:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "setupJob", "tail" : "(jobContext: JobContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.setupJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#setupJob(jobContext:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "recoverTask", "tail" : "(arg0: TaskAttemptContext): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.recoverTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#recoverTask(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "isRecoverySupported", "tail" : "(arg0: JobContext): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isRecoverySupported", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#isRecoverySupported(x$1:org.apache.hadoop.mapreduce.JobContext):Boolean", "kind" : "def"}, {"label" : "isCommitJobRepeatable", "tail" : "(arg0: JobContext): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isCommitJobRepeatable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#isCommitJobRepeatable(x$1:org.apache.hadoop.mapreduce.JobContext):Boolean", "kind" : "def"}, {"label" : "isRecoverySupported", "tail" : "(): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isRecoverySupported", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#isRecoverySupported():Boolean", "kind" : "def"}, {"label" : "abortJob", "tail" : "(arg0: JobContext, arg1: State): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.abortJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#abortJob(x$1:org.apache.hadoop.mapreduce.JobContext,x$2:org.apache.hadoop.mapreduce.JobStatus.State):Unit", "kind" : "def"}, {"label" : "cleanupJob", "tail" : "(arg0: JobContext): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.cleanupJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#cleanupJob(x$1:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectOutputCommitterTrait.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.io.raster.DirectPathOutputCommitter", "shortDescription" : "", "members_class" : [{"label" : "getWorkPath", "tail" : "(): Path", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectPathOutputCommitter.getWorkPath", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#getWorkPath():org.apache.hadoop.fs.Path", "kind" : "def"}, {"label" : "getOutputPath", "tail" : "(): Path", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectPathOutputCommitter.getOutputPath", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#getOutputPath():org.apache.hadoop.fs.Path", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectPathOutputCommitter#<init>", "error" : "unsupported entity"}, {"label" : "abortTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.abortTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#abortTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "commitTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.commitTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#commitTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "needsTaskCommit", "tail" : "(taskContext: TaskAttemptContext): Boolean", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.needsTaskCommit", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#needsTaskCommit(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Boolean", "kind" : "def"}, {"label" : "setupTask", "tail" : "(taskContext: TaskAttemptContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.setupTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#setupTask(taskContext:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "commitJob", "tail" : "(jobContext: JobContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.commitJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#commitJob(jobContext:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "setupJob", "tail" : "(jobContext: JobContext): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.raster.DirectOutputCommitterTrait.setupJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#setupJob(jobContext:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.hadoop.mapreduce.lib.output.PathOutputCommitter.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#toString():String", "kind" : "def"}, {"label" : "hasOutputPath", "tail" : "(): Boolean", "member" : "org.apache.hadoop.mapreduce.lib.output.PathOutputCommitter.hasOutputPath", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#hasOutputPath():Boolean", "kind" : "def"}, {"label" : "recoverTask", "tail" : "(arg0: TaskAttemptContext): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.recoverTask", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#recoverTask(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "isRecoverySupported", "tail" : "(arg0: JobContext): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isRecoverySupported", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#isRecoverySupported(x$1:org.apache.hadoop.mapreduce.JobContext):Boolean", "kind" : "def"}, {"label" : "isCommitJobRepeatable", "tail" : "(arg0: JobContext): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isCommitJobRepeatable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#isCommitJobRepeatable(x$1:org.apache.hadoop.mapreduce.JobContext):Boolean", "kind" : "def"}, {"label" : "isRecoverySupported", "tail" : "(): Boolean", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.isRecoverySupported", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#isRecoverySupported():Boolean", "kind" : "def"}, {"label" : "abortJob", "tail" : "(arg0: JobContext, arg1: State): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.abortJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#abortJob(x$1:org.apache.hadoop.mapreduce.JobContext,x$2:org.apache.hadoop.mapreduce.JobStatus.State):Unit", "kind" : "def"}, {"label" : "cleanupJob", "tail" : "(arg0: JobContext): Unit", "member" : "org.apache.hadoop.mapreduce.OutputCommitter.cleanupJob", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#cleanupJob(x$1:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/raster\/DirectPathOutputCommitter.html", "kind" : "class"}], "org.apache.sedona.viz.sql.UDF" : [{"name" : "org.apache.sedona.viz.sql.UDF.Catalog", "shortDescription" : "", "object" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html", "members_object" : [{"label" : "aggregateExpressions", "tail" : ": Seq[UserDefinedAggregateFunction]", "member" : "org.apache.sedona.viz.sql.UDF.Catalog.aggregateExpressions", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#aggregateExpressions:Seq[org.apache.spark.sql.expressions.UserDefinedAggregateFunction]", "kind" : "val"}, {"label" : "expressions", "tail" : ": Seq[FunctionBuilder]", "member" : "org.apache.sedona.viz.sql.UDF.Catalog.expressions", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#expressions:Seq[org.apache.spark.sql.catalyst.analysis.FunctionRegistry.FunctionBuilder]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/Catalog$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.viz.sql.UDF.UdfRegistrator", "shortDescription" : "", "object" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html", "members_object" : [{"label" : "dropAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.viz.sql.UDF.UdfRegistrator.dropAll", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#dropAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.viz.sql.UDF.UdfRegistrator.registerAll", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#registerAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sqlContext: SQLContext): Unit", "member" : "org.apache.sedona.viz.sql.UDF.UdfRegistrator.registerAll", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#registerAll(sqlContext:org.apache.spark.sql.SQLContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/UDF\/UdfRegistrator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql.sedona_sql.strategy.physical.function" : [{"name" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildInternal", "tail" : "(newChild: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec.withNewChildInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#withNewChildInternal(newChild:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec#<init>", "error" : "unsupported entity"}, {"label" : "resultAttrs", "tail" : ": Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec.resultAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#resultAttrs:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "val"}, {"label" : "child", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec.child", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#child:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "function", "tail" : ": PhysicalFunction", "member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionExec.function", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#function:org.apache.spark.sql.sedona_sql.expressions.PhysicalFunction", "kind" : "val"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.execution.UnaryExecNode.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "final def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#children:Seq[T]", "kind" : "final lazy val"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "metrics", "tail" : "(): Map[String, SQLMetric]", "member" : "org.apache.spark.sql.execution.SparkPlan.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#formattedNodeName:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): EvalPhysicalFunctionExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionExec.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionStrategy", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(plan: LogicalPlan): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionStrategy.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#apply(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.physical.function.EvalPhysicalFunctionStrategy#<init>", "error" : "unsupported entity"}, {"label" : "planLater", "tail" : "(plan: LogicalPlan): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkStrategy.planLater", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#planLater(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/physical\/function\/EvalPhysicalFunctionStrategy.html", "kind" : "class"}], "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils" : [], "org.apache.sedona.core.utils" : [{"name" : "org.apache.sedona.core.utils.RDDSampleUtils", "shortDescription" : "The Class RDDSampleUtils.", "members_class" : [{"member" : "org.apache.sedona.core.utils.RDDSampleUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/utils\/RDDSampleUtils.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.utils.SedonaConf", "shortDescription" : "", "members_class" : [{"label" : "getLibPostalUseSenzing", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.utils.SedonaConf.getLibPostalUseSenzing", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getLibPostalUseSenzing():Boolean", "kind" : "def"}, {"label" : "getLibPostalDataDir", "tail" : "(): String", "member" : "org.apache.sedona.core.utils.SedonaConf.getLibPostalDataDir", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getLibPostalDataDir():String", "kind" : "def"}, {"label" : "getDBSCANIncludeOutliers", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.utils.SedonaConf.getDBSCANIncludeOutliers", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getDBSCANIncludeOutliers():Boolean", "kind" : "def"}, {"label" : "getSpatialJoinOptimizationMode", "tail" : "(): SpatialJoinOptimizationMode", "member" : "org.apache.sedona.core.utils.SedonaConf.getSpatialJoinOptimizationMode", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getSpatialJoinOptimizationMode():org.apache.sedona.core.enums.SpatialJoinOptimizationMode", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.core.utils.SedonaConf.toString", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#toString():String", "kind" : "def"}, {"label" : "isIncludeTieBreakersInKNNJoins", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.utils.SedonaConf.isIncludeTieBreakersInKNNJoins", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#isIncludeTieBreakersInKNNJoins():Boolean", "kind" : "def"}, {"label" : "getAutoBroadcastJoinThreshold", "tail" : "(): Long", "member" : "org.apache.sedona.core.utils.SedonaConf.getAutoBroadcastJoinThreshold", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getAutoBroadcastJoinThreshold():Long", "kind" : "def"}, {"label" : "getFallbackPartitionNum", "tail" : "(): Int", "member" : "org.apache.sedona.core.utils.SedonaConf.getFallbackPartitionNum", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getFallbackPartitionNum():Int", "kind" : "def"}, {"label" : "getJoinSpartitionDominantSide", "tail" : "(): JoinSpartitionDominantSide", "member" : "org.apache.sedona.core.utils.SedonaConf.getJoinSpartitionDominantSide", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getJoinSpartitionDominantSide():org.apache.sedona.core.enums.JoinSpartitionDominantSide", "kind" : "def"}, {"label" : "getJoinGridType", "tail" : "(): GridType", "member" : "org.apache.sedona.core.utils.SedonaConf.getJoinGridType", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getJoinGridType():org.apache.sedona.core.enums.GridType", "kind" : "def"}, {"label" : "getJoinBuildSide", "tail" : "(): JoinBuildSide", "member" : "org.apache.sedona.core.utils.SedonaConf.getJoinBuildSide", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getJoinBuildSide():org.apache.sedona.core.enums.JoinBuildSide", "kind" : "def"}, {"label" : "getDatasetBoundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.utils.SedonaConf.getDatasetBoundary", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getDatasetBoundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "getJoinApproximateTotalCount", "tail" : "(): Long", "member" : "org.apache.sedona.core.utils.SedonaConf.getJoinApproximateTotalCount", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getJoinApproximateTotalCount():Long", "kind" : "def"}, {"label" : "getIndexType", "tail" : "(): IndexType", "member" : "org.apache.sedona.core.utils.SedonaConf.getIndexType", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getIndexType():org.apache.sedona.core.enums.IndexType", "kind" : "def"}, {"label" : "getUseIndex", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.utils.SedonaConf.getUseIndex", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getUseIndex():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.core.utils.SedonaConf#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.utils.SedonaConf#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/utils\/SedonaConf.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.utils.TimeUtils", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.utils.TimeUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/utils\/TimeUtils.html", "kind" : "class"}], "org.apache.spark.sql.sedona_sql.io.geojson" : [{"name" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat", "shortDescription" : "This is taken from org.apache.spark.sql.execution.datasources.json.JsonFileFormat withslight modification to support GeoJSON and read\/write geometry values.", "members_class" : [{"label" : "supportDataType", "tail" : "(dataType: DataType): Boolean", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.supportDataType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#supportDataType(dataType:org.apache.spark.sql.types.DataType):Boolean", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#toString():String", "kind" : "def"}, {"label" : "buildReader", "tail" : "(sparkSession: SparkSession, dataSchema: StructType, partitionSchema: StructType, requiredSchema: StructType, filters: Seq[Filter], options: Map[String, String], hadoopConf: Configuration): (PartitionedFile) â‡’ Iterator[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.buildReader", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#buildReader(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,requiredSchema:org.apache.spark.sql.types.StructType,filters:Seq[org.apache.spark.sql.sources.Filter],options:Map[String,String],hadoopConf:org.apache.hadoop.conf.Configuration):org.apache.spark.sql.execution.datasources.PartitionedFile=>Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "prepareWrite", "tail" : "(sparkSession: SparkSession, job: Job, options: Map[String, String], dataSchema: StructType): OutputWriterFactory", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.prepareWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#prepareWrite(sparkSession:org.apache.spark.sql.SparkSession,job:org.apache.hadoop.mapreduce.Job,options:Map[String,String],dataSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.execution.datasources.OutputWriterFactory", "kind" : "def"}, {"label" : "inferSchema", "tail" : "(sparkSession: SparkSession, options: Map[String, String], files: Seq[FileStatus]): Option[StructType]", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.inferSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#inferSchema(sparkSession:org.apache.spark.sql.SparkSession,options:Map[String,String],files:Seq[org.apache.hadoop.fs.FileStatus]):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(sparkSession: SparkSession, options: Map[String, String], path: Path): Boolean", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.isSplitable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#isSplitable(sparkSession:org.apache.spark.sql.SparkSession,options:Map[String,String],path:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "shortName", "tail" : ": String", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat.shortName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#shortName:String", "kind" : "val"}, {"member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONFileFormat#<init>", "error" : "unsupported entity"}, {"label" : "supportFieldName", "tail" : "(name: String): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.supportFieldName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#supportFieldName(name:String):Boolean", "kind" : "def"}, {"label" : "buildReaderWithPartitionValues", "tail" : "(sparkSession: SparkSession, dataSchema: StructType, partitionSchema: StructType, requiredSchema: StructType, filters: Seq[Filter], options: Map[String, String], hadoopConf: Configuration): (PartitionedFile) â‡’ Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.buildReaderWithPartitionValues", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#buildReaderWithPartitionValues(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,requiredSchema:org.apache.spark.sql.types.StructType,filters:Seq[org.apache.spark.sql.sources.Filter],options:Map[String,String],hadoopConf:org.apache.hadoop.conf.Configuration):org.apache.spark.sql.execution.datasources.PartitionedFile=>Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(requiredSchema: StructType, partitionSchema: StructType, sqlConf: SQLConf): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#vectorTypes(requiredSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,sqlConf:org.apache.spark.sql.internal.SQLConf):Option[Seq[String]]", "kind" : "def"}, {"label" : "supportBatch", "tail" : "(sparkSession: SparkSession, dataSchema: StructType): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.supportBatch", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#supportBatch(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONFileFormat.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONOutputWriter", "shortDescription" : "This is taken from org.apache.spark.sql.execution.datasources.json.JsonOutputWriter withslight modifications to write GeoJSON output.", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONOutputWriter.close", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#close():Unit", "kind" : "def"}, {"label" : "write", "tail" : "(row: InternalRow): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONOutputWriter.write", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#write(row:org.apache.spark.sql.catalyst.InternalRow):Unit", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONOutputWriter#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": String", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONOutputWriter.path", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#path:String", "kind" : "val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONOutputWriter.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONUtils", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html", "members_object" : [{"label" : "convertGeoJsonToGeometry", "tail" : "(row: InternalRow, schema: StructType): InternalRow", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONUtils.convertGeoJsonToGeometry", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#convertGeoJsonToGeometry(row:org.apache.spark.sql.catalyst.InternalRow,schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.catalyst.InternalRow", "kind" : "def"}, {"label" : "convertGeometryToGeoJson", "tail" : "(row: InternalRow, schema: StructType): InternalRow", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONUtils.convertGeometryToGeoJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#convertGeometryToGeoJson(row:org.apache.spark.sql.catalyst.InternalRow,schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.catalyst.InternalRow", "kind" : "def"}, {"label" : "handleArray", "tail" : "(row: InternalRow, index: Int, elementType: DataType, toGeometry: Boolean): ArrayData", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONUtils.handleArray", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#handleArray(row:org.apache.spark.sql.catalyst.InternalRow,index:Int,elementType:org.apache.spark.sql.types.DataType,toGeometry:Boolean):org.apache.spark.sql.catalyst.util.ArrayData", "kind" : "def"}, {"label" : "geometryToGeoJson", "tail" : "(geometryBinary: Array[Byte]): String", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONUtils.geometryToGeoJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#geometryToGeoJson(geometryBinary:Array[Byte]):String", "kind" : "def"}, {"label" : "geoJsonToGeometry", "tail" : "(geoJson: String): Array[Byte]", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONUtils.geoJsonToGeometry", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#geoJsonToGeometry(geoJson:String):Array[Byte]", "kind" : "def"}, {"label" : "updateGeometrySchema", "tail" : "(schema: StructType, datatype: DataType): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.GeoJSONUtils.updateGeometrySchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#updateGeometrySchema(schema:org.apache.spark.sql.types.StructType,datatype:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/GeoJSONUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.io.geojson.SparkCompatUtil", "shortDescription" : "Making GeoJSONFileFormat and GeoJSONOutputWriter classes compatible with Spark 3.0.x.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html", "members_object" : [{"label" : "readFile", "tail" : "(jsonDataSource: JsonDataSource, conf: Configuration, file: PartitionedFile, parser: JacksonParser, schema: StructType): Iterator[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.SparkCompatUtil.readFile", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#readFile(jsonDataSource:org.apache.spark.sql.execution.datasources.json.JsonDataSource,conf:org.apache.hadoop.conf.Configuration,file:org.apache.spark.sql.execution.datasources.PartitionedFile,parser:org.apache.spark.sql.catalyst.json.JacksonParser,schema:org.apache.spark.sql.types.StructType):Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "constructJacksonParser", "tail" : "(schema: DataType, options: JSONOptions, allowArrayAsStructs: Boolean): JacksonParser", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.SparkCompatUtil.constructJacksonParser", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#constructJacksonParser(schema:org.apache.spark.sql.types.DataType,options:org.apache.spark.sql.catalyst.json.JSONOptions,allowArrayAsStructs:Boolean):org.apache.spark.sql.catalyst.json.JacksonParser", "kind" : "def"}, {"label" : "constructDateFormatter", "tail" : "(options: JSONOptions, zoneId: ZoneId, locale: Locale, legacyFormat: LegacyDateFormat, isParsing: Boolean): DateFormatter", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.SparkCompatUtil.constructDateFormatter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#constructDateFormatter(options:org.apache.spark.sql.catalyst.json.JSONOptions,zoneId:java.time.ZoneId,locale:java.util.Locale,legacyFormat:org.apache.spark.sql.catalyst.util.LegacyDateFormats.LegacyDateFormat,isParsing:Boolean):org.apache.spark.sql.catalyst.util.DateFormatter", "kind" : "def"}, {"label" : "constructTimestampFormatter", "tail" : "(options: JSONOptions, zoneId: ZoneId, locale: Locale, legacyFormat: LegacyDateFormat, isParsing: Boolean): TimestampFormatter", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.SparkCompatUtil.constructTimestampFormatter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#constructTimestampFormatter(options:org.apache.spark.sql.catalyst.json.JSONOptions,zoneId:java.time.ZoneId,locale:java.util.Locale,legacyFormat:org.apache.spark.sql.catalyst.util.LegacyDateFormats.LegacyDateFormat,isParsing:Boolean):org.apache.spark.sql.catalyst.util.TimestampFormatter", "kind" : "def"}, {"label" : "findNestedField", "tail" : "(schema: StructType, path: Array[String], resolver: Resolver): Option[StructField]", "member" : "org.apache.spark.sql.sedona_sql.io.geojson.SparkCompatUtil.findNestedField", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#findNestedField(schema:org.apache.spark.sql.types.StructType,path:Array[String],resolver:org.apache.spark.sql.catalyst.analysis.Resolver):Option[org.apache.spark.sql.types.StructField]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/geojson\/SparkCompatUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp" : [{"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.MultiPointParser", "shortDescription" : "", "members_class" : [{"label" : "parseShape", "tail" : "(reader: ShapeReader): Geometry", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.MultiPointParser.parseShape", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#parseShape(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.MultiPointParser#<init>", "error" : "unsupported entity"}, {"label" : "readOffsets", "tail" : "(reader: ShapeReader, numParts: Int, maxOffset: Int): Array[Int]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readOffsets", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#readOffsets(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numParts:Int,maxOffset:Int):Array[Int]", "kind" : "def"}, {"label" : "readCoordinatesWithM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#readCoordinatesWithM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinatesWithZM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithZM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#readCoordinatesWithZM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#readCoordinates(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/MultiPointParser.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PointParser", "shortDescription" : "", "members_class" : [{"label" : "parseShape", "tail" : "(reader: ShapeReader): Geometry", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PointParser.parseShape", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#parseShape(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PointParser#<init>", "error" : "unsupported entity"}, {"label" : "readOffsets", "tail" : "(reader: ShapeReader, numParts: Int, maxOffset: Int): Array[Int]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readOffsets", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#readOffsets(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numParts:Int,maxOffset:Int):Array[Int]", "kind" : "def"}, {"label" : "readCoordinatesWithM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#readCoordinatesWithM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinatesWithZM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithZM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#readCoordinatesWithZM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#readCoordinates(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PointParser.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PolygonParser", "shortDescription" : "", "members_class" : [{"label" : "parseShape", "tail" : "(reader: ShapeReader): Geometry", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PolygonParser.parseShape", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#parseShape(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PolygonParser#<init>", "error" : "unsupported entity"}, {"label" : "readOffsets", "tail" : "(reader: ShapeReader, numParts: Int, maxOffset: Int): Array[Int]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readOffsets", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#readOffsets(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numParts:Int,maxOffset:Int):Array[Int]", "kind" : "def"}, {"label" : "readCoordinatesWithM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#readCoordinatesWithM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinatesWithZM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithZM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#readCoordinatesWithZM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#readCoordinates(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolygonParser.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PolyLineParser", "shortDescription" : "", "members_class" : [{"label" : "parseShape", "tail" : "(reader: ShapeReader): Geometry", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PolyLineParser.parseShape", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#parseShape(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.PolyLineParser#<init>", "error" : "unsupported entity"}, {"label" : "readOffsets", "tail" : "(reader: ShapeReader, numParts: Int, maxOffset: Int): Array[Int]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readOffsets", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#readOffsets(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numParts:Int,maxOffset:Int):Array[Int]", "kind" : "def"}, {"label" : "readCoordinatesWithM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#readCoordinatesWithM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinatesWithZM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithZM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#readCoordinatesWithZM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#readCoordinates(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/PolyLineParser.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeFileConst", "members_trait" : [{"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeFileConst#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The Interface ShapeFileConst.", "trait" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeFileConst.html", "kind" : "trait"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser", "shortDescription" : "", "members_class" : [{"label" : "readOffsets", "tail" : "(reader: ShapeReader, numParts: Int, maxOffset: Int): Array[Int]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readOffsets", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#readOffsets(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numParts:Int,maxOffset:Int):Array[Int]", "kind" : "def"}, {"label" : "readCoordinatesWithM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#readCoordinatesWithM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinatesWithZM", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinatesWithZM", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#readCoordinatesWithZM(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "readCoordinates", "tail" : "(reader: ShapeReader, numPoints: Int): Array[Coordinate]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.readCoordinates", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#readCoordinates(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader,numPoints:Int):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parseShape", "tail" : "(reader: ShapeReader): Geometry", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser.parseShape", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html#parseShape(reader:org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader):org.locationtech.jts.geom.Geometry", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeParser.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader", "members_trait" : [{"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "skip", "tail" : "(numBytes: Int): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader.skip", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#skip(numBytes:Int):Unit", "kind" : "abstract def"}, {"label" : "readByte", "tail" : "(): Byte", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader.readByte", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#readByte():Byte", "kind" : "abstract def"}, {"label" : "readDouble", "tail" : "(): Double", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader.readDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#readDouble():Double", "kind" : "abstract def"}, {"label" : "readInt", "tail" : "(): Int", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReader.readInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html#readInt():Int", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReader.html", "kind" : "trait"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReaderFactory", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeReaderFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeReaderFactory.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeSerde", "shortDescription" : "Provides methods to efficiently serialize and deserialize geometry types using shapefile formatdeveloped by ESRI.", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeSerde#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeSerde.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeType", "shortDescription" : "", "members_class" : [{"label" : "isSupported", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeType.isSupported", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#isSupported():Boolean", "kind" : "def"}, {"label" : "getId", "tail" : "(): Int", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeType.getId", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#getId():Int", "kind" : "def"}, {"label" : "getParser", "tail" : "(geometryFactory: GeometryFactory): ShapeParser", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeType.getParser", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#getParser(geometryFactory:org.locationtech.jts.geom.GeometryFactory):org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShapeParser", "kind" : "def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[ShapeType]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: ShapeType): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShapeType.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShpFileParser", "shortDescription" : "", "members_class" : [{"label" : "getProgress", "tail" : "(): Float", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShpFileParser.getProgress", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#getProgress():Float", "kind" : "def"}, {"label" : "parseRecordHeadID", "tail" : "(): Int", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShpFileParser.parseRecordHeadID", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#parseRecordHeadID():Int", "kind" : "def"}, {"label" : "parseRecordPrimitiveContent", "tail" : "(length: Int): ShpRecord", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShpFileParser.parseRecordPrimitiveContent", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#parseRecordPrimitiveContent(length:Int):org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShpRecord", "kind" : "def"}, {"label" : "parseRecordPrimitiveContent", "tail" : "(): ShpRecord", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShpFileParser.parseRecordPrimitiveContent", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#parseRecordPrimitiveContent():org.apache.sedona.core.formatMapper.shapefileParser.shapes.ShpRecord", "kind" : "def"}, {"label" : "parseShapeFileHead", "tail" : "(): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShpFileParser.parseShapeFileHead", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#parseShapeFileHead():Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.ShpFileParser#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/ShpFileParser.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.TypeUnknownException", "shortDescription" : "The Class TypeUnknownException.", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.shp.TypeUnknownException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/shp\/TypeUnknownException.html", "kind" : "class"}], "org.apache.sedona.viz.sql.utils" : [{"name" : "org.apache.sedona.viz.sql.utils.Conf", "shortDescription" : "", "object" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html", "members_object" : [{"label" : "SecondaryPID", "tail" : ": String", "member" : "org.apache.sedona.viz.sql.utils.Conf.SecondaryPID", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#SecondaryPID:String", "kind" : "var"}, {"label" : "PrimaryPID", "tail" : ": String", "member" : "org.apache.sedona.viz.sql.utils.Conf.PrimaryPID", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#PrimaryPID:String", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/Conf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.viz.sql.utils.LineageDecoder", "shortDescription" : "", "object" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html", "members_object" : [{"label" : "relativeOffset", "tail" : "(id: Int): (Int, Int)", "member" : "org.apache.sedona.viz.sql.utils.LineageDecoder.relativeOffset", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#relativeOffset(id:Int):(Int,Int)", "kind" : "def"}, {"label" : "apply", "tail" : "(lineage: String): String", "member" : "org.apache.sedona.viz.sql.utils.LineageDecoder.apply", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#apply(lineage:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/LineageDecoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.viz.sql.utils.SedonaVizRegistrator", "shortDescription" : "", "object" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html", "members_object" : [{"label" : "dropAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.viz.sql.utils.SedonaVizRegistrator.dropAll", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#dropAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.viz.sql.utils.SedonaVizRegistrator.registerAll", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#registerAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sqlContext: SQLContext): Unit", "member" : "org.apache.sedona.viz.sql.utils.SedonaVizRegistrator.registerAll", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#registerAll(sqlContext:org.apache.spark.sql.SQLContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/utils\/SedonaVizRegistrator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.spark" : [{"name" : "org.apache.sedona.spark.InternalApi", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.spark.InternalApi#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/spark\/InternalApi.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/spark\/InternalApi.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/spark\/InternalApi.html", "kind" : "class"}, {"name" : "org.apache.sedona.spark.SedonaContext", "shortDescription" : "", "object" : "org\/apache\/sedona\/spark\/SedonaContext$.html", "members_object" : [{"label" : "builder", "tail" : "(): Builder", "member" : "org.apache.sedona.spark.SedonaContext.builder", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#builder():org.apache.spark.sql.SparkSession.Builder", "kind" : "def"}, {"label" : "create", "tail" : "(sparkSession: SparkSession, language: String): SparkSession", "member" : "org.apache.sedona.spark.SedonaContext.create", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#create(sparkSession:org.apache.spark.sql.SparkSession,language:String):org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "create", "tail" : "(sparkSession: SparkSession): SparkSession", "member" : "org.apache.sedona.spark.SedonaContext.create", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#create(sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "create", "tail" : "(sqlContext: SQLContext): SQLContext", "member" : "org.apache.sedona.spark.SedonaContext.create", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#create(sqlContext:org.apache.spark.sql.SQLContext):org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/spark\/SedonaContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.core.joinJudgement" : [{"name" : "org.apache.sedona.core.joinJudgement.DedupParams", "shortDescription" : "Contains information necessary to activate de-dup logic in subclasses of JudgementBase.", "members_class" : [{"label" : "getPartitionExtents", "tail" : "(): List[Envelope]", "member" : "org.apache.sedona.core.joinJudgement.DedupParams.getPartitionExtents", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#getPartitionExtents():java.util.List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"member" : "org.apache.sedona.core.joinJudgement.DedupParams#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/joinJudgement\/DedupParams.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.joinJudgement.DuplicatesFilter", "shortDescription" : "Provides optional de-dup logic.", "members_class" : [{"label" : "call", "tail" : "(partitionId: Integer, geometryPair: Iterator[Pair[U, T]]): Iterator[Pair[U, T]]", "member" : "org.apache.sedona.core.joinJudgement.DuplicatesFilter.call", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#call(partitionId:Integer,geometryPair:java.util.Iterator[org.apache.commons.lang3.tuple.Pair[U,T]]):java.util.Iterator[org.apache.commons.lang3.tuple.Pair[U,T]]", "kind" : "def"}, {"member" : "org.apache.sedona.core.joinJudgement.DuplicatesFilter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/joinJudgement\/DuplicatesFilter.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.joinJudgement.DynamicIndexLookupJudgement", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(leftShapes: Iterator[U], rightShapes: Iterator[T]): Iterator[Pair[U, T]]", "member" : "org.apache.sedona.core.joinJudgement.DynamicIndexLookupJudgement.call", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#call(leftShapes:java.util.Iterator[U],rightShapes:java.util.Iterator[T]):java.util.Iterator[org.apache.commons.lang3.tuple.Pair[U,T]]", "kind" : "def"}, {"member" : "org.apache.sedona.core.joinJudgement.DynamicIndexLookupJudgement#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(message: String, params: <repeated...>[AnyRef]): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.log", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#log(message:String,params:Object*):Unit", "kind" : "def"}, {"label" : "nextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#nextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "nextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#nextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#hasNextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):Boolean", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#hasNextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):Boolean", "kind" : "def"}, {"label" : "initPartition", "tail" : "(): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.initPartition", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#initPartition():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/joinJudgement\/DynamicIndexLookupJudgement.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.joinJudgement.InMemoryKNNJoinIterator", "shortDescription" : "", "members_class" : [{"label" : "next", "tail" : "(): Pair[T, U]", "member" : "org.apache.sedona.core.joinJudgement.InMemoryKNNJoinIterator.next", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#next():org.apache.commons.lang3.tuple.Pair[T,U]", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.joinJudgement.InMemoryKNNJoinIterator.hasNext", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#hasNext():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.core.joinJudgement.InMemoryKNNJoinIterator#<init>", "error" : "unsupported entity"}, {"label" : "forEachRemaining", "tail" : "(arg0: Consumer[_ >: Pair[T, U]]): Unit", "member" : "java.util.Iterator.forEachRemaining", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#forEachRemaining(x$1:java.util.function.Consumer[_>:E]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "java.util.Iterator.remove", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#remove():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/joinJudgement\/InMemoryKNNJoinIterator.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.joinJudgement.KnnJoinIndexJudgement", "shortDescription" : "This class is responsible for performing a K-nearest neighbors (KNN) join operation using aspatial index.", "members_class" : [{"label" : "callUsingBroadcastQueryList", "tail" : "(objectShapes: Iterator[U]): Iterator[Pair[T, U]]", "member" : "org.apache.sedona.core.joinJudgement.KnnJoinIndexJudgement.callUsingBroadcastQueryList", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#callUsingBroadcastQueryList(objectShapes:java.util.Iterator[U]):java.util.Iterator[org.apache.commons.lang3.tuple.Pair[T,U]]", "kind" : "def"}, {"label" : "callUsingBroadcastObjectIndex", "tail" : "(queryShapes: Iterator[T]): Iterator[Pair[T, U]]", "member" : "org.apache.sedona.core.joinJudgement.KnnJoinIndexJudgement.callUsingBroadcastObjectIndex", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#callUsingBroadcastObjectIndex(queryShapes:java.util.Iterator[T]):java.util.Iterator[org.apache.commons.lang3.tuple.Pair[T,U]]", "kind" : "def"}, {"label" : "call", "tail" : "(queryShapes: Iterator[T], objectShapes: Iterator[U]): Iterator[Pair[T, U]]", "member" : "org.apache.sedona.core.joinJudgement.KnnJoinIndexJudgement.call", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#call(queryShapes:java.util.Iterator[T],objectShapes:java.util.Iterator[U]):java.util.Iterator[org.apache.commons.lang3.tuple.Pair[T,U]]", "kind" : "def"}, {"member" : "org.apache.sedona.core.joinJudgement.KnnJoinIndexJudgement#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(message: String, params: <repeated...>[AnyRef]): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.log", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#log(message:String,params:Object*):Unit", "kind" : "def"}, {"label" : "nextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#nextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "nextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#nextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#hasNextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):Boolean", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#hasNextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):Boolean", "kind" : "def"}, {"label" : "initPartition", "tail" : "(): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.initPartition", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#initPartition():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/joinJudgement\/KnnJoinIndexJudgement.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.joinJudgement.LeftIndexLookupJudgement", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(indexIterator: Iterator[SpatialIndex], streamShapes: Iterator[U]): Iterator[Pair[U, T]]", "member" : "org.apache.sedona.core.joinJudgement.LeftIndexLookupJudgement.call", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#call(indexIterator:java.util.Iterator[org.locationtech.jts.index.SpatialIndex],streamShapes:java.util.Iterator[U]):java.util.Iterator[org.apache.commons.lang3.tuple.Pair[U,T]]", "kind" : "def"}, {"member" : "org.apache.sedona.core.joinJudgement.LeftIndexLookupJudgement#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(message: String, params: <repeated...>[AnyRef]): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.log", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#log(message:String,params:Object*):Unit", "kind" : "def"}, {"label" : "nextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#nextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "nextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#nextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#hasNextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):Boolean", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#hasNextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):Boolean", "kind" : "def"}, {"label" : "initPartition", "tail" : "(): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.initPartition", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#initPartition():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/joinJudgement\/LeftIndexLookupJudgement.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.joinJudgement.NestedLoopJudgement", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(iteratorObject: Iterator[T], iteratorWindow: Iterator[U]): Iterator[Pair[U, T]]", "member" : "org.apache.sedona.core.joinJudgement.NestedLoopJudgement.call", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#call(iteratorObject:java.util.Iterator[T],iteratorWindow:java.util.Iterator[U]):java.util.Iterator[org.apache.commons.lang3.tuple.Pair[U,T]]", "kind" : "def"}, {"member" : "org.apache.sedona.core.joinJudgement.NestedLoopJudgement#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(message: String, params: <repeated...>[AnyRef]): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.log", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#log(message:String,params:Object*):Unit", "kind" : "def"}, {"label" : "nextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#nextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "nextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#nextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#hasNextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):Boolean", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#hasNextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):Boolean", "kind" : "def"}, {"label" : "initPartition", "tail" : "(): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.initPartition", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#initPartition():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/joinJudgement\/NestedLoopJudgement.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.joinJudgement.RightIndexLookupJudgement", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(streamShapes: Iterator[T], indexIterator: Iterator[SpatialIndex]): Iterator[Pair[U, T]]", "member" : "org.apache.sedona.core.joinJudgement.RightIndexLookupJudgement.call", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#call(streamShapes:java.util.Iterator[T],indexIterator:java.util.Iterator[org.locationtech.jts.index.SpatialIndex]):java.util.Iterator[org.apache.commons.lang3.tuple.Pair[U,T]]", "kind" : "def"}, {"member" : "org.apache.sedona.core.joinJudgement.RightIndexLookupJudgement#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(message: String, params: <repeated...>[AnyRef]): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.log", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#log(message:String,params:Object*):Unit", "kind" : "def"}, {"label" : "nextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#nextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "nextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Pair[U, T]", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.nextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#nextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):org.apache.commons.lang3.tuple.Pair[U,T]", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(buildShapes: List[_ <: Geometry], streamShapes: Iterator[_ <: Geometry]): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#hasNextBase(buildShapes:java.util.List[_<:org.locationtech.jts.geom.Geometry],streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry]):Boolean", "kind" : "def"}, {"label" : "hasNextBase", "tail" : "(spatialIndex: SpatialIndex, streamShapes: Iterator[_ <: Geometry], buildLeft: Boolean): Boolean", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.hasNextBase", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#hasNextBase(spatialIndex:org.locationtech.jts.index.SpatialIndex,streamShapes:java.util.Iterator[_<:org.locationtech.jts.geom.Geometry],buildLeft:Boolean):Boolean", "kind" : "def"}, {"label" : "initPartition", "tail" : "(): Unit", "member" : "org.apache.sedona.core.joinJudgement.JudgementBase.initPartition", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#initPartition():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/joinJudgement\/RightIndexLookupJudgement.html", "kind" : "class"}], "org.apache.sedona.core.monitoring" : [{"name" : "org.apache.sedona.core.monitoring.EnvelopeAccumulator", "shortDescription" : "An accumulator that accumulates the envelope of geometries.", "members_class" : [{"label" : "value", "tail" : "(): Geometry", "member" : "org.apache.sedona.core.monitoring.EnvelopeAccumulator.value", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#value():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "merge", "tail" : "(other: AccumulatorV2[Envelope, Geometry]): Unit", "member" : "org.apache.sedona.core.monitoring.EnvelopeAccumulator.merge", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#merge(other:org.apache.spark.util.AccumulatorV2[org.locationtech.jts.geom.Envelope,org.locationtech.jts.geom.Geometry]):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(v: Envelope): Unit", "member" : "org.apache.sedona.core.monitoring.EnvelopeAccumulator.add", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#add(v:org.locationtech.jts.geom.Envelope):Unit", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "org.apache.sedona.core.monitoring.EnvelopeAccumulator.reset", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#reset():Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): AccumulatorV2[Envelope, Geometry]", "member" : "org.apache.sedona.core.monitoring.EnvelopeAccumulator.copy", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#copy():org.apache.spark.util.AccumulatorV2[org.locationtech.jts.geom.Envelope,org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "isZero", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.monitoring.EnvelopeAccumulator.isZero", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#isZero():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.core.monitoring.EnvelopeAccumulator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.util.AccumulatorV2.toString", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#toString():String", "kind" : "def"}, {"label" : "writeReplace", "tail" : "(): Any", "member" : "org.apache.spark.util.AccumulatorV2.writeReplace", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#writeReplace():Any", "kind" : "final def"}, {"label" : "withBufferSerialized", "tail" : "(): AccumulatorV2[Envelope, Geometry]", "member" : "org.apache.spark.util.AccumulatorV2.withBufferSerialized", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#withBufferSerialized():org.apache.spark.util.AccumulatorV2[IN,OUT]", "kind" : "def"}, {"label" : "copyAndReset", "tail" : "(): AccumulatorV2[Envelope, Geometry]", "member" : "org.apache.spark.util.AccumulatorV2.copyAndReset", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#copyAndReset():org.apache.spark.util.AccumulatorV2[IN,OUT]", "kind" : "def"}, {"label" : "name", "tail" : "(): Option[String]", "member" : "org.apache.spark.util.AccumulatorV2.name", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#name:Option[String]", "kind" : "final def"}, {"label" : "id", "tail" : "(): Long", "member" : "org.apache.spark.util.AccumulatorV2.id", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#id:Long", "kind" : "final def"}, {"label" : "isRegistered", "tail" : "(): Boolean", "member" : "org.apache.spark.util.AccumulatorV2.isRegistered", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#isRegistered:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/monitoring\/EnvelopeAccumulator.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.monitoring.Listener", "shortDescription" : "", "members_class" : [{"label" : "onStageCompleted", "tail" : "(stageCompleted: SparkListenerStageCompleted): Unit", "member" : "org.apache.sedona.core.monitoring.Listener.onStageCompleted", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onStageCompleted(stageCompleted:org.apache.spark.scheduler.SparkListenerStageCompleted):Unit", "kind" : "def"}, {"label" : "onTaskEnd", "tail" : "(taskEnd: SparkListenerTaskEnd): Unit", "member" : "org.apache.sedona.core.monitoring.Listener.onTaskEnd", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onTaskEnd(taskEnd:org.apache.spark.scheduler.SparkListenerTaskEnd):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.monitoring.Listener#<init>", "error" : "unsupported entity"}, {"label" : "onResourceProfileAdded", "tail" : "(event: SparkListenerResourceProfileAdded): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onResourceProfileAdded", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onResourceProfileAdded(event:org.apache.spark.scheduler.SparkListenerResourceProfileAdded):Unit", "kind" : "def"}, {"label" : "onOtherEvent", "tail" : "(event: SparkListenerEvent): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onOtherEvent", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onOtherEvent(event:org.apache.spark.scheduler.SparkListenerEvent):Unit", "kind" : "def"}, {"label" : "onSpeculativeTaskSubmitted", "tail" : "(speculativeTask: SparkListenerSpeculativeTaskSubmitted): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onSpeculativeTaskSubmitted", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onSpeculativeTaskSubmitted(speculativeTask:org.apache.spark.scheduler.SparkListenerSpeculativeTaskSubmitted):Unit", "kind" : "def"}, {"label" : "onBlockUpdated", "tail" : "(blockUpdated: SparkListenerBlockUpdated): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onBlockUpdated", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onBlockUpdated(blockUpdated:org.apache.spark.scheduler.SparkListenerBlockUpdated):Unit", "kind" : "def"}, {"label" : "onUnschedulableTaskSetRemoved", "tail" : "(unschedulableTaskSetRemoved: SparkListenerUnschedulableTaskSetRemoved): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onUnschedulableTaskSetRemoved", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onUnschedulableTaskSetRemoved(unschedulableTaskSetRemoved:org.apache.spark.scheduler.SparkListenerUnschedulableTaskSetRemoved):Unit", "kind" : "def"}, {"label" : "onUnschedulableTaskSetAdded", "tail" : "(unschedulableTaskSetAdded: SparkListenerUnschedulableTaskSetAdded): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onUnschedulableTaskSetAdded", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onUnschedulableTaskSetAdded(unschedulableTaskSetAdded:org.apache.spark.scheduler.SparkListenerUnschedulableTaskSetAdded):Unit", "kind" : "def"}, {"label" : "onNodeUnexcluded", "tail" : "(nodeUnexcluded: SparkListenerNodeUnexcluded): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onNodeUnexcluded", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onNodeUnexcluded(nodeUnexcluded:org.apache.spark.scheduler.SparkListenerNodeUnexcluded):Unit", "kind" : "def"}, {"label" : "onNodeUnblacklisted", "tail" : "(nodeUnblacklisted: SparkListenerNodeUnblacklisted): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onNodeUnblacklisted", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onNodeUnblacklisted(nodeUnblacklisted:org.apache.spark.scheduler.SparkListenerNodeUnblacklisted):Unit", "kind" : "def"}, {"label" : "onNodeExcluded", "tail" : "(nodeExcluded: SparkListenerNodeExcluded): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onNodeExcluded", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onNodeExcluded(nodeExcluded:org.apache.spark.scheduler.SparkListenerNodeExcluded):Unit", "kind" : "def"}, {"label" : "onNodeBlacklisted", "tail" : "(nodeBlacklisted: SparkListenerNodeBlacklisted): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onNodeBlacklisted", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onNodeBlacklisted(nodeBlacklisted:org.apache.spark.scheduler.SparkListenerNodeBlacklisted):Unit", "kind" : "def"}, {"label" : "onExecutorUnexcluded", "tail" : "(executorUnexcluded: SparkListenerExecutorUnexcluded): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorUnexcluded", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorUnexcluded(executorUnexcluded:org.apache.spark.scheduler.SparkListenerExecutorUnexcluded):Unit", "kind" : "def"}, {"label" : "onExecutorUnblacklisted", "tail" : "(executorUnblacklisted: SparkListenerExecutorUnblacklisted): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorUnblacklisted", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorUnblacklisted(executorUnblacklisted:org.apache.spark.scheduler.SparkListenerExecutorUnblacklisted):Unit", "kind" : "def"}, {"label" : "onNodeExcludedForStage", "tail" : "(nodeExcludedForStage: SparkListenerNodeExcludedForStage): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onNodeExcludedForStage", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onNodeExcludedForStage(nodeExcludedForStage:org.apache.spark.scheduler.SparkListenerNodeExcludedForStage):Unit", "kind" : "def"}, {"label" : "onNodeBlacklistedForStage", "tail" : "(nodeBlacklistedForStage: SparkListenerNodeBlacklistedForStage): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onNodeBlacklistedForStage", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onNodeBlacklistedForStage(nodeBlacklistedForStage:org.apache.spark.scheduler.SparkListenerNodeBlacklistedForStage):Unit", "kind" : "def"}, {"label" : "onExecutorExcludedForStage", "tail" : "(executorExcludedForStage: SparkListenerExecutorExcludedForStage): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorExcludedForStage", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorExcludedForStage(executorExcludedForStage:org.apache.spark.scheduler.SparkListenerExecutorExcludedForStage):Unit", "kind" : "def"}, {"label" : "onExecutorBlacklistedForStage", "tail" : "(executorBlacklistedForStage: SparkListenerExecutorBlacklistedForStage): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorBlacklistedForStage", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorBlacklistedForStage(executorBlacklistedForStage:org.apache.spark.scheduler.SparkListenerExecutorBlacklistedForStage):Unit", "kind" : "def"}, {"label" : "onExecutorExcluded", "tail" : "(executorExcluded: SparkListenerExecutorExcluded): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorExcluded", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorExcluded(executorExcluded:org.apache.spark.scheduler.SparkListenerExecutorExcluded):Unit", "kind" : "def"}, {"label" : "onExecutorBlacklisted", "tail" : "(executorBlacklisted: SparkListenerExecutorBlacklisted): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorBlacklisted", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorBlacklisted(executorBlacklisted:org.apache.spark.scheduler.SparkListenerExecutorBlacklisted):Unit", "kind" : "def"}, {"label" : "onExecutorRemoved", "tail" : "(executorRemoved: SparkListenerExecutorRemoved): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorRemoved", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorRemoved(executorRemoved:org.apache.spark.scheduler.SparkListenerExecutorRemoved):Unit", "kind" : "def"}, {"label" : "onExecutorAdded", "tail" : "(executorAdded: SparkListenerExecutorAdded): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorAdded", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorAdded(executorAdded:org.apache.spark.scheduler.SparkListenerExecutorAdded):Unit", "kind" : "def"}, {"label" : "onStageExecutorMetrics", "tail" : "(executorMetrics: SparkListenerStageExecutorMetrics): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onStageExecutorMetrics", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onStageExecutorMetrics(executorMetrics:org.apache.spark.scheduler.SparkListenerStageExecutorMetrics):Unit", "kind" : "def"}, {"label" : "onExecutorMetricsUpdate", "tail" : "(executorMetricsUpdate: SparkListenerExecutorMetricsUpdate): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onExecutorMetricsUpdate", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onExecutorMetricsUpdate(executorMetricsUpdate:org.apache.spark.scheduler.SparkListenerExecutorMetricsUpdate):Unit", "kind" : "def"}, {"label" : "onApplicationEnd", "tail" : "(applicationEnd: SparkListenerApplicationEnd): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onApplicationEnd", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onApplicationEnd(applicationEnd:org.apache.spark.scheduler.SparkListenerApplicationEnd):Unit", "kind" : "def"}, {"label" : "onApplicationStart", "tail" : "(applicationStart: SparkListenerApplicationStart): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onApplicationStart", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onApplicationStart(applicationStart:org.apache.spark.scheduler.SparkListenerApplicationStart):Unit", "kind" : "def"}, {"label" : "onUnpersistRDD", "tail" : "(unpersistRDD: SparkListenerUnpersistRDD): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onUnpersistRDD", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onUnpersistRDD(unpersistRDD:org.apache.spark.scheduler.SparkListenerUnpersistRDD):Unit", "kind" : "def"}, {"label" : "onBlockManagerRemoved", "tail" : "(blockManagerRemoved: SparkListenerBlockManagerRemoved): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onBlockManagerRemoved", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onBlockManagerRemoved(blockManagerRemoved:org.apache.spark.scheduler.SparkListenerBlockManagerRemoved):Unit", "kind" : "def"}, {"label" : "onBlockManagerAdded", "tail" : "(blockManagerAdded: SparkListenerBlockManagerAdded): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onBlockManagerAdded", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onBlockManagerAdded(blockManagerAdded:org.apache.spark.scheduler.SparkListenerBlockManagerAdded):Unit", "kind" : "def"}, {"label" : "onEnvironmentUpdate", "tail" : "(environmentUpdate: SparkListenerEnvironmentUpdate): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onEnvironmentUpdate", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onEnvironmentUpdate(environmentUpdate:org.apache.spark.scheduler.SparkListenerEnvironmentUpdate):Unit", "kind" : "def"}, {"label" : "onJobEnd", "tail" : "(jobEnd: SparkListenerJobEnd): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onJobEnd", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onJobEnd(jobEnd:org.apache.spark.scheduler.SparkListenerJobEnd):Unit", "kind" : "def"}, {"label" : "onJobStart", "tail" : "(jobStart: SparkListenerJobStart): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onJobStart", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onJobStart(jobStart:org.apache.spark.scheduler.SparkListenerJobStart):Unit", "kind" : "def"}, {"label" : "onTaskGettingResult", "tail" : "(taskGettingResult: SparkListenerTaskGettingResult): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onTaskGettingResult", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onTaskGettingResult(taskGettingResult:org.apache.spark.scheduler.SparkListenerTaskGettingResult):Unit", "kind" : "def"}, {"label" : "onTaskStart", "tail" : "(taskStart: SparkListenerTaskStart): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onTaskStart", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onTaskStart(taskStart:org.apache.spark.scheduler.SparkListenerTaskStart):Unit", "kind" : "def"}, {"label" : "onStageSubmitted", "tail" : "(stageSubmitted: SparkListenerStageSubmitted): Unit", "member" : "org.apache.spark.scheduler.SparkListener.onStageSubmitted", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#onStageSubmitted(stageSubmitted:org.apache.spark.scheduler.SparkListenerStageSubmitted):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/monitoring\/Listener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/monitoring\/Listener.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.monitoring.Metrics", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.core.monitoring.Metrics#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/monitoring\/Metrics.html", "kind" : "class"}], "org.apache.sedona.core.showcase" : [{"name" : "org.apache.sedona.core.showcase.EarthdataMapperRunnableExample", "shortDescription" : "The Class EarthdataMapperRunnableExample.", "members_class" : [{"member" : "org.apache.sedona.core.showcase.EarthdataMapperRunnableExample#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/showcase\/EarthdataMapperRunnableExample.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.showcase.Example", "shortDescription" : "The Class Example.", "members_class" : [{"member" : "org.apache.sedona.core.showcase.Example#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/Example.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/showcase\/Example.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample", "shortDescription" : "", "object" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html", "members_object" : [{"label" : "testSpatialRangeQueryUsingIndex", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.testSpatialRangeQueryUsingIndex", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#testSpatialRangeQueryUsingIndex():Unit", "kind" : "def"}, {"label" : "testSpatialRangeQuery", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.testSpatialRangeQuery", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#testSpatialRangeQuery():Unit", "kind" : "def"}, {"label" : "HDFDataVariableList", "tail" : ": Array[String]", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.HDFDataVariableList", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#HDFDataVariableList:Array[String]", "kind" : "val"}, {"label" : "urlPrefix", "tail" : ": String", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.urlPrefix", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#urlPrefix:String", "kind" : "val"}, {"label" : "HDFDataVariableName", "tail" : ": String", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.HDFDataVariableName", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#HDFDataVariableName:String", "kind" : "val"}, {"label" : "HDFRootGroupName", "tail" : ": String", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.HDFRootGroupName", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#HDFRootGroupName:String", "kind" : "val"}, {"label" : "HDFOffset", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.HDFOffset", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#HDFOffset:Int", "kind" : "val"}, {"label" : "HDFIncrement", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.HDFIncrement", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#HDFIncrement:Int", "kind" : "val"}, {"label" : "loopTimes", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.loopTimes", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#loopTimes:Int", "kind" : "val"}, {"label" : "numPartitions", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.numPartitions", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#numPartitions:Int", "kind" : "val"}, {"label" : "queryEnvelope", "tail" : ": Envelope", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.queryEnvelope", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#queryEnvelope:org.locationtech.jts.geom.Envelope", "kind" : "val"}, {"label" : "indexType", "tail" : ": IndexType", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.indexType", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#indexType:org.apache.sedona.core.enums.IndexType", "kind" : "val"}, {"label" : "splitter", "tail" : ": FileDataSplitter", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.splitter", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#splitter:org.apache.sedona.common.enums.FileDataSplitter", "kind" : "val"}, {"label" : "InputLocation", "tail" : ": String", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.InputLocation", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#InputLocation:String", "kind" : "val"}, {"label" : "sc", "tail" : ": SparkContext", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.sc", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#sc:org.apache.spark.SparkContext", "kind" : "val"}, {"label" : "conf", "tail" : ": SparkConf", "member" : "org.apache.sedona.core.showcase.ScalaEarthdataMapperRunnableExample.conf", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#conf:org.apache.spark.SparkConf", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaEarthdataMapperRunnableExample$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.core.showcase.ScalaExample", "shortDescription" : "The Class ScalaExample.", "object" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html", "members_object" : [{"label" : "testDistanceJoinQueryUsingIndex", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaExample.testDistanceJoinQueryUsingIndex", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#testDistanceJoinQueryUsingIndex():Unit", "kind" : "def"}, {"label" : "testDistanceJoinQuery", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaExample.testDistanceJoinQuery", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#testDistanceJoinQuery():Unit", "kind" : "def"}, {"label" : "testSpatialJoinQueryUsingIndex", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaExample.testSpatialJoinQueryUsingIndex", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#testSpatialJoinQueryUsingIndex():Unit", "kind" : "def"}, {"label" : "testSpatialJoinQuery", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaExample.testSpatialJoinQuery", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#testSpatialJoinQuery():Unit", "kind" : "def"}, {"label" : "testSpatialKnnQueryUsingIndex", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaExample.testSpatialKnnQueryUsingIndex", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#testSpatialKnnQueryUsingIndex():Unit", "kind" : "def"}, {"label" : "testSpatialKnnQuery", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaExample.testSpatialKnnQuery", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#testSpatialKnnQuery():Unit", "kind" : "def"}, {"label" : "testSpatialRangeQueryUsingIndex", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaExample.testSpatialRangeQueryUsingIndex", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#testSpatialRangeQueryUsingIndex():Unit", "kind" : "def"}, {"label" : "testSpatialRangeQuery", "tail" : "(): Unit", "member" : "org.apache.sedona.core.showcase.ScalaExample.testSpatialRangeQuery", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#testSpatialRangeQuery():Unit", "kind" : "def"}, {"label" : "ShapeFileInputLocation", "tail" : ": String", "member" : "org.apache.sedona.core.showcase.ScalaExample.ShapeFileInputLocation", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#ShapeFileInputLocation:String", "kind" : "var"}, {"label" : "eachQueryLoopTimes", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaExample.eachQueryLoopTimes", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#eachQueryLoopTimes:Int", "kind" : "val"}, {"label" : "joinQueryPartitioningType", "tail" : ": GridType", "member" : "org.apache.sedona.core.showcase.ScalaExample.joinQueryPartitioningType", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#joinQueryPartitioningType:org.apache.sedona.core.enums.GridType", "kind" : "val"}, {"label" : "rangeQueryWindow", "tail" : ": Envelope", "member" : "org.apache.sedona.core.showcase.ScalaExample.rangeQueryWindow", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#rangeQueryWindow:org.locationtech.jts.geom.Envelope", "kind" : "val"}, {"label" : "kNNQueryPoint", "tail" : ": Point", "member" : "org.apache.sedona.core.showcase.ScalaExample.kNNQueryPoint", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#kNNQueryPoint:org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "geometryFactory", "tail" : ": GeometryFactory", "member" : "org.apache.sedona.core.showcase.ScalaExample.geometryFactory", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#geometryFactory:org.locationtech.jts.geom.GeometryFactory", "kind" : "val"}, {"label" : "PolygonRDDEndOffset", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaExample.PolygonRDDEndOffset", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PolygonRDDEndOffset:Int", "kind" : "val"}, {"label" : "PolygonRDDStartOffset", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaExample.PolygonRDDStartOffset", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PolygonRDDStartOffset:Int", "kind" : "val"}, {"label" : "PolygonRDDNumPartitions", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaExample.PolygonRDDNumPartitions", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PolygonRDDNumPartitions:Int", "kind" : "val"}, {"label" : "PolygonRDDSplitter", "tail" : ": FileDataSplitter", "member" : "org.apache.sedona.core.showcase.ScalaExample.PolygonRDDSplitter", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PolygonRDDSplitter:org.apache.sedona.common.enums.FileDataSplitter", "kind" : "val"}, {"label" : "PolygonRDDInputLocation", "tail" : ": String", "member" : "org.apache.sedona.core.showcase.ScalaExample.PolygonRDDInputLocation", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PolygonRDDInputLocation:String", "kind" : "val"}, {"label" : "PointRDDOffset", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaExample.PointRDDOffset", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PointRDDOffset:Int", "kind" : "val"}, {"label" : "PointRDDNumPartitions", "tail" : ": Int", "member" : "org.apache.sedona.core.showcase.ScalaExample.PointRDDNumPartitions", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PointRDDNumPartitions:Int", "kind" : "val"}, {"label" : "PointRDDIndexType", "tail" : ": IndexType", "member" : "org.apache.sedona.core.showcase.ScalaExample.PointRDDIndexType", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PointRDDIndexType:org.apache.sedona.core.enums.IndexType", "kind" : "val"}, {"label" : "PointRDDSplitter", "tail" : ": FileDataSplitter", "member" : "org.apache.sedona.core.showcase.ScalaExample.PointRDDSplitter", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PointRDDSplitter:org.apache.sedona.common.enums.FileDataSplitter", "kind" : "val"}, {"label" : "PointRDDInputLocation", "tail" : ": String", "member" : "org.apache.sedona.core.showcase.ScalaExample.PointRDDInputLocation", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#PointRDDInputLocation:String", "kind" : "val"}, {"label" : "resourceFolder", "tail" : ": String", "member" : "org.apache.sedona.core.showcase.ScalaExample.resourceFolder", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#resourceFolder:String", "kind" : "val"}, {"label" : "sc", "tail" : ": SparkContext", "member" : "org.apache.sedona.core.showcase.ScalaExample.sc", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#sc:org.apache.spark.SparkContext", "kind" : "val"}, {"label" : "conf", "tail" : ": SparkConf", "member" : "org.apache.sedona.core.showcase.ScalaExample.conf", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#conf:org.apache.spark.SparkConf", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/ScalaExample$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.core.showcase.UserSuppliedLineStringMapper", "shortDescription" : "The Class UserSuppliedLineStringMapper.", "members_class" : [{"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[AnyRef]", "member" : "org.apache.sedona.core.showcase.UserSuppliedLineStringMapper.call", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[Object]", "kind" : "def"}, {"member" : "org.apache.sedona.core.showcase.UserSuppliedLineStringMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedLineStringMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.showcase.UserSuppliedPointMapper", "shortDescription" : "", "members_class" : [{"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[Point]", "member" : "org.apache.sedona.core.showcase.UserSuppliedPointMapper.call", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[org.locationtech.jts.geom.Point]", "kind" : "def"}, {"member" : "org.apache.sedona.core.showcase.UserSuppliedPointMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPointMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.showcase.UserSuppliedPolygonMapper", "shortDescription" : "The Class UserSuppliedPolygonMapper.", "members_class" : [{"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[AnyRef]", "member" : "org.apache.sedona.core.showcase.UserSuppliedPolygonMapper.call", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[Object]", "kind" : "def"}, {"member" : "org.apache.sedona.core.showcase.UserSuppliedPolygonMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedPolygonMapper.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.showcase.UserSuppliedRectangleMapper", "shortDescription" : "The Class UserSuppliedRectangleMapper.", "members_class" : [{"label" : "call", "tail" : "(stringIterator: Iterator[String]): Iterator[AnyRef]", "member" : "org.apache.sedona.core.showcase.UserSuppliedRectangleMapper.call", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#call(stringIterator:java.util.Iterator[String]):java.util.Iterator[Object]", "kind" : "def"}, {"member" : "org.apache.sedona.core.showcase.UserSuppliedRectangleMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/showcase\/UserSuppliedRectangleMapper.html", "kind" : "class"}], "org.apache.sedona.core.spatialRDD" : [{"name" : "org.apache.sedona.core.spatialRDD.CircleRDD", "shortDescription" : "The Class CircleRDD.", "members_class" : [{"label" : "getCenterRectangleRDDAsSpatialRDD", "tail" : "(): RectangleRDD", "member" : "org.apache.sedona.core.spatialRDD.CircleRDD.getCenterRectangleRDDAsSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getCenterRectangleRDDAsSpatialRDD():org.apache.sedona.core.spatialRDD.RectangleRDD", "kind" : "def"}, {"label" : "getCenterLineStringRDDAsSpatialRDD", "tail" : "(): LineStringRDD", "member" : "org.apache.sedona.core.spatialRDD.CircleRDD.getCenterLineStringRDDAsSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getCenterLineStringRDDAsSpatialRDD():org.apache.sedona.core.spatialRDD.LineStringRDD", "kind" : "def"}, {"label" : "getCenterPolygonAsSpatialRDD", "tail" : "(): PolygonRDD", "member" : "org.apache.sedona.core.spatialRDD.CircleRDD.getCenterPolygonAsSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getCenterPolygonAsSpatialRDD():org.apache.sedona.core.spatialRDD.PolygonRDD", "kind" : "def"}, {"label" : "getCenterPointAsSpatialRDD", "tail" : "(): PointRDD", "member" : "org.apache.sedona.core.spatialRDD.CircleRDD.getCenterPointAsSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getCenterPointAsSpatialRDD():org.apache.sedona.core.spatialRDD.PointRDD", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialRDD.CircleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.CircleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.CircleRDD#<init>", "error" : "unsupported entity"}, {"label" : "flipCoordinates", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.flipCoordinates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#flipCoordinates():Unit", "kind" : "def"}, {"label" : "getTargetEpgsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getTargetEpgsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getTargetEpgsgCode():String", "kind" : "def"}, {"label" : "getSourceEpsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSourceEpsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getSourceEpsgCode():String", "kind" : "def"}, {"label" : "getCRStransformation", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getCRStransformation", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getCRStransformation():Boolean", "kind" : "def"}, {"label" : "MinimumBoundingRectangle", "tail" : "(): RectangleRDD", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.MinimumBoundingRectangle", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#MinimumBoundingRectangle():org.apache.sedona.core.spatialRDD.RectangleRDD", "kind" : "def"}, {"label" : "saveAsGeoJSON", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsGeoJSON", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#saveAsGeoJSON(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKT", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKT", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#saveAsWKT(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKB", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKB", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#saveAsWKB(outputLocation:String):Unit", "kind" : "def"}, {"label" : "analyze", "tail" : "(datasetBoundary: Envelope, approximateTotalCount: Integer): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#analyze(datasetBoundary:org.locationtech.jts.geom.Envelope,approximateTotalCount:Integer):Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#analyze():Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(newLevel: StorageLevel): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#analyze(newLevel:org.apache.spark.storage.StorageLevel):Boolean", "kind" : "def"}, {"label" : "setRawSpatialRDD", "tail" : "(rawSpatialRDD: JavaRDD[Circle]): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#setRawSpatialRDD(rawSpatialRDD:org.apache.spark.api.java.JavaRDD[T]):Unit", "kind" : "def"}, {"label" : "getRawSpatialRDD", "tail" : "(): JavaRDD[Circle]", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getRawSpatialRDD():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "boundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.boundary", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#boundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "coalesceAndBuildRawIndex", "tail" : "(indexType: IndexType): STRtree", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.coalesceAndBuildRawIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#coalesceAndBuildRawIndex(indexType:org.apache.sedona.core.enums.IndexType):org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "buildIndex", "tail" : "(indexType: IndexType, buildIndexOnSpatialPartitionedRDD: Boolean): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.buildIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#buildIndex(indexType:org.apache.sedona.core.enums.IndexType,buildIndexOnSpatialPartitionedRDD:Boolean):Unit", "kind" : "def"}, {"label" : "countWithoutDuplicatesSPRDD", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicatesSPRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#countWithoutDuplicatesSPRDD():Long", "kind" : "def"}, {"label" : "countWithoutDuplicates", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#countWithoutDuplicates():Long", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitionTree: StandardQuadTree[_]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioning(partitionTree:org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioning(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioning(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "getPartitioner", "tail" : "(): SpatialPartitioner", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getPartitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getPartitioner():org.apache.sedona.core.spatialPartitioning.SpatialPartitioner", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "calc_partitioner", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.calc_partitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#calc_partitioner(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioningWithoutDuplicates(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioningWithoutDuplicates(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String, lenient: Boolean): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String,lenient:Boolean):Boolean", "kind" : "def"}, {"label" : "setNeighborSampleNumber", "tail" : "(neighborSampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setNeighborSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#setNeighborSampleNumber(neighborSampleNumber:Int):Unit", "kind" : "def"}, {"label" : "setSampleNumber", "tail" : "(sampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#setSampleNumber(sampleNumber:Int):Unit", "kind" : "def"}, {"label" : "getSampleNumber", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getSampleNumber():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialRDD\/CircleRDD.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialRDD.LineStringRDD", "shortDescription" : "The Class LineStringRDD.", "members_class" : [{"member" : "org.apache.sedona.core.spatialRDD.LineStringRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.LineStringRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.LineStringRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.LineStringRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.LineStringRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.LineStringRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.LineStringRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.LineStringRDD#<init>", "error" : "unsupported entity"}, {"label" : "flipCoordinates", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.flipCoordinates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#flipCoordinates():Unit", "kind" : "def"}, {"label" : "getTargetEpgsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getTargetEpgsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#getTargetEpgsgCode():String", "kind" : "def"}, {"label" : "getSourceEpsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSourceEpsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#getSourceEpsgCode():String", "kind" : "def"}, {"label" : "getCRStransformation", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getCRStransformation", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#getCRStransformation():Boolean", "kind" : "def"}, {"label" : "MinimumBoundingRectangle", "tail" : "(): RectangleRDD", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.MinimumBoundingRectangle", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#MinimumBoundingRectangle():org.apache.sedona.core.spatialRDD.RectangleRDD", "kind" : "def"}, {"label" : "saveAsGeoJSON", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsGeoJSON", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#saveAsGeoJSON(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKT", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKT", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#saveAsWKT(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKB", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKB", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#saveAsWKB(outputLocation:String):Unit", "kind" : "def"}, {"label" : "analyze", "tail" : "(datasetBoundary: Envelope, approximateTotalCount: Integer): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#analyze(datasetBoundary:org.locationtech.jts.geom.Envelope,approximateTotalCount:Integer):Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#analyze():Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(newLevel: StorageLevel): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#analyze(newLevel:org.apache.spark.storage.StorageLevel):Boolean", "kind" : "def"}, {"label" : "setRawSpatialRDD", "tail" : "(rawSpatialRDD: JavaRDD[LineString]): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#setRawSpatialRDD(rawSpatialRDD:org.apache.spark.api.java.JavaRDD[T]):Unit", "kind" : "def"}, {"label" : "getRawSpatialRDD", "tail" : "(): JavaRDD[LineString]", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#getRawSpatialRDD():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "boundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.boundary", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#boundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "coalesceAndBuildRawIndex", "tail" : "(indexType: IndexType): STRtree", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.coalesceAndBuildRawIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#coalesceAndBuildRawIndex(indexType:org.apache.sedona.core.enums.IndexType):org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "buildIndex", "tail" : "(indexType: IndexType, buildIndexOnSpatialPartitionedRDD: Boolean): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.buildIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#buildIndex(indexType:org.apache.sedona.core.enums.IndexType,buildIndexOnSpatialPartitionedRDD:Boolean):Unit", "kind" : "def"}, {"label" : "countWithoutDuplicatesSPRDD", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicatesSPRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#countWithoutDuplicatesSPRDD():Long", "kind" : "def"}, {"label" : "countWithoutDuplicates", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#countWithoutDuplicates():Long", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitionTree: StandardQuadTree[_]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioning(partitionTree:org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioning(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioning(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "getPartitioner", "tail" : "(): SpatialPartitioner", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getPartitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#getPartitioner():org.apache.sedona.core.spatialPartitioning.SpatialPartitioner", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "calc_partitioner", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.calc_partitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#calc_partitioner(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioningWithoutDuplicates(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioningWithoutDuplicates(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String, lenient: Boolean): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String,lenient:Boolean):Boolean", "kind" : "def"}, {"label" : "setNeighborSampleNumber", "tail" : "(neighborSampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setNeighborSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#setNeighborSampleNumber(neighborSampleNumber:Int):Unit", "kind" : "def"}, {"label" : "setSampleNumber", "tail" : "(sampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#setSampleNumber(sampleNumber:Int):Unit", "kind" : "def"}, {"label" : "getSampleNumber", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#getSampleNumber():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialRDD\/LineStringRDD.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialRDD.PointRDD", "shortDescription" : "The Class PointRDD.", "members_class" : [{"member" : "org.apache.sedona.core.spatialRDD.PointRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PointRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PointRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PointRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PointRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PointRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PointRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PointRDD#<init>", "error" : "unsupported entity"}, {"label" : "flipCoordinates", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.flipCoordinates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#flipCoordinates():Unit", "kind" : "def"}, {"label" : "getTargetEpgsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getTargetEpgsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#getTargetEpgsgCode():String", "kind" : "def"}, {"label" : "getSourceEpsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSourceEpsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#getSourceEpsgCode():String", "kind" : "def"}, {"label" : "getCRStransformation", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getCRStransformation", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#getCRStransformation():Boolean", "kind" : "def"}, {"label" : "MinimumBoundingRectangle", "tail" : "(): RectangleRDD", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.MinimumBoundingRectangle", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#MinimumBoundingRectangle():org.apache.sedona.core.spatialRDD.RectangleRDD", "kind" : "def"}, {"label" : "saveAsGeoJSON", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsGeoJSON", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#saveAsGeoJSON(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKT", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKT", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#saveAsWKT(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKB", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKB", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#saveAsWKB(outputLocation:String):Unit", "kind" : "def"}, {"label" : "analyze", "tail" : "(datasetBoundary: Envelope, approximateTotalCount: Integer): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#analyze(datasetBoundary:org.locationtech.jts.geom.Envelope,approximateTotalCount:Integer):Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#analyze():Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(newLevel: StorageLevel): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#analyze(newLevel:org.apache.spark.storage.StorageLevel):Boolean", "kind" : "def"}, {"label" : "setRawSpatialRDD", "tail" : "(rawSpatialRDD: JavaRDD[Point]): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#setRawSpatialRDD(rawSpatialRDD:org.apache.spark.api.java.JavaRDD[T]):Unit", "kind" : "def"}, {"label" : "getRawSpatialRDD", "tail" : "(): JavaRDD[Point]", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#getRawSpatialRDD():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "boundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.boundary", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#boundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "coalesceAndBuildRawIndex", "tail" : "(indexType: IndexType): STRtree", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.coalesceAndBuildRawIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#coalesceAndBuildRawIndex(indexType:org.apache.sedona.core.enums.IndexType):org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "buildIndex", "tail" : "(indexType: IndexType, buildIndexOnSpatialPartitionedRDD: Boolean): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.buildIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#buildIndex(indexType:org.apache.sedona.core.enums.IndexType,buildIndexOnSpatialPartitionedRDD:Boolean):Unit", "kind" : "def"}, {"label" : "countWithoutDuplicatesSPRDD", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicatesSPRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#countWithoutDuplicatesSPRDD():Long", "kind" : "def"}, {"label" : "countWithoutDuplicates", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#countWithoutDuplicates():Long", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitionTree: StandardQuadTree[_]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioning(partitionTree:org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioning(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioning(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "getPartitioner", "tail" : "(): SpatialPartitioner", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getPartitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#getPartitioner():org.apache.sedona.core.spatialPartitioning.SpatialPartitioner", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "calc_partitioner", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.calc_partitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#calc_partitioner(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioningWithoutDuplicates(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioningWithoutDuplicates(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String, lenient: Boolean): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String,lenient:Boolean):Boolean", "kind" : "def"}, {"label" : "setNeighborSampleNumber", "tail" : "(neighborSampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setNeighborSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#setNeighborSampleNumber(neighborSampleNumber:Int):Unit", "kind" : "def"}, {"label" : "setSampleNumber", "tail" : "(sampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#setSampleNumber(sampleNumber:Int):Unit", "kind" : "def"}, {"label" : "getSampleNumber", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#getSampleNumber():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialRDD\/PointRDD.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialRDD.PolygonRDD", "shortDescription" : "The Class PolygonRDD.", "members_class" : [{"label" : "PolygonUnion", "tail" : "(): Polygon", "member" : "org.apache.sedona.core.spatialRDD.PolygonRDD.PolygonUnion", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#PolygonUnion():org.locationtech.jts.geom.Polygon", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialRDD.PolygonRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PolygonRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PolygonRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PolygonRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PolygonRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PolygonRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PolygonRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.PolygonRDD#<init>", "error" : "unsupported entity"}, {"label" : "flipCoordinates", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.flipCoordinates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#flipCoordinates():Unit", "kind" : "def"}, {"label" : "getTargetEpgsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getTargetEpgsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#getTargetEpgsgCode():String", "kind" : "def"}, {"label" : "getSourceEpsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSourceEpsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#getSourceEpsgCode():String", "kind" : "def"}, {"label" : "getCRStransformation", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getCRStransformation", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#getCRStransformation():Boolean", "kind" : "def"}, {"label" : "MinimumBoundingRectangle", "tail" : "(): RectangleRDD", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.MinimumBoundingRectangle", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#MinimumBoundingRectangle():org.apache.sedona.core.spatialRDD.RectangleRDD", "kind" : "def"}, {"label" : "saveAsGeoJSON", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsGeoJSON", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#saveAsGeoJSON(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKT", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKT", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#saveAsWKT(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKB", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKB", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#saveAsWKB(outputLocation:String):Unit", "kind" : "def"}, {"label" : "analyze", "tail" : "(datasetBoundary: Envelope, approximateTotalCount: Integer): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#analyze(datasetBoundary:org.locationtech.jts.geom.Envelope,approximateTotalCount:Integer):Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#analyze():Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(newLevel: StorageLevel): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#analyze(newLevel:org.apache.spark.storage.StorageLevel):Boolean", "kind" : "def"}, {"label" : "setRawSpatialRDD", "tail" : "(rawSpatialRDD: JavaRDD[Polygon]): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#setRawSpatialRDD(rawSpatialRDD:org.apache.spark.api.java.JavaRDD[T]):Unit", "kind" : "def"}, {"label" : "getRawSpatialRDD", "tail" : "(): JavaRDD[Polygon]", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#getRawSpatialRDD():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "boundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.boundary", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#boundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "coalesceAndBuildRawIndex", "tail" : "(indexType: IndexType): STRtree", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.coalesceAndBuildRawIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#coalesceAndBuildRawIndex(indexType:org.apache.sedona.core.enums.IndexType):org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "buildIndex", "tail" : "(indexType: IndexType, buildIndexOnSpatialPartitionedRDD: Boolean): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.buildIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#buildIndex(indexType:org.apache.sedona.core.enums.IndexType,buildIndexOnSpatialPartitionedRDD:Boolean):Unit", "kind" : "def"}, {"label" : "countWithoutDuplicatesSPRDD", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicatesSPRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#countWithoutDuplicatesSPRDD():Long", "kind" : "def"}, {"label" : "countWithoutDuplicates", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#countWithoutDuplicates():Long", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitionTree: StandardQuadTree[_]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioning(partitionTree:org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioning(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioning(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "getPartitioner", "tail" : "(): SpatialPartitioner", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getPartitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#getPartitioner():org.apache.sedona.core.spatialPartitioning.SpatialPartitioner", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "calc_partitioner", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.calc_partitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#calc_partitioner(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioningWithoutDuplicates(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioningWithoutDuplicates(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String, lenient: Boolean): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String,lenient:Boolean):Boolean", "kind" : "def"}, {"label" : "setNeighborSampleNumber", "tail" : "(neighborSampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setNeighborSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#setNeighborSampleNumber(neighborSampleNumber:Int):Unit", "kind" : "def"}, {"label" : "setSampleNumber", "tail" : "(sampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#setSampleNumber(sampleNumber:Int):Unit", "kind" : "def"}, {"label" : "getSampleNumber", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#getSampleNumber():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialRDD\/PolygonRDD.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialRDD.RectangleRDD", "shortDescription" : "The Class RectangleRDD.", "members_class" : [{"member" : "org.apache.sedona.core.spatialRDD.RectangleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.RectangleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.RectangleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.RectangleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.RectangleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.RectangleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.RectangleRDD#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.spatialRDD.RectangleRDD#<init>", "error" : "unsupported entity"}, {"label" : "flipCoordinates", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.flipCoordinates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#flipCoordinates():Unit", "kind" : "def"}, {"label" : "getTargetEpgsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getTargetEpgsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#getTargetEpgsgCode():String", "kind" : "def"}, {"label" : "getSourceEpsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSourceEpsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#getSourceEpsgCode():String", "kind" : "def"}, {"label" : "getCRStransformation", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getCRStransformation", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#getCRStransformation():Boolean", "kind" : "def"}, {"label" : "MinimumBoundingRectangle", "tail" : "(): RectangleRDD", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.MinimumBoundingRectangle", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#MinimumBoundingRectangle():org.apache.sedona.core.spatialRDD.RectangleRDD", "kind" : "def"}, {"label" : "saveAsGeoJSON", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsGeoJSON", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#saveAsGeoJSON(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKT", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKT", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#saveAsWKT(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKB", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKB", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#saveAsWKB(outputLocation:String):Unit", "kind" : "def"}, {"label" : "analyze", "tail" : "(datasetBoundary: Envelope, approximateTotalCount: Integer): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#analyze(datasetBoundary:org.locationtech.jts.geom.Envelope,approximateTotalCount:Integer):Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#analyze():Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(newLevel: StorageLevel): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#analyze(newLevel:org.apache.spark.storage.StorageLevel):Boolean", "kind" : "def"}, {"label" : "setRawSpatialRDD", "tail" : "(rawSpatialRDD: JavaRDD[Polygon]): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#setRawSpatialRDD(rawSpatialRDD:org.apache.spark.api.java.JavaRDD[T]):Unit", "kind" : "def"}, {"label" : "getRawSpatialRDD", "tail" : "(): JavaRDD[Polygon]", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#getRawSpatialRDD():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "boundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.boundary", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#boundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "coalesceAndBuildRawIndex", "tail" : "(indexType: IndexType): STRtree", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.coalesceAndBuildRawIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#coalesceAndBuildRawIndex(indexType:org.apache.sedona.core.enums.IndexType):org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "buildIndex", "tail" : "(indexType: IndexType, buildIndexOnSpatialPartitionedRDD: Boolean): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.buildIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#buildIndex(indexType:org.apache.sedona.core.enums.IndexType,buildIndexOnSpatialPartitionedRDD:Boolean):Unit", "kind" : "def"}, {"label" : "countWithoutDuplicatesSPRDD", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicatesSPRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#countWithoutDuplicatesSPRDD():Long", "kind" : "def"}, {"label" : "countWithoutDuplicates", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#countWithoutDuplicates():Long", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitionTree: StandardQuadTree[_]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioning(partitionTree:org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioning(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioning(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "getPartitioner", "tail" : "(): SpatialPartitioner", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getPartitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#getPartitioner():org.apache.sedona.core.spatialPartitioning.SpatialPartitioner", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "calc_partitioner", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.calc_partitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#calc_partitioner(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioningWithoutDuplicates(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioningWithoutDuplicates(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String, lenient: Boolean): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String,lenient:Boolean):Boolean", "kind" : "def"}, {"label" : "setNeighborSampleNumber", "tail" : "(neighborSampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setNeighborSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#setNeighborSampleNumber(neighborSampleNumber:Int):Unit", "kind" : "def"}, {"label" : "setSampleNumber", "tail" : "(sampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#setSampleNumber(sampleNumber:Int):Unit", "kind" : "def"}, {"label" : "getSampleNumber", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#getSampleNumber():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialRDD\/RectangleRDD.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.spatialRDD.SpatialRDD", "shortDescription" : "The Class SpatialRDD.", "members_class" : [{"label" : "flipCoordinates", "tail" : "(): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.flipCoordinates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#flipCoordinates():Unit", "kind" : "def"}, {"label" : "getTargetEpgsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getTargetEpgsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#getTargetEpgsgCode():String", "kind" : "def"}, {"label" : "getSourceEpsgCode", "tail" : "(): String", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSourceEpsgCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#getSourceEpsgCode():String", "kind" : "def"}, {"label" : "getCRStransformation", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getCRStransformation", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#getCRStransformation():Boolean", "kind" : "def"}, {"label" : "MinimumBoundingRectangle", "tail" : "(): RectangleRDD", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.MinimumBoundingRectangle", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#MinimumBoundingRectangle():org.apache.sedona.core.spatialRDD.RectangleRDD", "kind" : "def"}, {"label" : "saveAsGeoJSON", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsGeoJSON", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#saveAsGeoJSON(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKT", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKT", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#saveAsWKT(outputLocation:String):Unit", "kind" : "def"}, {"label" : "saveAsWKB", "tail" : "(outputLocation: String): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.saveAsWKB", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#saveAsWKB(outputLocation:String):Unit", "kind" : "def"}, {"label" : "analyze", "tail" : "(datasetBoundary: Envelope, approximateTotalCount: Integer): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#analyze(datasetBoundary:org.locationtech.jts.geom.Envelope,approximateTotalCount:Integer):Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#analyze():Boolean", "kind" : "def"}, {"label" : "analyze", "tail" : "(newLevel: StorageLevel): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.analyze", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#analyze(newLevel:org.apache.spark.storage.StorageLevel):Boolean", "kind" : "def"}, {"label" : "setRawSpatialRDD", "tail" : "(rawSpatialRDD: JavaRDD[T]): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#setRawSpatialRDD(rawSpatialRDD:org.apache.spark.api.java.JavaRDD[T]):Unit", "kind" : "def"}, {"label" : "getRawSpatialRDD", "tail" : "(): JavaRDD[T]", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getRawSpatialRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#getRawSpatialRDD():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "boundary", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.boundary", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#boundary():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "coalesceAndBuildRawIndex", "tail" : "(indexType: IndexType): STRtree", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.coalesceAndBuildRawIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#coalesceAndBuildRawIndex(indexType:org.apache.sedona.core.enums.IndexType):org.locationtech.jts.index.strtree.STRtree", "kind" : "def"}, {"label" : "buildIndex", "tail" : "(indexType: IndexType, buildIndexOnSpatialPartitionedRDD: Boolean): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.buildIndex", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#buildIndex(indexType:org.apache.sedona.core.enums.IndexType,buildIndexOnSpatialPartitionedRDD:Boolean):Unit", "kind" : "def"}, {"label" : "countWithoutDuplicatesSPRDD", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicatesSPRDD", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#countWithoutDuplicatesSPRDD():Long", "kind" : "def"}, {"label" : "countWithoutDuplicates", "tail" : "(): Long", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.countWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#countWithoutDuplicates():Long", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitionTree: StandardQuadTree[_]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioning(partitionTree:org.apache.sedona.core.spatialPartitioning.quadtree.StandardQuadTree[_]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioning(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioning(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "getPartitioner", "tail" : "(): SpatialPartitioner", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getPartitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#getPartitioner():org.apache.sedona.core.spatialPartitioning.SpatialPartitioner", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "calc_partitioner", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.calc_partitioner", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#calc_partitioner(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(otherGrids: List[Envelope]): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioningWithoutDuplicates(otherGrids:java.util.List[org.locationtech.jts.geom.Envelope]):Boolean", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(partitioner: SpatialPartitioner): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioningWithoutDuplicates(partitioner:org.apache.sedona.core.spatialPartitioning.SpatialPartitioner):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType, numPartitions: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType,numPartitions:Int):Unit", "kind" : "def"}, {"label" : "spatialPartitioningWithoutDuplicates", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioningWithoutDuplicates", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioningWithoutDuplicates(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "spatialPartitioning", "tail" : "(gridType: GridType): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.spatialPartitioning", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#spatialPartitioning(gridType:org.apache.sedona.core.enums.GridType):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String):Boolean", "kind" : "def"}, {"label" : "CRSTransform", "tail" : "(sourceEpsgCRSCode: String, targetEpsgCRSCode: String, lenient: Boolean): Boolean", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.CRSTransform", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#CRSTransform(sourceEpsgCRSCode:String,targetEpsgCRSCode:String,lenient:Boolean):Boolean", "kind" : "def"}, {"label" : "setNeighborSampleNumber", "tail" : "(neighborSampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setNeighborSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#setNeighborSampleNumber(neighborSampleNumber:Int):Unit", "kind" : "def"}, {"label" : "setSampleNumber", "tail" : "(sampleNumber: Int): Unit", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.setSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#setSampleNumber(sampleNumber:Int):Unit", "kind" : "def"}, {"label" : "getSampleNumber", "tail" : "(): Int", "member" : "org.apache.sedona.core.spatialRDD.SpatialRDD.getSampleNumber", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#getSampleNumber():Int", "kind" : "def"}, {"member" : "org.apache.sedona.core.spatialRDD.SpatialRDD#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/spatialRDD\/SpatialRDD.html", "kind" : "class"}], "org.apache.sedona.viz.extension.imageGenerator" : [{"name" : "org.apache.sedona.viz.extension.imageGenerator.SedonaVizImageGenerator", "shortDescription" : "The Class SedonaVizImageGenerator.", "members_class" : [{"member" : "org.apache.sedona.viz.extension.imageGenerator.SedonaVizImageGenerator#<init>", "error" : "unsupported entity"}, {"label" : "deleteLocalFile", "tail" : "(originalOutputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.deleteLocalFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#deleteLocalFile(originalOutputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "deleteHadoopFile", "tail" : "(originalOutputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.deleteHadoopFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#deleteHadoopFile(originalOutputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveVectorImageAsLocalFile", "tail" : "(vectorImage: List[String], outputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveVectorImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveVectorImageAsLocalFile(vectorImage:java.util.List[String],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveVectorImageAsLocalFile", "tail" : "(distributedImage: JavaPairRDD[Integer, String], outputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveVectorImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveVectorImageAsLocalFile(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,String],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsS3File", "tail" : "(rasterImage: BufferedImage, regionName: String, accessKey: String, secretKey: String, bucketName: String, path: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsS3File", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveRasterImageAsS3File(rasterImage:java.awt.image.BufferedImage,regionName:String,accessKey:String,secretKey:String,bucketName:String,path:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsHadoopFile", "tail" : "(rasterImage: BufferedImage, originalOutputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsHadoopFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveRasterImageAsHadoopFile(rasterImage:java.awt.image.BufferedImage,originalOutputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsLocalFile", "tail" : "(rasterImage: BufferedImage, outputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveRasterImageAsLocalFile(rasterImage:java.awt.image.BufferedImage,outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsS3File", "tail" : "(distributedImage: JavaPairRDD[Integer, ImageSerializableWrapper], regionName: String, accessKey: String, secretKey: String, bucketName: String, path: String, imageType: ImageType, zoomLevel: Int, partitionOnX: Int, partitionOnY: Int): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsS3File", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveRasterImageAsS3File(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper],regionName:String,accessKey:String,secretKey:String,bucketName:String,path:String,imageType:org.apache.sedona.viz.utils.ImageType,zoomLevel:Int,partitionOnX:Int,partitionOnY:Int):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsHadoopFile", "tail" : "(distributedImage: JavaPairRDD[Integer, ImageSerializableWrapper], outputPath: String, imageType: ImageType, zoomLevel: Int, partitionOnX: Int, partitionOnY: Int): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsHadoopFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveRasterImageAsHadoopFile(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType,zoomLevel:Int,partitionOnX:Int,partitionOnY:Int):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsLocalFile", "tail" : "(distributedImage: JavaPairRDD[Integer, ImageSerializableWrapper], outputPath: String, imageType: ImageType): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveRasterImageAsLocalFile(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType):Boolean", "kind" : "def"}, {"label" : "SaveRasterImageAsLocalFile", "tail" : "(distributedImage: JavaPairRDD[Integer, ImageSerializableWrapper], outputPath: String, imageType: ImageType, zoomLevel: Int, partitionOnX: Int, partitionOnY: Int): Boolean", "member" : "org.apache.sedona.viz.core.ImageGenerator.SaveRasterImageAsLocalFile", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#SaveRasterImageAsLocalFile(distributedImage:org.apache.spark.api.java.JavaPairRDD[Integer,org.apache.sedona.viz.core.ImageSerializableWrapper],outputPath:String,imageType:org.apache.sedona.viz.utils.ImageType,zoomLevel:Int,partitionOnX:Int,partitionOnY:Int):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/extension\/imageGenerator\/SedonaVizImageGenerator.html", "kind" : "class"}], "org.apache.sedona.stats.outlierDetection" : [{"name" : "org.apache.sedona.stats.outlierDetection.LocalOutlierFactor", "shortDescription" : "", "object" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html", "members_object" : [{"label" : "localOutlierFactor", "tail" : "(dataframe: DataFrame, k: Int, geometry: String, handleTies: Boolean, useSphere: Boolean, resultColumnName: String): DataFrame", "member" : "org.apache.sedona.stats.outlierDetection.LocalOutlierFactor.localOutlierFactor", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#localOutlierFactor(dataframe:org.apache.spark.sql.DataFrame,k:Int,geometry:String,handleTies:Boolean,useSphere:Boolean,resultColumnName:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/stats\/outlierDetection\/LocalOutlierFactor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.sql.UDF" : [{"name" : "org.apache.sedona.sql.UDF.AbstractCatalog", "shortDescription" : "", "members_class" : [{"label" : "dropAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.dropAll", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#dropAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.registerAll", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#registerAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sqlContext: SQLContext): Unit", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.registerAll", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#registerAll(sqlContext:org.apache.spark.sql.SQLContext):Unit", "kind" : "def"}, {"label" : "function", "tail" : "(defaultArgs: Any*)(arg0: ClassTag[T]): FunctionDescription", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.function", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#function[T<:org.apache.spark.sql.catalyst.expressions.Expression](defaultArgs:Any*)(implicitevidence$1:scala.reflect.ClassTag[T]):AbstractCatalog.this.FunctionDescription", "kind" : "def"}, {"label" : "FunctionDescription", "tail" : "", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.FunctionDescription", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#FunctionDescription=(org.apache.spark.sql.catalyst.FunctionIdentifier,org.apache.spark.sql.catalyst.expressions.ExpressionInfo,org.apache.spark.sql.catalyst.analysis.FunctionRegistry.FunctionBuilder)", "kind" : "type"}, {"member" : "org.apache.sedona.sql.UDF.AbstractCatalog#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "aggregateExpressions", "tail" : ": Seq[Aggregator[Geometry, _, _]]", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.aggregateExpressions", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#aggregateExpressions:Seq[org.apache.spark.sql.expressions.Aggregator[org.locationtech.jts.geom.Geometry,_,_]]", "kind" : "abstract val"}, {"label" : "expressions", "tail" : ": Seq[FunctionDescription]", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.expressions", "link" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html#expressions:Seq[AbstractCatalog.this.FunctionDescription]", "kind" : "abstract val"}], "class" : "org\/apache\/sedona\/sql\/UDF\/AbstractCatalog.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.UDF.Catalog", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html", "members_object" : [{"label" : "aggregateExpressions", "tail" : ": Seq[Aggregator[Geometry, _, _]]", "member" : "org.apache.sedona.sql.UDF.Catalog.aggregateExpressions", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#aggregateExpressions:Seq[org.apache.spark.sql.expressions.Aggregator[org.locationtech.jts.geom.Geometry,_,_]]", "kind" : "val"}, {"label" : "expressions", "tail" : ": Seq[FunctionDescription]", "member" : "org.apache.sedona.sql.UDF.Catalog.expressions", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#expressions:Seq[org.apache.sedona.sql.UDF.Catalog.FunctionDescription]", "kind" : "val"}, {"label" : "dropAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.dropAll", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#dropAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.registerAll", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#registerAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sqlContext: SQLContext): Unit", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.registerAll", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#registerAll(sqlContext:org.apache.spark.sql.SQLContext):Unit", "kind" : "def"}, {"label" : "function", "tail" : "(defaultArgs: Any*)(arg0: ClassTag[T]): FunctionDescription", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.function", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#function[T<:org.apache.spark.sql.catalyst.expressions.Expression](defaultArgs:Any*)(implicitevidence$1:scala.reflect.ClassTag[T]):AbstractCatalog.this.FunctionDescription", "kind" : "def"}, {"label" : "FunctionDescription", "tail" : "", "member" : "org.apache.sedona.sql.UDF.AbstractCatalog.FunctionDescription", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#FunctionDescription=(org.apache.spark.sql.catalyst.FunctionIdentifier,org.apache.spark.sql.catalyst.expressions.ExpressionInfo,org.apache.spark.sql.catalyst.analysis.FunctionRegistry.FunctionBuilder)", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDF\/Catalog$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.UDF.PythonEvalType", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html", "members_object" : [{"label" : "toString", "tail" : "(pythonEvalType: Int): String", "member" : "org.apache.sedona.sql.UDF.PythonEvalType.toString", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#toString(pythonEvalType:Int):String", "kind" : "def"}, {"label" : "SEDONA_UDF_TYPE_CONSTANT", "tail" : ": Int", "member" : "org.apache.sedona.sql.UDF.PythonEvalType.SEDONA_UDF_TYPE_CONSTANT", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#SEDONA_UDF_TYPE_CONSTANT:Int", "kind" : "val"}, {"label" : "SQL_SCALAR_SEDONA_UDF", "tail" : ": Int", "member" : "org.apache.sedona.sql.UDF.PythonEvalType.SQL_SCALAR_SEDONA_UDF", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#SQL_SCALAR_SEDONA_UDF:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDF\/PythonEvalType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.UDF.RasterUdafCatalog", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html", "members_object" : [{"label" : "rasterAggregateExpression", "tail" : ": Aggregator[(GridCoverage2D, Int), ArrayBuffer[BandData], GridCoverage2D]", "member" : "org.apache.sedona.sql.UDF.RasterUdafCatalog.rasterAggregateExpression", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#rasterAggregateExpression:org.apache.spark.sql.expressions.Aggregator[(org.geotools.coverage.grid.GridCoverage2D,Int),scala.collection.mutable.ArrayBuffer[org.apache.spark.sql.sedona_sql.expressions.raster.BandData],org.geotools.coverage.grid.GridCoverage2D]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDF\/RasterUdafCatalog$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.sql.datasources.osmpbf" : [{"name" : "org.apache.sedona.sql.datasources.osmpbf.DenseNodeIterator", "shortDescription" : "", "members_class" : [{"label" : "next", "tail" : "(): OsmNode", "member" : "org.apache.sedona.sql.datasources.osmpbf.DenseNodeIterator.next", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#next():org.apache.sedona.sql.datasources.osmpbf.model.OsmNode", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "org.apache.sedona.sql.datasources.osmpbf.DenseNodeIterator.hasNext", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#hasNext():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.DenseNodeIterator#<init>", "error" : "unsupported entity"}, {"label" : "forEachRemaining", "tail" : "(arg0: Consumer[_ >: OsmNode]): Unit", "member" : "java.util.Iterator.forEachRemaining", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#forEachRemaining(x$1:java.util.function.Consumer[_>:E]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "java.util.Iterator.remove", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#remove():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/DenseNodeIterator.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.HeaderFinder", "shortDescription" : "", "members_class" : [{"label" : "equals", "tail" : "(a: LinkedList[Byte], b: Array[Byte]): Boolean", "member" : "org.apache.sedona.sql.datasources.osmpbf.HeaderFinder.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#equals(a:java.util.LinkedList[Byte],b:Array[Byte]):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(): Long", "member" : "org.apache.sedona.sql.datasources.osmpbf.HeaderFinder.find", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#find():Long", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.HeaderFinder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/HeaderFinder.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.ParseUtils", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.sql.datasources.osmpbf.ParseUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/ParseUtils.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.StartEndStream", "shortDescription" : "", "members_class" : [{"member" : "org.apache.sedona.sql.datasources.osmpbf.StartEndStream#<init>", "error" : "unsupported entity"}, {"label" : "skip", "tail" : "(n: Long): Long", "member" : "org.apache.sedona.sql.datasources.osmpbf.StartEndStream.skip", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#skip(n:Long):Long", "kind" : "def"}, {"label" : "read", "tail" : "(b: Array[Byte], off: Int, len: Int): Int", "member" : "org.apache.sedona.sql.datasources.osmpbf.StartEndStream.read", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#read(b:Array[Byte],off:Int,len:Int):Int", "kind" : "def"}, {"label" : "read", "tail" : "(): Int", "member" : "org.apache.sedona.sql.datasources.osmpbf.StartEndStream.read", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#read():Int", "kind" : "def"}, {"label" : "continueReading", "tail" : "(): Boolean", "member" : "org.apache.sedona.sql.datasources.osmpbf.StartEndStream.continueReading", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#continueReading():Boolean", "kind" : "def"}, {"label" : "markSupported", "tail" : "(): Boolean", "member" : "java.io.FilterInputStream.markSupported", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#markSupported():Boolean", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "java.io.FilterInputStream.reset", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#reset():Unit", "kind" : "def"}, {"label" : "mark", "tail" : "(arg0: Int): Unit", "member" : "java.io.FilterInputStream.mark", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#mark(x$1:Int):Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.FilterInputStream.close", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#close():Unit", "kind" : "def"}, {"label" : "available", "tail" : "(): Int", "member" : "java.io.FilterInputStream.available", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#available():Int", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte]): Int", "member" : "java.io.FilterInputStream.read", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#read(x$1:Array[Byte]):Int", "kind" : "def"}, {"label" : "transferTo", "tail" : "(arg0: OutputStream): Long", "member" : "java.io.InputStream.transferTo", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#transferTo(x$1:java.io.OutputStream):Long", "kind" : "def"}, {"label" : "readNBytes", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Int", "member" : "java.io.InputStream.readNBytes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#readNBytes(x$1:Array[Byte],x$2:Int,x$3:Int):Int", "kind" : "def"}, {"label" : "readNBytes", "tail" : "(arg0: Int): Array[Byte]", "member" : "java.io.InputStream.readNBytes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#readNBytes(x$1:Int):Array[Byte]", "kind" : "def"}, {"label" : "readAllBytes", "tail" : "(): Array[Byte]", "member" : "java.io.InputStream.readAllBytes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#readAllBytes():Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/StartEndStream.html", "kind" : "class"}, {"name" : "org.apache.sedona.sql.datasources.osmpbf.TruncatedStream", "shortDescription" : "", "members_class" : [{"label" : "continueReading", "tail" : "(): Boolean", "member" : "org.apache.sedona.sql.datasources.osmpbf.TruncatedStream.continueReading", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#continueReading():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.sql.datasources.osmpbf.TruncatedStream#<init>", "error" : "unsupported entity"}, {"label" : "markSupported", "tail" : "(): Boolean", "member" : "java.io.FilterInputStream.markSupported", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#markSupported():Boolean", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "java.io.FilterInputStream.reset", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#reset():Unit", "kind" : "def"}, {"label" : "mark", "tail" : "(arg0: Int): Unit", "member" : "java.io.FilterInputStream.mark", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#mark(x$1:Int):Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.FilterInputStream.close", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#close():Unit", "kind" : "def"}, {"label" : "available", "tail" : "(): Int", "member" : "java.io.FilterInputStream.available", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#available():Int", "kind" : "def"}, {"label" : "skip", "tail" : "(arg0: Long): Long", "member" : "java.io.FilterInputStream.skip", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#skip(x$1:Long):Long", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Int", "member" : "java.io.FilterInputStream.read", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#read(x$1:Array[Byte],x$2:Int,x$3:Int):Int", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte]): Int", "member" : "java.io.FilterInputStream.read", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#read(x$1:Array[Byte]):Int", "kind" : "def"}, {"label" : "read", "tail" : "(): Int", "member" : "java.io.FilterInputStream.read", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#read():Int", "kind" : "def"}, {"label" : "transferTo", "tail" : "(arg0: OutputStream): Long", "member" : "java.io.InputStream.transferTo", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#transferTo(x$1:java.io.OutputStream):Long", "kind" : "def"}, {"label" : "readNBytes", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Int", "member" : "java.io.InputStream.readNBytes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#readNBytes(x$1:Array[Byte],x$2:Int,x$3:Int):Int", "kind" : "def"}, {"label" : "readNBytes", "tail" : "(arg0: Int): Array[Byte]", "member" : "java.io.InputStream.readNBytes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#readNBytes(x$1:Int):Array[Byte]", "kind" : "def"}, {"label" : "readAllBytes", "tail" : "(): Array[Byte]", "member" : "java.io.InputStream.readAllBytes", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#readAllBytes():Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/datasources\/osmpbf\/TruncatedStream.html", "kind" : "class"}], "org.apache.sedona.viz.sql.operator" : [{"name" : "org.apache.sedona.viz.sql.operator.AggregateWithinPartitions", "shortDescription" : "", "object" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html", "members_object" : [{"label" : "apply", "tail" : "(dataFrame: DataFrame, keyCol: String, valueCol: String, aggFunc: String): DataFrame", "member" : "org.apache.sedona.viz.sql.operator.AggregateWithinPartitions.apply", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#apply(dataFrame:org.apache.spark.sql.DataFrame,keyCol:String,valueCol:String,aggFunc:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/AggregateWithinPartitions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.viz.sql.operator.VizPartitioner", "shortDescription" : "", "object" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html", "members_object" : [{"label" : "apply", "tail" : "(dataFrame: DataFrame, zoomLevel: Int, spatialColName: String, boundary: Envelope): DataFrame", "member" : "org.apache.sedona.viz.sql.operator.VizPartitioner.apply", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#apply(dataFrame:org.apache.spark.sql.DataFrame,zoomLevel:Int,spatialColName:String,boundary:org.locationtech.jts.geom.Envelope):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/sql\/operator\/VizPartitioner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql.sedona_sql.io.stac" : [{"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch", "shortDescription" : "The StacBatch class represents a batch of partitions for reading data in the SpatioTemporalAsset Catalog (STAC) data source.", "members_case class" : [{"label" : "createReaderFactory", "tail" : "(): PartitionReaderFactory", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.createReaderFactory", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#createReaderFactory():org.apache.spark.sql.connector.read.PartitionReaderFactory", "kind" : "def"}, {"label" : "filterCollection", "tail" : "(collectionJson: String, spatialFilter: Option[GeoParquetSpatialFilter], temporalFilter: Option[TemporalFilter]): Boolean", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.filterCollection", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#filterCollection(collectionJson:String,spatialFilter:Option[org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter],temporalFilter:Option[org.apache.spark.sql.execution.datasource.stac.TemporalFilter]):Boolean", "kind" : "def"}, {"label" : "getItemLink", "tail" : "(itemUrl: String, defaultItemsLimitPerRequest: Int, spatialFilter: Option[GeoParquetSpatialFilter], temporalFilter: Option[TemporalFilter]): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.getItemLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#getItemLink(itemUrl:String,defaultItemsLimitPerRequest:Int,spatialFilter:Option[org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter],temporalFilter:Option[org.apache.spark.sql.execution.datasource.stac.TemporalFilter]):String", "kind" : "def"}, {"label" : "collectItemLinks", "tail" : "(collectionBasePath: String, collectionJson: String, itemLinks: ArrayBuffer[String], needCountNextItems: Boolean): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.collectItemLinks", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#collectItemLinks(collectionBasePath:String,collectionJson:String,itemLinks:scala.collection.mutable.ArrayBuffer[String],needCountNextItems:Boolean):Unit", "kind" : "def"}, {"label" : "planInputPartitions", "tail" : "(): Array[InputPartition]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.planInputPartitions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#planInputPartitions():Array[org.apache.spark.sql.connector.read.InputPartition]", "kind" : "def"}, {"label" : "setItemMaxLeft", "tail" : "(value: Int): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.setItemMaxLeft", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#setItemMaxLeft(value:Int):Unit", "kind" : "def"}, {"label" : "mapper", "tail" : ": ObjectMapper", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.mapper", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#mapper:com.fasterxml.jackson.databind.ObjectMapper", "kind" : "val"}, {"member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch#<init>", "error" : "unsupported entity"}, {"label" : "limitFilter", "tail" : ": Option[Int]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.limitFilter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#limitFilter:Option[Int]", "kind" : "val"}, {"label" : "temporalFilter", "tail" : ": Option[TemporalFilter]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.temporalFilter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#temporalFilter:Option[org.apache.spark.sql.execution.datasource.stac.TemporalFilter]", "kind" : "val"}, {"label" : "spatialFilter", "tail" : ": Option[GeoParquetSpatialFilter]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.spatialFilter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#spatialFilter:Option[org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter]", "kind" : "val"}, {"label" : "opts", "tail" : ": Map[String, String]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.opts", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#opts:Map[String,String]", "kind" : "val"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#schema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "stacCollectionJson", "tail" : ": String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.stacCollectionJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#stacCollectionJson:String", "kind" : "val"}, {"label" : "stacCollectionUrl", "tail" : ": String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.stacCollectionUrl", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#stacCollectionUrl:String", "kind" : "val"}, {"label" : "broadcastConf", "tail" : ": Broadcast[SerializableConfiguration]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacBatch.broadcastConf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#broadcastConf:org.apache.spark.broadcast.Broadcast[org.apache.spark.util.SerializableConfiguration]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacBatch.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacDataSource", "shortDescription" : "The StacDataSource class is responsible for enabling the reading of SpatioTemporal AssetCatalogs (STAC) as tables in Apache Spark.", "members_class" : [{"label" : "getTable", "tail" : "(schema: StructType, partitioning: Array[Transform], properties: Map[String, String]): Table", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacDataSource.getTable", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#getTable(schema:org.apache.spark.sql.types.StructType,partitioning:Array[org.apache.spark.sql.connector.expressions.Transform],properties:java.util.Map[String,String]):org.apache.spark.sql.connector.catalog.Table", "kind" : "def"}, {"label" : "inferSchema", "tail" : "(opts: CaseInsensitiveStringMap): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacDataSource.inferSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#inferSchema(opts:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "shortName", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacDataSource.shortName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#shortName():String", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.io.stac.StacDataSource#<init>", "error" : "unsupported entity"}, {"label" : "supportsExternalMetadata", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.connector.catalog.TableProvider.supportsExternalMetadata", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#supportsExternalMetadata():Boolean", "kind" : "def"}, {"label" : "inferPartitioning", "tail" : "(arg0: CaseInsensitiveStringMap): Array[Transform]", "member" : "org.apache.spark.sql.connector.catalog.TableProvider.inferPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#inferPartitioning(x$1:org.apache.spark.sql.util.CaseInsensitiveStringMap):Array[org.apache.spark.sql.connector.expressions.Transform]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacDataSource.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacExtension", "shortDescription" : "Defines a STAC extension with its schema and property mappings", "object" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html", "members_object" : [{"label" : "getStacExtensionDefinitions", "tail" : "(): Array[StacExtension]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacExtension.getStacExtensionDefinitions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#getStacExtensionDefinitions():Array[org.apache.spark.sql.sedona_sql.io.stac.StacExtension]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "org.apache.spark.sql.sedona_sql.io.stac.StacExtension#<init>", "error" : "unsupported entity"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacExtension.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#schema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacExtension.name", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacExtension.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartition", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartition#<init>", "error" : "unsupported entity"}, {"label" : "opts", "tail" : ": Map[String, String]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartition.opts", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#opts:java.util.Map[String,String]", "kind" : "val"}, {"label" : "items", "tail" : ": Array[String]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartition.items", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#items:Array[String]", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartition.index", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#index:Int", "kind" : "val"}, {"label" : "preferredLocations", "tail" : "(): Array[String]", "member" : "org.apache.spark.sql.connector.read.InputPartition.preferredLocations", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#preferredLocations():Array[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartition.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartitionReader", "shortDescription" : "", "members_class" : [{"label" : "createSparkPath", "tail" : "(pathString: String): AnyRef", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartitionReader.createSparkPath", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#createSparkPath(pathString:String):Object", "kind" : "def"}, {"label" : "createPartitionedFile", "tail" : "(currentFile: File): PartitionedFile", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartitionReader.createPartitionedFile", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#createPartitionedFile(currentFile:java.io.File):org.apache.spark.sql.execution.datasources.PartitionedFile", "kind" : "def"}, {"label" : "fetchContentWithRetry", "tail" : "(url: URL, maxRetries: Int): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartitionReader.fetchContentWithRetry", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#fetchContentWithRetry(url:java.net.URL,maxRetries:Int):String", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartitionReader.close", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#close():Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): InternalRow", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartitionReader.get", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#get():org.apache.spark.sql.catalyst.InternalRow", "kind" : "def"}, {"label" : "next", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartitionReader.next", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#next():Boolean", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.io.stac.StacPartitionReader#<init>", "error" : "unsupported entity"}, {"label" : "currentMetricsValues", "tail" : "(): Array[CustomTaskMetric]", "member" : "org.apache.spark.sql.connector.read.PartitionReader.currentMetricsValues", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#currentMetricsValues():Array[org.apache.spark.sql.connector.metric.CustomTaskMetric]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacPartitionReader.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan", "shortDescription" : "", "members_class" : [{"label" : "description", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.description", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#description():String", "kind" : "def"}, {"label" : "getMetaData", "tail" : "(): Map[String, String]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.getMetaData", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#getMetaData():Map[String,String]", "kind" : "def"}, {"label" : "setLimit", "tail" : "(n: Int): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.setLimit", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#setLimit(n:Int):Unit", "kind" : "def"}, {"label" : "setTemporalPredicates", "tail" : "(combineTemporalFilter: TemporalFilter): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.setTemporalPredicates", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#setTemporalPredicates(combineTemporalFilter:org.apache.spark.sql.execution.datasource.stac.TemporalFilter):Unit", "kind" : "def"}, {"label" : "setSpatialPredicates", "tail" : "(combinedSpatialFilter: GeoParquetSpatialFilter): Unit", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.setSpatialPredicates", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#setSpatialPredicates(combinedSpatialFilter:org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter):Unit", "kind" : "def"}, {"label" : "toBatch", "tail" : "(): Batch", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.toBatch", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#toBatch():org.apache.spark.sql.connector.read.Batch", "kind" : "def"}, {"label" : "readSchema", "tail" : "(): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.readSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#readSchema():org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "limit", "tail" : ": Option[Int]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.limit", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#limit:Option[Int]", "kind" : "var"}, {"label" : "temporalFilter", "tail" : ": Option[TemporalFilter]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.temporalFilter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#temporalFilter:Option[org.apache.spark.sql.execution.datasource.stac.TemporalFilter]", "kind" : "var"}, {"label" : "spatialFilter", "tail" : ": Option[GeoParquetSpatialFilter]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan.spatialFilter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#spatialFilter:Option[org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter]", "kind" : "var"}, {"member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScan#<init>", "error" : "unsupported entity"}, {"label" : "reportDriverMetrics", "tail" : "(): Array[CustomTaskMetric]", "member" : "org.apache.spark.sql.connector.read.Scan.reportDriverMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#reportDriverMetrics():Array[org.apache.spark.sql.connector.metric.CustomTaskMetric]", "kind" : "def"}, {"label" : "supportedCustomMetrics", "tail" : "(): Array[CustomMetric]", "member" : "org.apache.spark.sql.connector.read.Scan.supportedCustomMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#supportedCustomMetrics():Array[org.apache.spark.sql.connector.metric.CustomMetric]", "kind" : "def"}, {"label" : "toContinuousStream", "tail" : "(arg0: String): ContinuousStream", "member" : "org.apache.spark.sql.connector.read.Scan.toContinuousStream", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#toContinuousStream(x$1:String):org.apache.spark.sql.connector.read.streaming.ContinuousStream", "kind" : "def"}, {"label" : "toMicroBatchStream", "tail" : "(arg0: String): MicroBatchStream", "member" : "org.apache.spark.sql.connector.read.Scan.toMicroBatchStream", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#toMicroBatchStream(x$1:String):org.apache.spark.sql.connector.read.streaming.MicroBatchStream", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScan.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacScanBuilder", "shortDescription" : "The StacScanBuilder class represents the builder for creating a Scan instance in theSpatioTemporal Asset Catalog (STAC) data source.", "members_class" : [{"label" : "build", "tail" : "(): Scan", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScanBuilder.build", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#build():org.apache.spark.sql.connector.read.Scan", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.io.stac.StacScanBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacScanBuilder.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable", "shortDescription" : "The StacTable class represents a table in the SpatioTemporal Asset Catalog (STAC) datasource.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html", "members_class" : [{"label" : "newScanBuilder", "tail" : "(options: CaseInsensitiveStringMap): ScanBuilder", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.newScanBuilder", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#newScanBuilder(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.connector.read.ScanBuilder", "kind" : "def"}, {"label" : "capabilities", "tail" : "(): Set[TableCapability]", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.capabilities", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#capabilities():java.util.Set[org.apache.spark.sql.connector.catalog.TableCapability]", "kind" : "def"}, {"label" : "schema", "tail" : "(): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#schema():org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.name", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#name():String", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : "(): Map[String, String]", "member" : "org.apache.spark.sql.connector.catalog.Table.properties", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#properties():java.util.Map[String,String]", "kind" : "def"}, {"label" : "partitioning", "tail" : "(): Array[Transform]", "member" : "org.apache.spark.sql.connector.catalog.Table.partitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#partitioning():Array[org.apache.spark.sql.connector.expressions.Transform]", "kind" : "def"}, {"label" : "columns", "tail" : "(): Array[connector.catalog.Column]", "member" : "org.apache.spark.sql.connector.catalog.Table.columns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#columns():Array[org.apache.spark.sql.connector.catalog.Column]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "addAssetsStruct", "tail" : "(schema: StructType, names: Array[String]): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.addAssetsStruct", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#addAssetsStruct(schema:org.apache.spark.sql.types.StructType,names:Array[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "addAssetStruct", "tail" : "(schema: StructType, name: String): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.addAssetStruct", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#addAssetStruct(schema:org.apache.spark.sql.types.StructType,name:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "SCHEMA_GEOPARQUET", "tail" : ": StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.SCHEMA_GEOPARQUET", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#SCHEMA_GEOPARQUET:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "SCHEMA_V1_0_0", "tail" : ": StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.SCHEMA_V1_0_0", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#SCHEMA_V1_0_0:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "SCHEMA_V1_1_0", "tail" : ": StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacTable.SCHEMA_V1_1_0", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#SCHEMA_V1_1_0:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacTable.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html", "members_object" : [{"label" : "addFiltersToUrl", "tail" : "(baseUrl: String, spatialFilter: Option[GeoParquetSpatialFilter], temporalFilter: Option[TemporalFilter]): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.addFiltersToUrl", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#addFiltersToUrl(baseUrl:String,spatialFilter:Option[org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter],temporalFilter:Option[org.apache.spark.sql.execution.datasource.stac.TemporalFilter]):String", "kind" : "def"}, {"label" : "getFilterTemporal", "tail" : "(filter: TemporalFilter): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.getFilterTemporal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#getFilterTemporal(filter:org.apache.spark.sql.execution.datasource.stac.TemporalFilter):String", "kind" : "def"}, {"label" : "getFilterBBox", "tail" : "(filter: GeoParquetSpatialFilter): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.getFilterBBox", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#getFilterBBox(filter:org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter):String", "kind" : "def"}, {"label" : "getNumPartitions", "tail" : "(itemCount: Int, numPartitions: Int, maxPartitionItemFiles: Int, defaultParallelism: Int): Int", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.getNumPartitions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#getNumPartitions(itemCount:Int,numPartitions:Int,maxPartitionItemFiles:Int,defaultParallelism:Int):Int", "kind" : "def"}, {"label" : "updatePropertiesPromotedSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.updatePropertiesPromotedSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#updatePropertiesPromotedSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "promotePropertiesToTop", "tail" : "(row: InternalRow, schema: StructType): InternalRow", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.promotePropertiesToTop", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#promotePropertiesToTop(row:org.apache.spark.sql.catalyst.InternalRow,schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.catalyst.InternalRow", "kind" : "def"}, {"label" : "addExtensionFieldsToSchema", "tail" : "(schema: StructType, extensions: Array[StacExtension]): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.addExtensionFieldsToSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#addExtensionFieldsToSchema(schema:org.apache.spark.sql.types.StructType,extensions:Array[org.apache.spark.sql.sedona_sql.io.stac.StacExtension]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "inferStacSchema", "tail" : "(opts: Map[String, String]): StructType", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.inferStacSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#inferStacSchema(opts:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getStacCollectionBasePath", "tail" : "(collectionUrl: String): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.getStacCollectionBasePath", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#getStacCollectionBasePath(collectionUrl:String):String", "kind" : "def"}, {"label" : "getStacCollectionBasePath", "tail" : "(opts: Map[String, String]): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.getStacCollectionBasePath", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#getStacCollectionBasePath(opts:Map[String,String]):String", "kind" : "def"}, {"label" : "loadStacCollectionToJson", "tail" : "(url: String, maxRetries: Int): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.loadStacCollectionToJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#loadStacCollectionToJson(url:String,maxRetries:Int):String", "kind" : "def"}, {"label" : "getFullCollectionUrl", "tail" : "(opts: Map[String, String]): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.getFullCollectionUrl", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#getFullCollectionUrl(opts:Map[String,String]):String", "kind" : "def"}, {"label" : "loadStacCollectionToJson", "tail" : "(opts: Map[String, String]): String", "member" : "org.apache.spark.sql.sedona_sql.io.stac.StacUtils.loadStacCollectionToJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#loadStacCollectionToJson(opts:Map[String,String]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/io\/stac\/StacUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.stats.hotspotDetection" : [{"name" : "org.apache.sedona.stats.hotspotDetection.GetisOrd", "shortDescription" : "", "object" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html", "members_object" : [{"label" : "gLocal", "tail" : "(dataframe: DataFrame, x: String, weights: String, permutations: Int, star: Boolean, islandWeight: Double): DataFrame", "member" : "org.apache.sedona.stats.hotspotDetection.GetisOrd.gLocal", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#gLocal(dataframe:org.apache.spark.sql.DataFrame,x:String,weights:String,permutations:Int,star:Boolean,islandWeight:Double):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "arraySum", "tail" : "(arr: Column): Column", "member" : "org.apache.sedona.stats.hotspotDetection.GetisOrd.arraySum", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#arraySum(arr:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/stats\/hotspotDetection\/GetisOrd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql.sedona_viz" : [], "org.apache.sedona.viz.showcase" : [{"name" : "org.apache.sedona.viz.showcase.Example", "shortDescription" : "The Class Example.", "members_class" : [{"member" : "org.apache.sedona.viz.showcase.Example#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/showcase\/Example.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/viz\/showcase\/Example.html", "kind" : "class"}, {"name" : "org.apache.sedona.viz.showcase.ScalaExample", "shortDescription" : "The Class ScalaExample.", "object" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html", "members_object" : [{"label" : "earthdataVisualization", "tail" : "(outputPath: String): Boolean", "member" : "org.apache.sedona.viz.showcase.ScalaExample.earthdataVisualization", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#earthdataVisualization(outputPath:String):Boolean", "kind" : "def"}, {"label" : "parallelFilterRenderStitch", "tail" : "(outputPath: String): Boolean", "member" : "org.apache.sedona.viz.showcase.ScalaExample.parallelFilterRenderStitch", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#parallelFilterRenderStitch(outputPath:String):Boolean", "kind" : "def"}, {"label" : "parallelFilterRenderNoStitch", "tail" : "(outputPath: String): Boolean", "member" : "org.apache.sedona.viz.showcase.ScalaExample.parallelFilterRenderNoStitch", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#parallelFilterRenderNoStitch(outputPath:String):Boolean", "kind" : "def"}, {"label" : "buildChoroplethMap", "tail" : "(outputPath: String): Boolean", "member" : "org.apache.sedona.viz.showcase.ScalaExample.buildChoroplethMap", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#buildChoroplethMap(outputPath:String):Boolean", "kind" : "def"}, {"label" : "buildHeatMap", "tail" : "(outputPath: String): Boolean", "member" : "org.apache.sedona.viz.showcase.ScalaExample.buildHeatMap", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#buildHeatMap(outputPath:String):Boolean", "kind" : "def"}, {"label" : "buildScatterPlot", "tail" : "(outputPath: String): Boolean", "member" : "org.apache.sedona.viz.showcase.ScalaExample.buildScatterPlot", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#buildScatterPlot(outputPath:String):Boolean", "kind" : "def"}, {"label" : "ConfFile", "tail" : ": FileInputStream", "member" : "org.apache.sedona.viz.showcase.ScalaExample.ConfFile", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#ConfFile:java.io.FileInputStream", "kind" : "var"}, {"label" : "urlPrefix", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.urlPrefix", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#urlPrefix:String", "kind" : "val"}, {"label" : "HDFswitchXY", "tail" : ": Boolean", "member" : "org.apache.sedona.viz.showcase.ScalaExample.HDFswitchXY", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#HDFswitchXY:Boolean", "kind" : "val"}, {"label" : "HDFDataVariableList", "tail" : ": Array[String]", "member" : "org.apache.sedona.viz.showcase.ScalaExample.HDFDataVariableList", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#HDFDataVariableList:Array[String]", "kind" : "val"}, {"label" : "HDFDataVariableName", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.HDFDataVariableName", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#HDFDataVariableName:String", "kind" : "val"}, {"label" : "HDFRootGroupName", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.HDFRootGroupName", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#HDFRootGroupName:String", "kind" : "val"}, {"label" : "HDFOffset", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.HDFOffset", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#HDFOffset:Int", "kind" : "val"}, {"label" : "HDFIncrement", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.HDFIncrement", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#HDFIncrement:Int", "kind" : "val"}, {"label" : "earthdataNumPartitions", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.earthdataNumPartitions", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#earthdataNumPartitions:Int", "kind" : "val"}, {"label" : "earthdataInputLocation", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.earthdataInputLocation", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#earthdataInputLocation:String", "kind" : "val"}, {"label" : "USMainLandBoundary", "tail" : ": Envelope", "member" : "org.apache.sedona.viz.showcase.ScalaExample.USMainLandBoundary", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#USMainLandBoundary:org.locationtech.jts.geom.Envelope", "kind" : "val"}, {"label" : "LineStringNumPartitions", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.LineStringNumPartitions", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#LineStringNumPartitions:Int", "kind" : "val"}, {"label" : "LineStringSplitter", "tail" : ": FileDataSplitter", "member" : "org.apache.sedona.viz.showcase.ScalaExample.LineStringSplitter", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#LineStringSplitter:org.apache.sedona.common.enums.FileDataSplitter", "kind" : "val"}, {"label" : "LineStringOffset", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.LineStringOffset", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#LineStringOffset:Int", "kind" : "val"}, {"label" : "LineStringInputLocation", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.LineStringInputLocation", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#LineStringInputLocation:String", "kind" : "val"}, {"label" : "PolygonNumPartitions", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.PolygonNumPartitions", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#PolygonNumPartitions:Int", "kind" : "val"}, {"label" : "PolygonSplitter", "tail" : ": FileDataSplitter", "member" : "org.apache.sedona.viz.showcase.ScalaExample.PolygonSplitter", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#PolygonSplitter:org.apache.sedona.common.enums.FileDataSplitter", "kind" : "val"}, {"label" : "PolygonOffset", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.PolygonOffset", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#PolygonOffset:Int", "kind" : "val"}, {"label" : "PolygonInputLocation", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.PolygonInputLocation", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#PolygonInputLocation:String", "kind" : "val"}, {"label" : "RectangleNumPartitions", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.RectangleNumPartitions", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#RectangleNumPartitions:Int", "kind" : "val"}, {"label" : "RectangleSplitter", "tail" : ": FileDataSplitter", "member" : "org.apache.sedona.viz.showcase.ScalaExample.RectangleSplitter", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#RectangleSplitter:org.apache.sedona.common.enums.FileDataSplitter", "kind" : "val"}, {"label" : "RectangleOffset", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.RectangleOffset", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#RectangleOffset:Int", "kind" : "val"}, {"label" : "RectangleInputLocation", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.RectangleInputLocation", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#RectangleInputLocation:String", "kind" : "val"}, {"label" : "PointNumPartitions", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.PointNumPartitions", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#PointNumPartitions:Int", "kind" : "val"}, {"label" : "PointSplitter", "tail" : ": FileDataSplitter", "member" : "org.apache.sedona.viz.showcase.ScalaExample.PointSplitter", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#PointSplitter:org.apache.sedona.common.enums.FileDataSplitter", "kind" : "val"}, {"label" : "PointOffset", "tail" : ": Int", "member" : "org.apache.sedona.viz.showcase.ScalaExample.PointOffset", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#PointOffset:Int", "kind" : "val"}, {"label" : "PointInputLocation", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.PointInputLocation", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#PointInputLocation:String", "kind" : "val"}, {"label" : "earthdataScatterPlotOutputPath", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.earthdataScatterPlotOutputPath", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#earthdataScatterPlotOutputPath:String", "kind" : "val"}, {"label" : "parallelFilterRenderStitchOutputPath", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.parallelFilterRenderStitchOutputPath", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#parallelFilterRenderStitchOutputPath:String", "kind" : "val"}, {"label" : "choroplethMapOutputPath", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.choroplethMapOutputPath", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#choroplethMapOutputPath:String", "kind" : "val"}, {"label" : "heatMapOutputPath", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.heatMapOutputPath", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#heatMapOutputPath:String", "kind" : "val"}, {"label" : "scatterPlotOutputPath", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.scatterPlotOutputPath", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#scatterPlotOutputPath:String", "kind" : "val"}, {"label" : "demoOutputPath", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.demoOutputPath", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#demoOutputPath:String", "kind" : "val"}, {"label" : "resourcePath", "tail" : ": String", "member" : "org.apache.sedona.viz.showcase.ScalaExample.resourcePath", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#resourcePath:String", "kind" : "val"}, {"label" : "prop", "tail" : ": Properties", "member" : "org.apache.sedona.viz.showcase.ScalaExample.prop", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#prop:java.util.Properties", "kind" : "val"}, {"label" : "sparkContext", "tail" : ": SparkContext", "member" : "org.apache.sedona.viz.showcase.ScalaExample.sparkContext", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#sparkContext:org.apache.spark.SparkContext", "kind" : "val"}, {"label" : "sparkConf", "tail" : ": SparkConf", "member" : "org.apache.sedona.viz.showcase.ScalaExample.sparkConf", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#sparkConf:org.apache.spark.SparkConf", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/viz\/showcase\/ScalaExample$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql.sedona_sql.adapters" : [{"name" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter", "shortDescription" : "Adapter for converting between DataFrame and SpatialRDD.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html", "members_object" : [{"label" : "toDf", "tail" : "(spatialPairRDD: JavaPairRDD[Geometry, Geometry], originalLeftSpatialRdd: SpatialRDD[Geometry], originalRightSpatialRdd: SpatialRDD[Geometry], sparkSession: SparkSession): DataFrame", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toDf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toDf(spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry],originalLeftSpatialRdd:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],originalRightSpatialRdd:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialPairRDD: JavaPairRDD[Geometry, Geometry], leftSchema: StructType, rightSchema: StructType, sparkSession: SparkSession): DataFrame", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toDf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toDf(spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry],leftSchema:org.apache.spark.sql.types.StructType,rightSchema:org.apache.spark.sql.types.StructType,sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialPairRDD: JavaPairRDD[Geometry, Geometry], leftSchemaJson: String, rightSchemaJson: String, sparkSession: SparkSession): DataFrame", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toDf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toDf(spatialPairRDD:org.apache.spark.api.java.JavaPairRDD[org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry],leftSchemaJson:String,rightSchemaJson:String,sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toSpatialPartitionedDf", "tail" : "(spatialRDD: SpatialRDD[Geometry], sparkSession: SparkSession): DataFrame", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toSpatialPartitionedDf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toSpatialPartitionedDf(spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toDf", "tail" : "(spatialRDD: SpatialRDD[Geometry], sparkSession: SparkSession): DataFrame", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toDf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toDf(spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],sparkSession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(dataFrame: DataFrame): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toSpatialRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toSpatialRdd(dataFrame:org.apache.spark.sql.DataFrame):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(rdd: RDD[InternalRow], schema: StructType, geometryFieldName: String): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toSpatialRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toSpatialRdd(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow],schema:org.apache.spark.sql.types.StructType,geometryFieldName:String):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(dataFrame: DataFrame, geometryFieldName: String): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toSpatialRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toSpatialRdd(dataFrame:org.apache.spark.sql.DataFrame,geometryFieldName:String):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toRowRdd", "tail" : "(spatialRDD: SpatialRDD[Geometry]): RDD[Row]", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toRowRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toRowRdd(spatialRDD:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(rdd: RDD[Row]): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toSpatialRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toSpatialRdd(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRdd", "tail" : "(rdd: RDD[Row], geometryFieldName: String): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.toSpatialRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toSpatialRdd(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.Row],geometryFieldName:String):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "org.apache.spark.sql.sedona_sql.adapters.StructuredAdapter.logger", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/adapters\/StructuredAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql" : [], "org.apache.sedona.sql.datasources.geopackage.connection" : [{"name" : "org.apache.sedona.sql.datasources.geopackage.connection.FileSystemUtils", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html", "members_object" : [{"label" : "copyToLocal", "tail" : "(options: Configuration, file: Path): (File, Boolean)", "member" : "org.apache.sedona.sql.datasources.geopackage.connection.FileSystemUtils.copyToLocal", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#copyToLocal(options:org.apache.hadoop.conf.Configuration,file:org.apache.hadoop.fs.Path):(java.io.File,Boolean)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/FileSystemUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.datasources.geopackage.connection.GeoPackageConnectionManager", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html", "members_object" : [{"label" : "findTilesMetadata", "tail" : "(file: String, tableName: String): TileMetadata", "member" : "org.apache.sedona.sql.datasources.geopackage.connection.GeoPackageConnectionManager.findTilesMetadata", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#findTilesMetadata(file:String,tableName:String):org.apache.sedona.sql.datasources.geopackage.model.TileMetadata", "kind" : "def"}, {"label" : "getZoomLevelData", "tail" : "(file: String, tableName: String): HashMap[Int, TileMatrix]", "member" : "org.apache.sedona.sql.datasources.geopackage.connection.GeoPackageConnectionManager.getZoomLevelData", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#getZoomLevelData(file:String,tableName:String):scala.collection.mutable.HashMap[Int,org.apache.sedona.sql.datasources.geopackage.model.TileMatrix]", "kind" : "def"}, {"label" : "findFeatureMetadata", "tail" : "(file: String, tableName: String): TableType", "member" : "org.apache.sedona.sql.datasources.geopackage.connection.GeoPackageConnectionManager.findFeatureMetadata", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#findFeatureMetadata(file:String,tableName:String):org.apache.sedona.sql.datasources.geopackage.model.TableType.TableType", "kind" : "def"}, {"label" : "getSchema", "tail" : "(file: String, tableName: String): Seq[GeoPackageField]", "member" : "org.apache.sedona.sql.datasources.geopackage.connection.GeoPackageConnectionManager.getSchema", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#getSchema(file:String,tableName:String):Seq[org.apache.sedona.sql.datasources.geopackage.model.GeoPackageField]", "kind" : "def"}, {"label" : "getTableCursor", "tail" : "(path: String, tableName: String): ResultSet", "member" : "org.apache.sedona.sql.datasources.geopackage.connection.GeoPackageConnectionManager.getTableCursor", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#getTableCursor(path:String,tableName:String):java.sql.ResultSet", "kind" : "def"}, {"label" : "closeStatement", "tail" : "(st: Statement): Unit", "member" : "org.apache.sedona.sql.datasources.geopackage.connection.GeoPackageConnectionManager.closeStatement", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#closeStatement(st:java.sql.Statement):Unit", "kind" : "def"}, {"label" : "createStatement", "tail" : "(file: String): Statement", "member" : "org.apache.sedona.sql.datasources.geopackage.connection.GeoPackageConnectionManager.createStatement", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#createStatement(file:String):java.sql.Statement", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/datasources\/geopackage\/connection\/GeoPackageConnectionManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql.execution.datasource" : [], "org.apache.sedona.stats.autocorrelation" : [{"name" : "org.apache.sedona.stats.autocorrelation.Moran", "shortDescription" : "", "object" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html", "members_object" : [{"label" : "getGlobal", "tail" : "(dataframe: DataFrame, twoTailed: Boolean, idColumn: String, valueColumnName: String): MoranResult", "member" : "org.apache.sedona.stats.autocorrelation.Moran.getGlobal", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#getGlobal(dataframe:org.apache.spark.sql.DataFrame,twoTailed:Boolean,idColumn:String,valueColumnName:String):org.apache.sedona.stats.autocorrelation.MoranResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/Moran$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.stats.autocorrelation.MoranResult", "shortDescription" : "", "members_class" : [{"label" : "getZNorm", "tail" : "(): Double", "member" : "org.apache.sedona.stats.autocorrelation.MoranResult.getZNorm", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#getZNorm():Double", "kind" : "def"}, {"label" : "getPNorm", "tail" : "(): Double", "member" : "org.apache.sedona.stats.autocorrelation.MoranResult.getPNorm", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#getPNorm():Double", "kind" : "def"}, {"label" : "getI", "tail" : "(): Double", "member" : "org.apache.sedona.stats.autocorrelation.MoranResult.getI", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#getI():Double", "kind" : "def"}, {"member" : "org.apache.sedona.stats.autocorrelation.MoranResult#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/stats\/autocorrelation\/MoranResult.html", "kind" : "class"}], "org.apache.sedona.core.wrapper" : [{"name" : "org.apache.sedona.core.wrapper.UniqueGeometry", "shortDescription" : "", "members_class" : [{"label" : "getTypeCode", "tail" : "(): Int", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getTypeCode", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getTypeCode():Int", "kind" : "def"}, {"label" : "compareToSameClass", "tail" : "(o: Any, coordinateSequenceComparator: CoordinateSequenceComparator): Int", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.compareToSameClass", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#compareToSameClass(o:Any,coordinateSequenceComparator:org.locationtech.jts.geom.CoordinateSequenceComparator):Int", "kind" : "def"}, {"label" : "compareToSameClass", "tail" : "(o: Any): Int", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.compareToSameClass", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#compareToSameClass(o:Any):Int", "kind" : "def"}, {"label" : "computeEnvelopeInternal", "tail" : "(): Envelope", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.computeEnvelopeInternal", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#computeEnvelopeInternal():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "normalize", "tail" : "(): Unit", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.normalize", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#normalize():Unit", "kind" : "def"}, {"label" : "copyInternal", "tail" : "(): Geometry", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.copyInternal", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#copyInternal():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "apply", "tail" : "(geometryComponentFilter: GeometryComponentFilter): Unit", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.apply", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#apply(geometryComponentFilter:org.locationtech.jts.geom.GeometryComponentFilter):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(geometryFilter: GeometryFilter): Unit", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.apply", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#apply(geometryFilter:org.locationtech.jts.geom.GeometryFilter):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(coordinateSequenceFilter: CoordinateSequenceFilter): Unit", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.apply", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#apply(coordinateSequenceFilter:org.locationtech.jts.geom.CoordinateSequenceFilter):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(coordinateFilter: CoordinateFilter): Unit", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.apply", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#apply(coordinateFilter:org.locationtech.jts.geom.CoordinateFilter):Unit", "kind" : "def"}, {"label" : "equalsExact", "tail" : "(geometry: Geometry, v: Double): Boolean", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.equalsExact", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#equalsExact(geometry:org.locationtech.jts.geom.Geometry,v:Double):Boolean", "kind" : "def"}, {"label" : "reverseInternal", "tail" : "(): Geometry", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.reverseInternal", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#reverseInternal():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.toString", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.equals", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "getBoundaryDimension", "tail" : "(): Int", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getBoundaryDimension", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getBoundaryDimension():Int", "kind" : "def"}, {"label" : "getBoundary", "tail" : "(): Geometry", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getBoundary", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getBoundary():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "getDimension", "tail" : "(): Int", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getDimension", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getDimension():Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.isEmpty", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "getNumPoints", "tail" : "(): Int", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getNumPoints", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getNumPoints():Int", "kind" : "def"}, {"label" : "getCoordinates", "tail" : "(): Array[Coordinate]", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getCoordinates", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getCoordinates():Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "getCoordinate", "tail" : "(): Coordinate", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getCoordinate", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getCoordinate():org.locationtech.jts.geom.Coordinate", "kind" : "def"}, {"label" : "getGeometryType", "tail" : "(): String", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getGeometryType", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getGeometryType():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.hashCode", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#hashCode():Int", "kind" : "def"}, {"label" : "getUniqueId", "tail" : "(): String", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getUniqueId", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getUniqueId():String", "kind" : "def"}, {"label" : "getOriginalGeometry", "tail" : "(): T", "member" : "org.apache.sedona.core.wrapper.UniqueGeometry.getOriginalGeometry", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getOriginalGeometry():T", "kind" : "def"}, {"member" : "org.apache.sedona.core.wrapper.UniqueGeometry#<init>", "error" : "unsupported entity"}, {"label" : "equal", "tail" : "(arg0: Coordinate, arg1: Coordinate, arg2: Double): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equal", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#equal(x$1:org.locationtech.jts.geom.Coordinate,x$2:org.locationtech.jts.geom.Coordinate,x$3:Double):Boolean", "kind" : "def"}, {"label" : "compare", "tail" : "(arg0: Collection[_], arg1: Collection[_]): Int", "member" : "org.locationtech.jts.geom.Geometry.compare", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#compare(x$1:java.util.Collection[_],x$2:java.util.Collection[_]):Int", "kind" : "def"}, {"label" : "isGeometryCollection", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isGeometryCollection", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#isGeometryCollection():Boolean", "kind" : "def"}, {"label" : "isEquivalentClass", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isEquivalentClass", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#isEquivalentClass(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "compareTo", "tail" : "(arg0: Any, arg1: CoordinateSequenceComparator): Int", "member" : "org.locationtech.jts.geom.Geometry.compareTo", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#compareTo(x$1:Any,x$2:org.locationtech.jts.geom.CoordinateSequenceComparator):Int", "kind" : "def"}, {"label" : "compareTo", "tail" : "(arg0: Any): Int", "member" : "org.locationtech.jts.geom.Geometry.compareTo", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#compareTo(x$1:Any):Int", "kind" : "def"}, {"label" : "norm", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.norm", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#norm():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "copy", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.copy", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#copy():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "org.locationtech.jts.geom.Geometry.clone", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#clone():Object", "kind" : "def"}, {"label" : "equalsNorm", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equalsNorm", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#equalsNorm(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "equalsExact", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equalsExact", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#equalsExact(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "union", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.union", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#union():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "symDifference", "tail" : "(arg0: Geometry): Geometry", "member" : "org.locationtech.jts.geom.Geometry.symDifference", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#symDifference(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "difference", "tail" : "(arg0: Geometry): Geometry", "member" : "org.locationtech.jts.geom.Geometry.difference", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#difference(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "union", "tail" : "(arg0: Geometry): Geometry", "member" : "org.locationtech.jts.geom.Geometry.union", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#union(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "intersection", "tail" : "(arg0: Geometry): Geometry", "member" : "org.locationtech.jts.geom.Geometry.intersection", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#intersection(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.reverse", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#reverse():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "convexHull", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.convexHull", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#convexHull():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "buffer", "tail" : "(arg0: Double, arg1: Int, arg2: Int): Geometry", "member" : "org.locationtech.jts.geom.Geometry.buffer", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#buffer(x$1:Double,x$2:Int,x$3:Int):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "buffer", "tail" : "(arg0: Double, arg1: Int): Geometry", "member" : "org.locationtech.jts.geom.Geometry.buffer", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#buffer(x$1:Double,x$2:Int):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "buffer", "tail" : "(arg0: Double): Geometry", "member" : "org.locationtech.jts.geom.Geometry.buffer", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#buffer(x$1:Double):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "toText", "tail" : "(): String", "member" : "org.locationtech.jts.geom.Geometry.toText", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#toText():String", "kind" : "def"}, {"label" : "equalsTopo", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equalsTopo", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#equalsTopo(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.equals", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#equals(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "relate", "tail" : "(arg0: Geometry): IntersectionMatrix", "member" : "org.locationtech.jts.geom.Geometry.relate", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#relate(x$1:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.IntersectionMatrix", "kind" : "def"}, {"label" : "relate", "tail" : "(arg0: Geometry, arg1: String): Boolean", "member" : "org.locationtech.jts.geom.Geometry.relate", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#relate(x$1:org.locationtech.jts.geom.Geometry,x$2:String):Boolean", "kind" : "def"}, {"label" : "coveredBy", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.coveredBy", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#coveredBy(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "covers", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.covers", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#covers(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "overlaps", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.overlaps", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#overlaps(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.contains", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#contains(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "within", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.within", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#within(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "crosses", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.crosses", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#crosses(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.intersects", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#intersects(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "touches", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.touches", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#touches(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "disjoint", "tail" : "(arg0: Geometry): Boolean", "member" : "org.locationtech.jts.geom.Geometry.disjoint", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#disjoint(x$1:org.locationtech.jts.geom.Geometry):Boolean", "kind" : "def"}, {"label" : "geometryChangedAction", "tail" : "(): Unit", "member" : "org.locationtech.jts.geom.Geometry.geometryChangedAction", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#geometryChangedAction():Unit", "kind" : "def"}, {"label" : "geometryChanged", "tail" : "(): Unit", "member" : "org.locationtech.jts.geom.Geometry.geometryChanged", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#geometryChanged():Unit", "kind" : "def"}, {"label" : "getEnvelopeInternal", "tail" : "(): Envelope", "member" : "org.locationtech.jts.geom.Geometry.getEnvelopeInternal", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getEnvelopeInternal():org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "getEnvelope", "tail" : "(): Geometry", "member" : "org.locationtech.jts.geom.Geometry.getEnvelope", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getEnvelope():org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "hasDimension", "tail" : "(arg0: Int): Boolean", "member" : "org.locationtech.jts.geom.Geometry.hasDimension", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#hasDimension(x$1:Int):Boolean", "kind" : "def"}, {"label" : "getInteriorPoint", "tail" : "(): Point", "member" : "org.locationtech.jts.geom.Geometry.getInteriorPoint", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getInteriorPoint():org.locationtech.jts.geom.Point", "kind" : "def"}, {"label" : "getCentroid", "tail" : "(): Point", "member" : "org.locationtech.jts.geom.Geometry.getCentroid", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getCentroid():org.locationtech.jts.geom.Point", "kind" : "def"}, {"label" : "getLength", "tail" : "(): Double", "member" : "org.locationtech.jts.geom.Geometry.getLength", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getLength():Double", "kind" : "def"}, {"label" : "getArea", "tail" : "(): Double", "member" : "org.locationtech.jts.geom.Geometry.getArea", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getArea():Double", "kind" : "def"}, {"label" : "isRectangle", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isRectangle", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#isRectangle():Boolean", "kind" : "def"}, {"label" : "isWithinDistance", "tail" : "(arg0: Geometry, arg1: Double): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isWithinDistance", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#isWithinDistance(x$1:org.locationtech.jts.geom.Geometry,x$2:Double):Boolean", "kind" : "def"}, {"label" : "distance", "tail" : "(arg0: Geometry): Double", "member" : "org.locationtech.jts.geom.Geometry.distance", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#distance(x$1:org.locationtech.jts.geom.Geometry):Double", "kind" : "def"}, {"label" : "isValid", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isValid", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#isValid():Boolean", "kind" : "def"}, {"label" : "isSimple", "tail" : "(): Boolean", "member" : "org.locationtech.jts.geom.Geometry.isSimple", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#isSimple():Boolean", "kind" : "def"}, {"label" : "getPrecisionModel", "tail" : "(): PrecisionModel", "member" : "org.locationtech.jts.geom.Geometry.getPrecisionModel", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getPrecisionModel():org.locationtech.jts.geom.PrecisionModel", "kind" : "def"}, {"label" : "setUserData", "tail" : "(arg0: Any): Unit", "member" : "org.locationtech.jts.geom.Geometry.setUserData", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#setUserData(x$1:Any):Unit", "kind" : "def"}, {"label" : "getGeometryN", "tail" : "(arg0: Int): Geometry", "member" : "org.locationtech.jts.geom.Geometry.getGeometryN", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getGeometryN(x$1:Int):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "getNumGeometries", "tail" : "(): Int", "member" : "org.locationtech.jts.geom.Geometry.getNumGeometries", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getNumGeometries():Int", "kind" : "def"}, {"label" : "getUserData", "tail" : "(): AnyRef", "member" : "org.locationtech.jts.geom.Geometry.getUserData", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getUserData():Object", "kind" : "def"}, {"label" : "getFactory", "tail" : "(): GeometryFactory", "member" : "org.locationtech.jts.geom.Geometry.getFactory", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getFactory():org.locationtech.jts.geom.GeometryFactory", "kind" : "def"}, {"label" : "setSRID", "tail" : "(arg0: Int): Unit", "member" : "org.locationtech.jts.geom.Geometry.setSRID", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#setSRID(x$1:Int):Unit", "kind" : "def"}, {"label" : "getSRID", "tail" : "(): Int", "member" : "org.locationtech.jts.geom.Geometry.getSRID", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getSRID():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: T): Int", "member" : "java.lang.Comparable.compareTo", "link" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html#compareTo(x$1:T):Int", "kind" : "abstract def"}], "class" : "org\/apache\/sedona\/core\/wrapper\/UniqueGeometry.html", "kind" : "class"}], "org" : [], "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf" : [{"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.DbfParseUtil", "shortDescription" : "", "members_class" : [{"label" : "parse", "tail" : "(inputStream: DataInputStream): List[Array[Byte]]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.DbfParseUtil.parse", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#parse(inputStream:java.io.DataInputStream):java.util.List[Array[Byte]]", "kind" : "def"}, {"label" : "parseFileHead", "tail" : "(inputStream: DataInputStream): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.DbfParseUtil.parseFileHead", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#parseFileHead(inputStream:java.io.DataInputStream):Unit", "kind" : "def"}, {"label" : "getFieldDescriptors", "tail" : "(): List[FieldDescriptor]", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.DbfParseUtil.getFieldDescriptors", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#getFieldDescriptors():java.util.List[org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor]", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.DbfParseUtil.getProgress", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#getProgress():Float", "kind" : "def"}, {"label" : "isDone", "tail" : "(): Boolean", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.DbfParseUtil.isDone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#isDone():Boolean", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.DbfParseUtil#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/DbfParseUtil.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor", "shortDescription" : "The Class FieldDescriptor.", "members_class" : [{"label" : "setFieldDecimalCount", "tail" : "(fieldDecimalCount: Byte): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor.setFieldDecimalCount", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#setFieldDecimalCount(fieldDecimalCount:Byte):Unit", "kind" : "def"}, {"label" : "getFieldDecimalCount", "tail" : "(): Byte", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor.getFieldDecimalCount", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#getFieldDecimalCount():Byte", "kind" : "def"}, {"label" : "setFieldLength", "tail" : "(fieldLength: Int): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor.setFieldLength", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#setFieldLength(fieldLength:Int):Unit", "kind" : "def"}, {"label" : "getFieldLength", "tail" : "(): Int", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor.getFieldLength", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#getFieldLength():Int", "kind" : "def"}, {"label" : "setFieldType", "tail" : "(fieldType: Byte): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor.setFieldType", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#setFieldType(fieldType:Byte):Unit", "kind" : "def"}, {"label" : "getFieldType", "tail" : "(): Byte", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor.getFieldType", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#getFieldType():Byte", "kind" : "def"}, {"label" : "setFieldName", "tail" : "(fieldName: String): Unit", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor.setFieldName", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#setFieldName(fieldName:String):Unit", "kind" : "def"}, {"label" : "getFieldName", "tail" : "(): String", "member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor.getFieldName", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#getFieldName():String", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.shapefileParser.parseUtils.dbf.FieldDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/shapefileParser\/parseUtils\/dbf\/FieldDescriptor.html", "kind" : "class"}], "org.apache.sedona.viz.extension" : [], "org.apache.spark.sql.sedona_sql.optimization" : [{"name" : "org.apache.spark.sql.sedona_sql.optimization.ExpressionUtils", "shortDescription" : "This class contains helper methods for transforming catalyst expressions.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html", "members_object" : [{"label" : "matchDistanceExpressionToJoinSide", "tail" : "(distance: Expression, left: LogicalPlan, right: LogicalPlan): Option[JoinSide]", "member" : "org.apache.spark.sql.sedona_sql.optimization.ExpressionUtils.matchDistanceExpressionToJoinSide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#matchDistanceExpressionToJoinSide(distance:org.apache.spark.sql.catalyst.expressions.Expression,left:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,right:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Option[org.apache.spark.sql.sedona_sql.strategy.join.JoinSide]", "kind" : "def"}, {"label" : "matchExpressionsToPlans", "tail" : "(exprA: Expression, exprB: Expression, planA: LogicalPlan, planB: LogicalPlan): Option[(LogicalPlan, LogicalPlan, Boolean)]", "member" : "org.apache.spark.sql.sedona_sql.optimization.ExpressionUtils.matchExpressionsToPlans", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#matchExpressionsToPlans(exprA:org.apache.spark.sql.catalyst.expressions.Expression,exprB:org.apache.spark.sql.catalyst.expressions.Expression,planA:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,planB:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Option[(org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan,Boolean)]", "kind" : "def"}, {"label" : "matches", "tail" : "(expr: Expression, plan: LogicalPlan): Boolean", "member" : "org.apache.spark.sql.sedona_sql.optimization.ExpressionUtils.matches", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#matches(expr:org.apache.spark.sql.catalyst.expressions.Expression,plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Boolean", "kind" : "def"}, {"label" : "splitConjunctivePredicates", "tail" : "(condition: Expression): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_sql.optimization.ExpressionUtils.splitConjunctivePredicates", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#splitConjunctivePredicates(condition:org.apache.spark.sql.catalyst.expressions.Expression):Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExpressionUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.optimization.ExtractPhysicalFunctions", "shortDescription" : "Extracts Physical functions from operators, rewriting the query plan so that the functions canbe evaluated alone in its own physical executors.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html", "members_object" : [{"label" : "apply", "tail" : "(plan: LogicalPlan): LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.optimization.ExtractPhysicalFunctions.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#apply(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "ruleName", "tail" : ": String", "member" : "org.apache.spark.sql.catalyst.rules.Rule.ruleName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#ruleName:String", "kind" : "val"}, {"label" : "ruleId", "tail" : ": RuleId", "member" : "org.apache.spark.sql.catalyst.rules.Rule.ruleId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#ruleId:org.apache.spark.sql.catalyst.rules.RuleId", "kind" : "lazy val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#logName:String", "kind" : "def"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.catalyst.SQLConfHelper.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/ExtractPhysicalFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.optimization.SpatialFilterPushDownForGeoParquet", "shortDescription" : "", "members_class" : [{"label" : "translateToGeoParquetSpatialFilters", "tail" : "(predicates: Seq[Expression]): Seq[GeoParquetSpatialFilter]", "member" : "org.apache.spark.sql.sedona_sql.optimization.SpatialFilterPushDownForGeoParquet.translateToGeoParquetSpatialFilters", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#translateToGeoParquetSpatialFilters(predicates:Seq[org.apache.spark.sql.catalyst.expressions.Expression]):Seq[org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter]", "kind" : "def"}, {"label" : "apply", "tail" : "(plan: LogicalPlan): LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.optimization.SpatialFilterPushDownForGeoParquet.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#apply(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.optimization.SpatialFilterPushDownForGeoParquet#<init>", "error" : "unsupported entity"}, {"label" : "ruleName", "tail" : ": String", "member" : "org.apache.spark.sql.catalyst.rules.Rule.ruleName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#ruleName:String", "kind" : "val"}, {"label" : "ruleId", "tail" : ": RuleId", "member" : "org.apache.spark.sql.catalyst.rules.Rule.ruleId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#ruleId:org.apache.spark.sql.catalyst.rules.RuleId", "kind" : "lazy val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#logName:String", "kind" : "def"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.catalyst.SQLConfHelper.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialFilterPushDownForGeoParquet.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.optimization.SpatialTemporalFilterPushDownForStacScan", "shortDescription" : "", "members_class" : [{"label" : "translateToTemporalFilters", "tail" : "(predicates: Seq[Expression]): Seq[TemporalFilter]", "member" : "org.apache.spark.sql.sedona_sql.optimization.SpatialTemporalFilterPushDownForStacScan.translateToTemporalFilters", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#translateToTemporalFilters(predicates:Seq[org.apache.spark.sql.catalyst.expressions.Expression]):Seq[org.apache.spark.sql.execution.datasource.stac.TemporalFilter]", "kind" : "def"}, {"label" : "extractLimit", "tail" : "(plan: LogicalPlan): Option[Int]", "member" : "org.apache.spark.sql.sedona_sql.optimization.SpatialTemporalFilterPushDownForStacScan.extractLimit", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#extractLimit(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Option[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(plan: LogicalPlan): LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.optimization.SpatialTemporalFilterPushDownForStacScan.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#apply(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.optimization.SpatialTemporalFilterPushDownForStacScan#<init>", "error" : "unsupported entity"}, {"label" : "translateToGeoParquetSpatialFilters", "tail" : "(predicates: Seq[Expression]): Seq[GeoParquetSpatialFilter]", "member" : "org.apache.spark.sql.sedona_sql.optimization.SpatialFilterPushDownForGeoParquet.translateToGeoParquetSpatialFilters", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#translateToGeoParquetSpatialFilters(predicates:Seq[org.apache.spark.sql.catalyst.expressions.Expression]):Seq[org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter]", "kind" : "def"}, {"label" : "ruleName", "tail" : ": String", "member" : "org.apache.spark.sql.catalyst.rules.Rule.ruleName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#ruleName:String", "kind" : "val"}, {"label" : "ruleId", "tail" : ": RuleId", "member" : "org.apache.spark.sql.catalyst.rules.Rule.ruleId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#ruleId:org.apache.spark.sql.catalyst.rules.RuleId", "kind" : "lazy val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#logName:String", "kind" : "def"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.catalyst.SQLConfHelper.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/optimization\/SpatialTemporalFilterPushDownForStacScan.html", "kind" : "class"}], "org.apache.sedona.core.formatMapper.netcdfParser" : [{"name" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile", "shortDescription" : "", "members_class" : [{"label" : "readToByteChannel", "tail" : "(dest: WritableByteChannel, offset: Long, nbytes: Long): Long", "member" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile.readToByteChannel", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readToByteChannel(dest:java.nio.channels.WritableByteChannel,offset:Long,nbytes:Long):Long", "kind" : "def"}, {"label" : "read_", "tail" : "(pos: Long, b: Array[Byte], offset: Int, len: Int): Int", "member" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile.read_", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#read_(pos:Long,b:Array[Byte],offset:Int,len:Int):Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Long", "member" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile.length", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#length():Long", "kind" : "def"}, {"label" : "getLastModified", "tail" : "(): Long", "member" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile.getLastModified", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#getLastModified():Long", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile.close", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#close():Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile.flush", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#flush():Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.sedona.core.formatMapper.netcdfParser.HDFSRandomAccessFile#<init>", "error" : "unsupported entity"}, {"label" : "searchForward", "tail" : "(arg0: KMPMatch, arg1: Int): Boolean", "member" : "ucar.unidata.io.RandomAccessFile.searchForward", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#searchForward(x$1:ucar.unidata.io.KMPMatch,x$2:Int):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "ucar.unidata.io.RandomAccessFile.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#toString():String", "kind" : "def"}, {"label" : "writeUTF", "tail" : "(arg0: String): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeUTF", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeUTF(x$1:String):Unit", "kind" : "final def"}, {"label" : "writeChars", "tail" : "(arg0: String, arg1: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChars", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChars(x$1:String,x$2:java.nio.ByteOrder):Unit", "kind" : "def"}, {"label" : "writeChars", "tail" : "(arg0: String, arg1: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChars", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChars(x$1:String,x$2:Int):Unit", "kind" : "def"}, {"label" : "writeChars", "tail" : "(arg0: String): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChars", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChars(x$1:String):Unit", "kind" : "final def"}, {"label" : "writeBytes", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeBytes(x$1:Array[Char],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "writeBytes", "tail" : "(arg0: String): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeBytes(x$1:String):Unit", "kind" : "final def"}, {"label" : "writeDouble", "tail" : "(arg0: Array[Double], arg1: Int, arg2: Int, arg3: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeDouble(x$1:Array[Double],x$2:Int,x$3:Int,x$4:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeDouble", "tail" : "(arg0: Array[Double], arg1: Int, arg2: Int, arg3: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeDouble(x$1:Array[Double],x$2:Int,x$3:Int,x$4:Int):Unit", "kind" : "final def"}, {"label" : "writeDouble", "tail" : "(arg0: Array[Double], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeDouble(x$1:Array[Double],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "writeDouble", "tail" : "(arg0: Double, arg1: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeDouble(x$1:Double,x$2:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeDouble", "tail" : "(arg0: Double, arg1: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeDouble(x$1:Double,x$2:Int):Unit", "kind" : "final def"}, {"label" : "writeDouble", "tail" : "(arg0: Double): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeDouble(x$1:Double):Unit", "kind" : "final def"}, {"label" : "writeFloat", "tail" : "(arg0: Array[Float], arg1: Int, arg2: Int, arg3: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeFloat", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeFloat(x$1:Array[Float],x$2:Int,x$3:Int,x$4:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeFloat", "tail" : "(arg0: Array[Float], arg1: Int, arg2: Int, arg3: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeFloat", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeFloat(x$1:Array[Float],x$2:Int,x$3:Int,x$4:Int):Unit", "kind" : "final def"}, {"label" : "writeFloat", "tail" : "(arg0: Array[Float], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeFloat", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeFloat(x$1:Array[Float],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "writeFloat", "tail" : "(arg0: Float, arg1: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeFloat", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeFloat(x$1:Float,x$2:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeFloat", "tail" : "(arg0: Float, arg1: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeFloat", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeFloat(x$1:Float,x$2:Int):Unit", "kind" : "final def"}, {"label" : "writeFloat", "tail" : "(arg0: Float): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeFloat", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeFloat(x$1:Float):Unit", "kind" : "final def"}, {"label" : "writeLong", "tail" : "(arg0: Array[Long], arg1: Int, arg2: Int, arg3: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeLong", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeLong(x$1:Array[Long],x$2:Int,x$3:Int,x$4:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeLong", "tail" : "(arg0: Array[Long], arg1: Int, arg2: Int, arg3: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeLong", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeLong(x$1:Array[Long],x$2:Int,x$3:Int,x$4:Int):Unit", "kind" : "final def"}, {"label" : "writeLong", "tail" : "(arg0: Array[Long], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeLong", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeLong(x$1:Array[Long],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "writeLong", "tail" : "(arg0: Long, arg1: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeLong", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeLong(x$1:Long,x$2:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeLong", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeLong", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeLong(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "writeLong", "tail" : "(arg0: Long): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeLong", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeLong(x$1:Long):Unit", "kind" : "final def"}, {"label" : "writeInt", "tail" : "(arg0: Array[Int], arg1: Int, arg2: Int, arg3: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeInt(x$1:Array[Int],x$2:Int,x$3:Int,x$4:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeInt", "tail" : "(arg0: Array[Int], arg1: Int, arg2: Int, arg3: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeInt(x$1:Array[Int],x$2:Int,x$3:Int,x$4:Int):Unit", "kind" : "final def"}, {"label" : "writeInt", "tail" : "(arg0: Array[Int], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeInt(x$1:Array[Int],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "writeInt", "tail" : "(arg0: Int, arg1: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeInt(x$1:Int,x$2:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeInt", "tail" : "(arg0: Int, arg1: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeInt(x$1:Int,x$2:Int):Unit", "kind" : "final def"}, {"label" : "writeInt", "tail" : "(arg0: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeInt(x$1:Int):Unit", "kind" : "final def"}, {"label" : "writeChar", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int, arg3: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChar", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChar(x$1:Array[Char],x$2:Int,x$3:Int,x$4:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeChar", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int, arg3: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChar", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChar(x$1:Array[Char],x$2:Int,x$3:Int,x$4:Int):Unit", "kind" : "final def"}, {"label" : "writeChar", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChar", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChar(x$1:Array[Char],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "writeChar", "tail" : "(arg0: Int, arg1: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChar", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChar(x$1:Int,x$2:java.nio.ByteOrder):Unit", "kind" : "def"}, {"label" : "writeChar", "tail" : "(arg0: Int, arg1: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChar", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChar(x$1:Int,x$2:Int):Unit", "kind" : "def"}, {"label" : "writeChar", "tail" : "(arg0: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeChar", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeChar(x$1:Int):Unit", "kind" : "final def"}, {"label" : "writeShort", "tail" : "(arg0: Array[Short], arg1: Int, arg2: Int, arg3: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeShort(x$1:Array[Short],x$2:Int,x$3:Int,x$4:java.nio.ByteOrder):Unit", "kind" : "final def"}, {"label" : "writeShort", "tail" : "(arg0: Array[Short], arg1: Int, arg2: Int, arg3: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeShort(x$1:Array[Short],x$2:Int,x$3:Int,x$4:Int):Unit", "kind" : "final def"}, {"label" : "writeShort", "tail" : "(arg0: Array[Short], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeShort(x$1:Array[Short],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "writeShort", "tail" : "(arg0: Int, arg1: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeShort(x$1:Int,x$2:java.nio.ByteOrder):Unit", "kind" : "def"}, {"label" : "writeShort", "tail" : "(arg0: Int, arg1: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeShort(x$1:Int,x$2:Int):Unit", "kind" : "final def"}, {"label" : "writeShort", "tail" : "(arg0: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeShort(x$1:Int):Unit", "kind" : "final def"}, {"label" : "writeByte", "tail" : "(arg0: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeByte", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeByte(x$1:Int):Unit", "kind" : "final def"}, {"label" : "writeBoolean", "tail" : "(arg0: Array[Boolean], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeBoolean", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeBoolean(x$1:Array[Boolean],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "writeBoolean", "tail" : "(arg0: Boolean): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeBoolean", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeBoolean(x$1:Boolean):Unit", "kind" : "final def"}, {"label" : "readStringMax", "tail" : "(arg0: Int, arg1: Charset): String", "member" : "ucar.unidata.io.RandomAccessFile.readStringMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readStringMax(x$1:Int,x$2:java.nio.charset.Charset):String", "kind" : "def"}, {"label" : "readStringMax", "tail" : "(arg0: Int): String", "member" : "ucar.unidata.io.RandomAccessFile.readStringMax", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readStringMax(x$1:Int):String", "kind" : "def"}, {"label" : "readString", "tail" : "(arg0: Int, arg1: Charset): String", "member" : "ucar.unidata.io.RandomAccessFile.readString", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readString(x$1:Int,x$2:java.nio.charset.Charset):String", "kind" : "def"}, {"label" : "readString", "tail" : "(arg0: Int): String", "member" : "ucar.unidata.io.RandomAccessFile.readString", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readString(x$1:Int):String", "kind" : "def"}, {"label" : "readUTF", "tail" : "(): String", "member" : "ucar.unidata.io.RandomAccessFile.readUTF", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readUTF():String", "kind" : "final def"}, {"label" : "readLine", "tail" : "(arg0: Charset): String", "member" : "ucar.unidata.io.RandomAccessFile.readLine", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readLine(x$1:java.nio.charset.Charset):String", "kind" : "def"}, {"label" : "readLine", "tail" : "(): String", "member" : "ucar.unidata.io.RandomAccessFile.readLine", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readLine():String", "kind" : "final def"}, {"label" : "readDouble", "tail" : "(arg0: Array[Double], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.readDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readDouble(x$1:Array[Double],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "readDouble", "tail" : "(): Double", "member" : "ucar.unidata.io.RandomAccessFile.readDouble", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readDouble():Double", "kind" : "final def"}, {"label" : "readFloat", "tail" : "(arg0: Array[Float], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.readFloat", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readFloat(x$1:Array[Float],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "readFloat", "tail" : "(): Float", "member" : "ucar.unidata.io.RandomAccessFile.readFloat", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readFloat():Float", "kind" : "final def"}, {"label" : "readLong", "tail" : "(arg0: Array[Long], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.readLong", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readLong(x$1:Array[Long],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "readLong", "tail" : "(): Long", "member" : "ucar.unidata.io.RandomAccessFile.readLong", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readLong():Long", "kind" : "final def"}, {"label" : "readInt", "tail" : "(arg0: Array[Int], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.readInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readInt(x$1:Array[Int],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "readIntUnbuffered", "tail" : "(arg0: Long): Int", "member" : "ucar.unidata.io.RandomAccessFile.readIntUnbuffered", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readIntUnbuffered(x$1:Long):Int", "kind" : "final def"}, {"label" : "readInt", "tail" : "(): Int", "member" : "ucar.unidata.io.RandomAccessFile.readInt", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readInt():Int", "kind" : "final def"}, {"label" : "readChar", "tail" : "(): Char", "member" : "ucar.unidata.io.RandomAccessFile.readChar", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readChar():Char", "kind" : "final def"}, {"label" : "readUnsignedShort", "tail" : "(): Int", "member" : "ucar.unidata.io.RandomAccessFile.readUnsignedShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readUnsignedShort():Int", "kind" : "final def"}, {"label" : "readShort", "tail" : "(arg0: Array[Short], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.readShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readShort(x$1:Array[Short],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "readShort", "tail" : "(): Short", "member" : "ucar.unidata.io.RandomAccessFile.readShort", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readShort():Short", "kind" : "final def"}, {"label" : "readUnsignedByte", "tail" : "(): Int", "member" : "ucar.unidata.io.RandomAccessFile.readUnsignedByte", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readUnsignedByte():Int", "kind" : "final def"}, {"label" : "readByte", "tail" : "(): Byte", "member" : "ucar.unidata.io.RandomAccessFile.readByte", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readByte():Byte", "kind" : "final def"}, {"label" : "readBoolean", "tail" : "(): Boolean", "member" : "ucar.unidata.io.RandomAccessFile.readBoolean", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readBoolean():Boolean", "kind" : "final def"}, {"label" : "write", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.write", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#write(x$1:Array[Byte],x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Array[Byte]): Unit", "member" : "ucar.unidata.io.RandomAccessFile.write", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#write(x$1:Array[Byte]):Unit", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.writeBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#writeBytes(x$1:Array[Byte],x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.write", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#write(x$1:Int):Unit", "kind" : "def"}, {"label" : "unread", "tail" : "(): Unit", "member" : "ucar.unidata.io.RandomAccessFile.unread", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#unread():Unit", "kind" : "def"}, {"label" : "skipBytes", "tail" : "(arg0: Long): Long", "member" : "ucar.unidata.io.RandomAccessFile.skipBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#skipBytes(x$1:Long):Long", "kind" : "def"}, {"label" : "skipBytes", "tail" : "(arg0: Int): Int", "member" : "ucar.unidata.io.RandomAccessFile.skipBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#skipBytes(x$1:Int):Int", "kind" : "def"}, {"label" : "readFully", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.readFully", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readFully(x$1:Array[Byte],x$2:Int,x$3:Int):Unit", "kind" : "final def"}, {"label" : "readFully", "tail" : "(arg0: Array[Byte]): Unit", "member" : "ucar.unidata.io.RandomAccessFile.readFully", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readFully(x$1:Array[Byte]):Unit", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(arg0: Int): Array[Byte]", "member" : "ucar.unidata.io.RandomAccessFile.readBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readBytes(x$1:Int):Array[Byte]", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte]): Int", "member" : "ucar.unidata.io.RandomAccessFile.read", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#read(x$1:Array[Byte]):Int", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Int", "member" : "ucar.unidata.io.RandomAccessFile.read", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#read(x$1:Array[Byte],x$2:Int,x$3:Int):Int", "kind" : "def"}, {"label" : "readBytes", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Int", "member" : "ucar.unidata.io.RandomAccessFile.readBytes", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readBytes(x$1:Array[Byte],x$2:Int,x$3:Int):Int", "kind" : "def"}, {"label" : "read", "tail" : "(): Int", "member" : "ucar.unidata.io.RandomAccessFile.read", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#read():Int", "kind" : "def"}, {"label" : "setExtendMode", "tail" : "(): Unit", "member" : "ucar.unidata.io.RandomAccessFile.setExtendMode", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#setExtendMode():Unit", "kind" : "def"}, {"label" : "setMinLength", "tail" : "(arg0: Long): Unit", "member" : "ucar.unidata.io.RandomAccessFile.setMinLength", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#setMinLength(x$1:Long):Unit", "kind" : "def"}, {"label" : "order", "tail" : "(arg0: ByteOrder): Unit", "member" : "ucar.unidata.io.RandomAccessFile.order", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#order(x$1:java.nio.ByteOrder):Unit", "kind" : "def"}, {"label" : "order", "tail" : "(arg0: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.order", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#order(x$1:Int):Unit", "kind" : "def"}, {"label" : "getLocation", "tail" : "(): String", "member" : "ucar.unidata.io.RandomAccessFile.getLocation", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#getLocation():String", "kind" : "def"}, {"label" : "getFilePointer", "tail" : "(): Long", "member" : "ucar.unidata.io.RandomAccessFile.getFilePointer", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#getFilePointer():Long", "kind" : "def"}, {"label" : "readBuffer", "tail" : "(arg0: Long): Unit", "member" : "ucar.unidata.io.RandomAccessFile.readBuffer", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#readBuffer(x$1:Long):Unit", "kind" : "def"}, {"label" : "seek", "tail" : "(arg0: Long): Unit", "member" : "ucar.unidata.io.RandomAccessFile.seek", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#seek(x$1:Long):Unit", "kind" : "def"}, {"label" : "isDirectory", "tail" : "(): Boolean", "member" : "ucar.unidata.io.RandomAccessFile.isDirectory", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#isDirectory():Boolean", "kind" : "def"}, {"label" : "isAtEndOfFile", "tail" : "(): Boolean", "member" : "ucar.unidata.io.RandomAccessFile.isAtEndOfFile", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#isAtEndOfFile():Boolean", "kind" : "def"}, {"label" : "setFileCache", "tail" : "(arg0: FileCacheIF): Unit", "member" : "ucar.unidata.io.RandomAccessFile.setFileCache", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#setFileCache(x$1:ucar.nc2.util.cache.FileCacheIF):Unit", "kind" : "def"}, {"label" : "reacquire", "tail" : "(): Unit", "member" : "ucar.unidata.io.RandomAccessFile.reacquire", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#reacquire():Unit", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "ucar.unidata.io.RandomAccessFile.release", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#release():Unit", "kind" : "def"}, {"label" : "getBufferSize", "tail" : "(): Int", "member" : "ucar.unidata.io.RandomAccessFile.getBufferSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#getBufferSize():Int", "kind" : "def"}, {"label" : "setBufferSize", "tail" : "(arg0: Int): Unit", "member" : "ucar.unidata.io.RandomAccessFile.setBufferSize", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#setBufferSize(x$1:Int):Unit", "kind" : "def"}, {"label" : "getRandomAccessFile", "tail" : "(): RandomAccessFile", "member" : "ucar.unidata.io.RandomAccessFile.getRandomAccessFile", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#getRandomAccessFile():java.io.RandomAccessFile", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/HDFSRandomAccessFile.html", "kind" : "class"}, {"name" : "org.apache.sedona.core.formatMapper.netcdfParser.SerNetCDFUtils", "shortDescription" : "The Class SerNetCDFUtils.", "members_class" : [{"member" : "org.apache.sedona.core.formatMapper.netcdfParser.SerNetCDFUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/formatMapper\/netcdfParser\/SerNetCDFUtils.html", "kind" : "class"}], "org.apache.spark.sql.sedona_sql.strategy.physical" : [], "org.apache.sedona.core.serde" : [{"name" : "org.apache.sedona.core.serde.SedonaKryoRegistrator", "shortDescription" : "", "members_class" : [{"label" : "registerClasses", "tail" : "(kryo: Kryo): Unit", "member" : "org.apache.sedona.core.serde.SedonaKryoRegistrator.registerClasses", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#registerClasses(kryo:com.esotericsoftware.kryo.Kryo):Unit", "kind" : "def"}, {"member" : "org.apache.sedona.core.serde.SedonaKryoRegistrator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/core\/serde\/SedonaKryoRegistrator.html", "kind" : "class"}], "org.apache.spark.sql.sedona_viz.expressions" : [{"name" : "org.apache.spark.sql.sedona_viz.expressions.ST_Colorize", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): ST_Colorize", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Colorize.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_viz.expressions.ST_Colorize", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Colorize.children", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Colorize.dataType", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Colorize.eval", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Colorize.nullable", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#nullable:Boolean", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Colorize#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Colorize.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#logName:String", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Colorize.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): ST_EncodeImage", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage.children", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage.dataType", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage.eval", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage.nullable", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#nullable:Boolean", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_EncodeImage.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_EncodeImage.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): ST_Pixelize", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize.nullable", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#nullable:Boolean", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize.children", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize.dataType", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize.eval", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize.toString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#toString():String", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Pixelize.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#logName:String", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#sql:String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Pixelize.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render", "shortDescription" : "", "members_case class" : [{"label" : "evaluate", "tail" : "(buffer: Row): Any", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.evaluate", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#evaluate(buffer:org.apache.spark.sql.Row):Any", "kind" : "def"}, {"label" : "merge", "tail" : "(buffer1: MutableAggregationBuffer, buffer2: Row): Unit", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.merge", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#merge(buffer1:org.apache.spark.sql.expressions.MutableAggregationBuffer,buffer2:org.apache.spark.sql.Row):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(buffer: MutableAggregationBuffer, input: Row): Unit", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.update", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#update(buffer:org.apache.spark.sql.expressions.MutableAggregationBuffer,input:org.apache.spark.sql.Row):Unit", "kind" : "def"}, {"label" : "initialize", "tail" : "(buffer: MutableAggregationBuffer): Unit", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.initialize", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#initialize(buffer:org.apache.spark.sql.expressions.MutableAggregationBuffer):Unit", "kind" : "def"}, {"label" : "deterministic", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#deterministic:Boolean", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.dataType", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.toString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#toString():String", "kind" : "def"}, {"label" : "bufferSchema", "tail" : "(): StructType", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.bufferSchema", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#bufferSchema:org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "inputSchema", "tail" : "(): StructType", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render.inputSchema", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#inputSchema:org.apache.spark.sql.types.StructType", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_viz.expressions.ST_Render#<init>", "error" : "unsupported entity"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#logName:String", "kind" : "def"}, {"label" : "distinct", "tail" : "(exprs: Column*): Column", "member" : "org.apache.spark.sql.expressions.UserDefinedAggregateFunction.distinct", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#distinct(exprs:org.apache.spark.sql.Column*):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(exprs: Column*): Column", "member" : "org.apache.spark.sql.expressions.UserDefinedAggregateFunction.apply", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#apply(exprs:org.apache.spark.sql.Column*):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_Render.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_viz.expressions.ST_TileName", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): ST_TileName", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_TileName.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.sedona_viz.expressions.ST_TileName", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_TileName.children", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_TileName.dataType", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_TileName.eval", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_TileName.nullable", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#nullable:Boolean", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_viz.expressions.ST_TileName#<init>", "error" : "unsupported entity"}, {"label" : "inputExpressions", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.sedona_viz.expressions.ST_TileName.inputExpressions", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#inputExpressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_viz\/expressions\/ST_TileName.html", "kind" : "case class"}], "org.apache.sedona.util" : [{"name" : "org.apache.sedona.util.DfUtils", "shortDescription" : "", "object" : "org\/apache\/sedona\/util\/DfUtils$.html", "members_object" : [{"label" : "getGeometryColumnName", "tail" : "(schema: StructType): String", "member" : "org.apache.sedona.util.DfUtils.getGeometryColumnName", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#getGeometryColumnName(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/util\/DfUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/util\/DfUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql.sedona_viz.UDT" : [{"name" : "org.apache.spark.sql.sedona_viz.UDT.UdtRegistratorWrapper", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html", "members_object" : [{"label" : "registerAll", "tail" : "(): Unit", "member" : "org.apache.spark.sql.sedona_viz.UDT.UdtRegistratorWrapper.registerAll", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#registerAll():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_viz\/UDT\/UdtRegistratorWrapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.sql" : [{"name" : "org.apache.sedona.sql.RasterRegistrator", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html", "members_object" : [{"label" : "dropAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.sql.RasterRegistrator.dropAll", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#dropAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "registerAll", "tail" : "(sparkSession: SparkSession): Unit", "member" : "org.apache.sedona.sql.RasterRegistrator.registerAll", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#registerAll(sparkSession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "org.apache.sedona.sql.RasterRegistrator.logger", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/RasterRegistrator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.sedona.sql.SedonaSqlExtensions", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(e: SparkSessionExtensions): Unit", "member" : "org.apache.sedona.sql.SedonaSqlExtensions.apply", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#apply(e:org.apache.spark.sql.SparkSessionExtensions):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "org.apache.sedona.sql.SedonaSqlExtensions.logger", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "org.apache.sedona.sql.SedonaSqlExtensions#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Unit) â‡’ A): (SparkSessionExtensions) â‡’ A", "member" : "scala.Function1.andThen", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ SparkSessionExtensions): (A) â‡’ Unit", "member" : "scala.Function1.compose", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/sedona\/sql\/SedonaSqlExtensions.html", "kind" : "class"}], "org.apache.spark.sql.sedona_sql.execution" : [{"name" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode", "members_trait" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "metrics", "tail" : "(): Map[String, SQLMetric]", "member" : "org.apache.spark.sql.execution.SparkPlan.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaBinaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withNewChildrenInternal", "tail" : "(newLeft: SparkPlan, newRight: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#withNewChildrenInternal(newLeft:org.apache.spark.sql.execution.SparkPlan,newRight:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract def"}, {"label" : "right", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract def"}, {"label" : "left", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "abstract def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaBinaryExecNode.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.execution.SedonaUnaryExecNode", "members_trait" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaUnaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaUnaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "metrics", "tail" : "(): Map[String, SQLMetric]", "member" : "org.apache.spark.sql.execution.SparkPlan.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): SedonaUnaryExecNode.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withNewChildInternal", "tail" : "(newChild: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaUnaryExecNode.withNewChildInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#withNewChildInternal(newChild:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract def"}, {"label" : "child", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaUnaryExecNode.child", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#child:org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "abstract def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/execution\/SedonaUnaryExecNode.html", "kind" : "trait"}], "org.apache.spark.sql.execution.datasources.parquet" : [{"name" : "org.apache.spark.sql.execution.datasources.parquet.Covering", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.sql.execution.datasources.parquet.Covering#<init>", "error" : "unsupported entity"}, {"label" : "bbox", "tail" : ": CoveringBBox", "member" : "org.apache.spark.sql.execution.datasources.parquet.Covering.bbox", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#bbox:org.apache.spark.sql.execution.datasources.parquet.CoveringBBox", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/Covering.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.execution.datasources.parquet.CoveringBBox", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.sql.execution.datasources.parquet.CoveringBBox#<init>", "error" : "unsupported entity"}, {"label" : "zmax", "tail" : ": Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.datasources.parquet.CoveringBBox.zmax", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#zmax:Option[Seq[String]]", "kind" : "val"}, {"label" : "ymax", "tail" : ": Seq[String]", "member" : "org.apache.spark.sql.execution.datasources.parquet.CoveringBBox.ymax", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#ymax:Seq[String]", "kind" : "val"}, {"label" : "xmax", "tail" : ": Seq[String]", "member" : "org.apache.spark.sql.execution.datasources.parquet.CoveringBBox.xmax", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#xmax:Seq[String]", "kind" : "val"}, {"label" : "zmin", "tail" : ": Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.datasources.parquet.CoveringBBox.zmin", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#zmin:Option[Seq[String]]", "kind" : "val"}, {"label" : "ymin", "tail" : ": Seq[String]", "member" : "org.apache.spark.sql.execution.datasources.parquet.CoveringBBox.ymin", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#ymin:Seq[String]", "kind" : "val"}, {"label" : "xmin", "tail" : ": Seq[String]", "member" : "org.apache.spark.sql.execution.datasources.parquet.CoveringBBox.xmin", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#xmin:Seq[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/CoveringBBox.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData", "shortDescription" : "A case class that holds the metadata of geometry column in GeoParquet metadata", "members_case class" : [{"member" : "org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData#<init>", "error" : "unsupported entity"}, {"label" : "covering", "tail" : ": Option[Covering]", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData.covering", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#covering:Option[org.apache.spark.sql.execution.datasources.parquet.Covering]", "kind" : "val"}, {"label" : "crs", "tail" : ": Option[JValue]", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData.crs", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#crs:Option[org.json4s.JValue]", "kind" : "val"}, {"label" : "bbox", "tail" : ": Seq[Double]", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData.bbox", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#bbox:Seq[Double]", "kind" : "val"}, {"label" : "geometryTypes", "tail" : ": Seq[String]", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData.geometryTypes", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#geometryTypes:Seq[String]", "kind" : "val"}, {"label" : "encoding", "tail" : ": String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData.encoding", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#encoding:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeometryFieldMetaData.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetFileFormatBase", "members_trait" : [{"label" : "shortName", "tail" : "(): String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetFileFormatBase.shortName", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#shortName():String", "kind" : "def"}, {"label" : "supportFieldName", "tail" : "(name: String): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.supportFieldName", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#supportFieldName(name:String):Boolean", "kind" : "def"}, {"label" : "supportDataType", "tail" : "(dataType: DataType): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.supportDataType", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#supportDataType(dataType:org.apache.spark.sql.types.DataType):Boolean", "kind" : "def"}, {"label" : "buildReaderWithPartitionValues", "tail" : "(sparkSession: SparkSession, dataSchema: StructType, partitionSchema: StructType, requiredSchema: StructType, filters: Seq[Filter], options: Map[String, String], hadoopConf: Configuration): (PartitionedFile) â‡’ Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.buildReaderWithPartitionValues", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#buildReaderWithPartitionValues(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,requiredSchema:org.apache.spark.sql.types.StructType,filters:Seq[org.apache.spark.sql.sources.Filter],options:Map[String,String],hadoopConf:org.apache.hadoop.conf.Configuration):org.apache.spark.sql.execution.datasources.PartitionedFile=>Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "buildReader", "tail" : "(sparkSession: SparkSession, dataSchema: StructType, partitionSchema: StructType, requiredSchema: StructType, filters: Seq[Filter], options: Map[String, String], hadoopConf: Configuration): (PartitionedFile) â‡’ Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.buildReader", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#buildReader(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,requiredSchema:org.apache.spark.sql.types.StructType,filters:Seq[org.apache.spark.sql.sources.Filter],options:Map[String,String],hadoopConf:org.apache.hadoop.conf.Configuration):org.apache.spark.sql.execution.datasources.PartitionedFile=>Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(sparkSession: SparkSession, options: Map[String, String], path: Path): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.isSplitable", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#isSplitable(sparkSession:org.apache.spark.sql.SparkSession,options:Map[String,String],path:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(requiredSchema: StructType, partitionSchema: StructType, sqlConf: SQLConf): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.vectorTypes", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#vectorTypes(requiredSchema:org.apache.spark.sql.types.StructType,partitionSchema:org.apache.spark.sql.types.StructType,sqlConf:org.apache.spark.sql.internal.SQLConf):Option[Seq[String]]", "kind" : "def"}, {"label" : "supportBatch", "tail" : "(sparkSession: SparkSession, dataSchema: StructType): Boolean", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.supportBatch", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#supportBatch(sparkSession:org.apache.spark.sql.SparkSession,dataSchema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withSpatialPredicates", "tail" : "(spatialFilter: GeoParquetSpatialFilter): GeoParquetFileFormatBase", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetFileFormatBase.withSpatialPredicates", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#withSpatialPredicates(spatialFilter:org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter):org.apache.spark.sql.execution.datasources.parquet.GeoParquetFileFormatBase", "kind" : "abstract def"}, {"label" : "prepareWrite", "tail" : "(sparkSession: SparkSession, job: Job, options: Map[String, String], dataSchema: StructType): OutputWriterFactory", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.prepareWrite", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#prepareWrite(sparkSession:org.apache.spark.sql.SparkSession,job:org.apache.hadoop.mapreduce.Job,options:Map[String,String],dataSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.execution.datasources.OutputWriterFactory", "kind" : "abstract def"}, {"label" : "inferSchema", "tail" : "(sparkSession: SparkSession, options: Map[String, String], files: Seq[FileStatus]): Option[StructType]", "member" : "org.apache.spark.sql.execution.datasources.FileFormat.inferSchema", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html#inferSchema(sparkSession:org.apache.spark.sql.SparkSession,options:Map[String,String],files:Seq[org.apache.hadoop.fs.FileStatus]):Option[org.apache.spark.sql.types.StructType]", "kind" : "abstract def"}], "shortDescription" : "Trait of GeoParquetFileFormat defines a method for spatial predicate push down.", "trait" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetFileFormatBase.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData", "shortDescription" : "A case class that holds the metadata of GeoParquet file", "object" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html", "members_object" : [{"label" : "createCoveringColumnMetadata", "tail" : "(coveringColumnName: String, schema: StructType): Covering", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.createCoveringColumnMetadata", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#createCoveringColumnMetadata(coveringColumnName:String,schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.execution.datasources.parquet.Covering", "kind" : "def"}, {"label" : "toJson", "tail" : "(geoParquetMetadata: GeoParquetMetaData): String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.toJson", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#toJson(geoParquetMetadata:org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData):String", "kind" : "def"}, {"label" : "parseKeyValueMetaData", "tail" : "(keyValueMetaData: Map[String, String]): Option[GeoParquetMetaData]", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.parseKeyValueMetaData", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#parseKeyValueMetaData(keyValueMetaData:java.util.Map[String,String]):Option[org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData]", "kind" : "def"}, {"label" : "GEOPARQUET_COVERING_KEY", "tail" : ": String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.GEOPARQUET_COVERING_KEY", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#GEOPARQUET_COVERING_KEY:String", "kind" : "val"}, {"label" : "GEOPARQUET_CRS_KEY", "tail" : ": String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.GEOPARQUET_CRS_KEY", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#GEOPARQUET_CRS_KEY:String", "kind" : "val"}, {"label" : "GEOPARQUET_VERSION_KEY", "tail" : ": String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.GEOPARQUET_VERSION_KEY", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#GEOPARQUET_VERSION_KEY:String", "kind" : "val"}, {"label" : "VERSION", "tail" : ": String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.VERSION", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#VERSION:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData#<init>", "error" : "unsupported entity"}, {"label" : "columns", "tail" : ": Map[String, GeometryFieldMetaData]", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.columns", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#columns:Map[String,org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData]", "kind" : "val"}, {"label" : "primaryColumn", "tail" : ": String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.primaryColumn", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#primaryColumn:String", "kind" : "val"}, {"label" : "version", "tail" : ": Option[String]", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetMetaData.version", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#version:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetMetaData.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "simpleString", "tail" : "(): String", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter.simpleString", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#simpleString:String", "kind" : "abstract def"}, {"label" : "evaluate", "tail" : "(columns: Map[String, GeometryFieldMetaData]): Boolean", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter.evaluate", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html#evaluate(columns:Map[String,org.apache.spark.sql.execution.datasources.parquet.GeometryFieldMetaData]):Boolean", "kind" : "abstract def"}], "shortDescription" : "Filters containing spatial predicates such as ST_Within(geom, ST_GeomFromText(...)) will beconverted to GeoParquetSpatialFilter and get pushed down to GeoParquetFileFormat byorg.apache.spark.sql.sedona_sql.optimization.SpatialFilterPushDownForGeoParquet.", "object" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html", "members_object" : [{"label" : "LeafFilter", "tail" : "", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter.LeafFilter", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#LeafFilterextendsGeoParquetSpatialFilterwithProductwithSerializable", "kind" : "case class"}, {"label" : "OrFilter", "tail" : "", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter.OrFilter", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#OrFilterextendsGeoParquetSpatialFilterwithProductwithSerializable", "kind" : "case class"}, {"label" : "AndFilter", "tail" : "", "member" : "org.apache.spark.sql.execution.datasources.parquet.GeoParquetSpatialFilter.AndFilter", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#AndFilterextendsGeoParquetSpatialFilterwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/apache\/spark\/sql\/execution\/datasources\/parquet\/GeoParquetSpatialFilter.html", "kind" : "trait"}], "org.apache.spark.sql.sedona_sql.strategy.join" : [{"name" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newLeft: SparkPlan, newRight: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#withNewChildrenInternal(newLeft:org.apache.spark.sql.execution.SparkPlan,newRight:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "createResultProjection", "tail" : "(): (InternalRow) â‡’ InternalRow", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.createResultProjection", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#createResultProjection():org.apache.spark.sql.catalyst.InternalRow=>org.apache.spark.sql.catalyst.InternalRow", "kind" : "def"}, {"label" : "metrics", "tail" : ": Map[String, SQLMetric]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#metrics:scala.collection.immutable.Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "lazy val"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec#<init>", "error" : "unsupported entity"}, {"label" : "distance", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.distance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#distance:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "val"}, {"label" : "joinType", "tail" : ": JoinType", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.joinType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#joinType:org.apache.spark.sql.catalyst.plans.JoinType", "kind" : "val"}, {"label" : "windowJoinSide", "tail" : ": JoinSide", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.windowJoinSide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#windowJoinSide:org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "kind" : "val"}, {"label" : "indexBuildSide", "tail" : ": JoinSide", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.indexBuildSide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#indexBuildSide:org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "kind" : "val"}, {"label" : "streamShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.streamShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#streamShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "right", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "left", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastIndexJoinExec.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "doSpatialPartitioning", "tail" : "(dominantShapes: SpatialRDD[Geometry], followerShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#doSpatialPartitioning(dominantShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],followerShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastIndexJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastIndexJoinExec.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newLeft: SparkPlan, newRight: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#withNewChildrenInternal(newLeft:org.apache.spark.sql.execution.SparkPlan,newRight:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "getKNNJoinParams", "tail" : "(): JoinParams", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.getKNNJoinParams", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#getKNNJoinParams:org.apache.sedona.core.spatialOperator.JoinQuery.JoinParams", "kind" : "def"}, {"label" : "doSpatialPartitioning", "tail" : "(objectsShapes: SpatialRDD[Geometry], queryShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#doSpatialPartitioning(objectsShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],queryShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "rightToSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.rightToSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#rightToSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "leftToSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.leftToSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#leftToSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec#<init>", "error" : "unsupported entity"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "condition", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.condition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#condition:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "isGeography", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.isGeography", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#isGeography:Boolean", "kind" : "val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "val"}, {"label" : "useApproximate", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.useApproximate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#useApproximate:Boolean", "kind" : "val"}, {"label" : "k", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.k", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#k:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "joinType", "tail" : ": JoinType", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.joinType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#joinType:org.apache.spark.sql.catalyst.plans.JoinType", "kind" : "val"}, {"label" : "joinSide", "tail" : ": JoinSide", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.joinSide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#joinSide:org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "kind" : "val"}, {"label" : "rightShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.rightShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#rightShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "leftShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.leftShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#leftShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "right", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "left", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastObjectSideKNNJoinExec.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "joinedRddToRowRdd", "tail" : "(joinedRdd: RDD[(Geometry, Geometry)], swapped: Boolean): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.joinedRddToRowRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#joinedRddToRowRdd(joinedRdd:org.apache.spark.rdd.RDD[(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)],swapped:Boolean):org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "knnJoinPartitionNumOptimizer", "tail" : "(objectSidePartNum: Int, querySidePartNum: Int, objectSideCount: Long, numNeighbor: Int): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.knnJoinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#knnJoinPartitionNumOptimizer(objectSidePartNum:Int,querySidePartNum:Int,objectSideCount:Long,numNeighbor:Int):Int", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "metrics", "tail" : ": Map[String, SQLMetric]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "lazy val"}, {"label" : "querySide", "tail" : ": JoinSide", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.querySide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#querySide:org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "kind" : "val"}, {"label" : "broadcastJoin", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.broadcastJoin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#broadcastJoin:Boolean", "kind" : "val"}, {"label" : "joinPartitionNumOptimizer", "tail" : "(dominantSidePartNum: Int, followerSidePartNum: Int, dominantSideCount: Long): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.joinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#joinPartitionNumOptimizer(dominantSidePartNum:Int,followerSidePartNum:Int,dominantSideCount:Long):Int", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastObjectSideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastObjectSideKNNJoinExec.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newLeft: SparkPlan, newRight: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#withNewChildrenInternal(newLeft:org.apache.spark.sql.execution.SparkPlan,newRight:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "getKNNJoinParams", "tail" : "(): JoinParams", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.getKNNJoinParams", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#getKNNJoinParams:org.apache.sedona.core.spatialOperator.JoinQuery.JoinParams", "kind" : "def"}, {"label" : "doSpatialPartitioning", "tail" : "(objectsShapes: SpatialRDD[Geometry], queryShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#doSpatialPartitioning(objectsShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],queryShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "rightToSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, projection: Option[Seq[Expression]]): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.rightToSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#rightToSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,projection:Option[Seq[org.apache.spark.sql.catalyst.expressions.Expression]]):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "leftToSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, projection: Option[Seq[Expression]]): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.leftToSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#leftToSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,projection:Option[Seq[org.apache.spark.sql.catalyst.expressions.Expression]]):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec#<init>", "error" : "unsupported entity"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "condition", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.condition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#condition:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "isGeography", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.isGeography", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#isGeography:Boolean", "kind" : "val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "val"}, {"label" : "useApproximate", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.useApproximate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#useApproximate:Boolean", "kind" : "val"}, {"label" : "k", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.k", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#k:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "joinType", "tail" : ": JoinType", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.joinType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#joinType:org.apache.spark.sql.catalyst.plans.JoinType", "kind" : "val"}, {"label" : "joinSide", "tail" : ": JoinSide", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.joinSide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#joinSide:org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "kind" : "val"}, {"label" : "rightShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.rightShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#rightShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "leftShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.leftShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#leftShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "right", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "left", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.BroadcastQuerySideKNNJoinExec.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "joinedRddToRowRdd", "tail" : "(joinedRdd: RDD[(Geometry, Geometry)], swapped: Boolean): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.joinedRddToRowRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#joinedRddToRowRdd(joinedRdd:org.apache.spark.rdd.RDD[(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)],swapped:Boolean):org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "knnJoinPartitionNumOptimizer", "tail" : "(objectSidePartNum: Int, querySidePartNum: Int, objectSideCount: Long, numNeighbor: Int): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.knnJoinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#knnJoinPartitionNumOptimizer(objectSidePartNum:Int,querySidePartNum:Int,objectSideCount:Long,numNeighbor:Int):Int", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "metrics", "tail" : ": Map[String, SQLMetric]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "lazy val"}, {"label" : "querySide", "tail" : ": JoinSide", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.querySide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#querySide:org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "kind" : "val"}, {"label" : "broadcastJoin", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.broadcastJoin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#broadcastJoin:Boolean", "kind" : "val"}, {"label" : "joinPartitionNumOptimizer", "tail" : "(dominantSidePartNum: Int, followerSidePartNum: Int, dominantSideCount: Long): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.joinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#joinPartitionNumOptimizer(dominantSidePartNum:Int,followerSidePartNum:Int,dominantSideCount:Long):Int", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): BroadcastQuerySideKNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/BroadcastQuerySideKNNJoinExec.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec", "shortDescription" : "Distance joins requires matching geometries to be in the same partition, despite notnecessarily overlapping.", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newLeft: SparkPlan, newRight: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#withNewChildrenInternal(newLeft:org.apache.spark.sql.execution.SparkPlan,newRight:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec#<init>", "error" : "unsupported entity"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "isGeography", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.isGeography", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#isGeography:Boolean", "kind" : "val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "val"}, {"label" : "distanceBoundToLeft", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.distanceBoundToLeft", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#distanceBoundToLeft:Boolean", "kind" : "val"}, {"label" : "distance", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.distance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#distance:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "rightShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.rightShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#rightShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "leftShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.leftShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#leftShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "right", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "left", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.DistanceJoinExec.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "joinPartitionNumOptimizer", "tail" : "(dominantSidePartNum: Int, followerSidePartNum: Int, dominantSideCount: Long): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.joinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#joinPartitionNumOptimizer(dominantSidePartNum:Int,followerSidePartNum:Int,dominantSideCount:Long):Int", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "doSpatialPartitioning", "tail" : "(dominantShapes: SpatialRDD[Geometry], followerShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#doSpatialPartitioning(dominantShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],followerShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "metrics", "tail" : "(): Map[String, SQLMetric]", "member" : "org.apache.spark.sql.execution.SparkPlan.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): DistanceJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/DistanceJoinExec.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinedGeometry", "shortDescription" : "Utility functions for generating geometries for spatial join.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html", "members_object" : [{"label" : "geometryToExpandedEnvelope", "tail" : "(geom: Geometry, distance: Double, isGeography: Boolean): Geometry", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinedGeometry.geometryToExpandedEnvelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#geometryToExpandedEnvelope(geom:org.locationtech.jts.geom.Geometry,distance:Double,isGeography:Boolean):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometry$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinedGeometryRaster", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html", "members_object" : [{"label" : "geometryToWGS84Envelope", "tail" : "(geom: Geometry): Geometry", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinedGeometryRaster.geometryToWGS84Envelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#geometryToWGS84Envelope(geom:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "rasterToWGS84Envelope", "tail" : "(raster: GridCoverage2D): Geometry", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinedGeometryRaster.rasterToWGS84Envelope", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#rasterToWGS84Envelope(raster:org.geotools.coverage.grid.GridCoverage2D):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinedGeometryRaster$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection#<init>", "error" : "unsupported entity"}, {"label" : "distance", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection.distance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#distance:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "isGeography", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection.isGeography", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#isGeography:Boolean", "kind" : "val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "val"}, {"label" : "rightShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection.rightShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#rightShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "leftShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection.leftShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#leftShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "right", "tail" : ": LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#right:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "val"}, {"label" : "left", "tail" : ": LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetection.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#left:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetection.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetector", "shortDescription" : "Plans RangeJoinExec for inner joins on spatial relationships ST_Contains(a, b) andST_Intersects(a, b).", "members_class" : [{"label" : "apply", "tail" : "(plan: LogicalPlan): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetector.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#apply(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinQueryDetector#<init>", "error" : "unsupported entity"}, {"label" : "planLater", "tail" : "(plan: LogicalPlan): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkStrategy.planLater", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#planLater(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinQueryDetector.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/JoinSide.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec", "shortDescription" : "KNN \/ AKNN joins requires target geometries (objects) to be in the same partition as the querygeometries.", "members_case class" : [{"label" : "getKNNJoinParams", "tail" : "(): JoinParams", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.getKNNJoinParams", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#getKNNJoinParams:org.apache.sedona.core.spatialOperator.JoinQuery.JoinParams", "kind" : "def"}, {"label" : "doSpatialPartitioning", "tail" : "(objectsShapes: SpatialRDD[Geometry], queryShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#doSpatialPartitioning(objectsShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],queryShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newLeft: SparkPlan, newRight: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#withNewChildrenInternal(newLeft:org.apache.spark.sql.execution.SparkPlan,newRight:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "rightToSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, projection: Option[Seq[Expression]]): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.rightToSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#rightToSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,projection:Option[Seq[org.apache.spark.sql.catalyst.expressions.Expression]]):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "leftToSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, projection: Option[Seq[Expression]]): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.leftToSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#leftToSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,projection:Option[Seq[org.apache.spark.sql.catalyst.expressions.Expression]]):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec#<init>", "error" : "unsupported entity"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "condition", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.condition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#condition:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "isGeography", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.isGeography", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#isGeography:Boolean", "kind" : "val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "val"}, {"label" : "k", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.k", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#k:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "joinType", "tail" : ": JoinType", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.joinType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#joinType:org.apache.spark.sql.catalyst.plans.JoinType", "kind" : "val"}, {"label" : "rightShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.rightShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#rightShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "leftShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.leftShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#leftShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "right", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "left", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.KNNJoinExec.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "joinedRddToRowRdd", "tail" : "(joinedRdd: RDD[(Geometry, Geometry)], swapped: Boolean): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.joinedRddToRowRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#joinedRddToRowRdd(joinedRdd:org.apache.spark.rdd.RDD[(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)],swapped:Boolean):org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "knnJoinPartitionNumOptimizer", "tail" : "(objectSidePartNum: Int, querySidePartNum: Int, objectSideCount: Long, numNeighbor: Int): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.knnJoinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#knnJoinPartitionNumOptimizer(objectSidePartNum:Int,querySidePartNum:Int,objectSideCount:Long,numNeighbor:Int):Int", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "metrics", "tail" : ": Map[String, SQLMetric]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "lazy val"}, {"label" : "querySide", "tail" : ": JoinSide", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.querySide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#querySide:org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "kind" : "val"}, {"label" : "broadcastJoin", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.broadcastJoin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#broadcastJoin:Boolean", "kind" : "val"}, {"label" : "joinPartitionNumOptimizer", "tail" : "(dominantSidePartNum: Int, followerSidePartNum: Int, dominantSideCount: Long): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.joinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#joinPartitionNumOptimizer(dominantSidePartNum:Int,followerSidePartNum:Int,dominantSideCount:Long):Int", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): KNNJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/KNNJoinExec.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.LeftSide", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/LeftSide$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.OptimizableJoinCondition", "shortDescription" : "", "members_case class" : [{"label" : "unapply", "tail" : "(expression: Expression): Option[(Expression, Option[Expression])]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.OptimizableJoinCondition.unapply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#unapply(expression:org.apache.spark.sql.catalyst.expressions.Expression):Option[(org.apache.spark.sql.catalyst.expressions.Expression,Option[org.apache.spark.sql.catalyst.expressions.Expression])]", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.OptimizableJoinCondition#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.OptimizableJoinCondition.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#right:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "val"}, {"label" : "left", "tail" : ": LogicalPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.OptimizableJoinCondition.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#left:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/OptimizableJoinCondition.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec", "shortDescription" : "ST_Contains(left, right) - left contains right or ST_Intersects(left, right) - left and rightintersect", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newLeft: SparkPlan, newRight: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#withNewChildrenInternal(newLeft:org.apache.spark.sql.execution.SparkPlan,newRight:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec#<init>", "error" : "unsupported entity"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "val"}, {"label" : "rightShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec.rightShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#rightShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "leftShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec.leftShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#leftShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "right", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "left", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.RangeJoinExec.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "joinPartitionNumOptimizer", "tail" : "(dominantSidePartNum: Int, followerSidePartNum: Int, dominantSideCount: Long): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.joinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#joinPartitionNumOptimizer(dominantSidePartNum:Int,followerSidePartNum:Int,dominantSideCount:Long):Int", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "doSpatialPartitioning", "tail" : "(dominantShapes: SpatialRDD[Geometry], followerShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#doSpatialPartitioning(dominantShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],followerShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaBinaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "metrics", "tail" : "(): Map[String, SQLMetric]", "member" : "org.apache.spark.sql.execution.SparkPlan.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): RangeJoinExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RangeJoinExec.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.RightSide", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/RightSide$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec", "shortDescription" : "", "members_case class" : [{"label" : "withNewChildInternal", "tail" : "(newChild: SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.withNewChildInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#withNewChildInternal(newChild:org.apache.spark.sql.execution.SparkPlan):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.doExecuteBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#doExecuteBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec#<init>", "error" : "unsupported entity"}, {"label" : "distance", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.distance", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#distance:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "isGeography", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.isGeography", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#isGeography:Boolean", "kind" : "val"}, {"label" : "isRasterPredicate", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.isRasterPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#isRasterPredicate:Boolean", "kind" : "val"}, {"label" : "indexType", "tail" : ": IndexType", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.indexType", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#indexType:org.apache.sedona.core.enums.IndexType", "kind" : "val"}, {"label" : "shape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.shape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#shape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "child", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.SpatialIndexExec.child", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#child:org.apache.spark.sql.execution.SparkPlan", "kind" : "val"}, {"label" : "doSpatialPartitioning", "tail" : "(dominantShapes: SpatialRDD[Geometry], followerShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#doSpatialPartitioning(dominantShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],followerShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaUnaryExecNode.withNewChildrenInternal", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.execution.SparkPlan]):org.apache.spark.sql.execution.SparkPlan", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.sedona_sql.execution.SedonaUnaryExecNode.children", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#children:Seq[org.apache.spark.sql.execution.SparkPlan]", "kind" : "final def"}, {"label" : "cleanupResources", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.cleanupResources", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#cleanupResources():Unit", "kind" : "def"}, {"label" : "executeTail", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTail", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeTail(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeTake", "tail" : "(n: Int): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeTake", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeTake(n:Int):Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollectPublic", "tail" : "(): Array[Row]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollectPublic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeCollectPublic():Array[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "executeToIterator", "tail" : "(): Iterator[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeToIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeToIterator():Iterator[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "executeCollect", "tail" : "(): Array[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeCollect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeCollect():Array[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "toRowBased", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.toRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#toRowBased:org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "doExecuteWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#doExecuteWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "doExecuteColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.doExecuteColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#doExecuteColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "doPrepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.doPrepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#doPrepare():Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepare", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#prepare():Unit", "kind" : "final def"}, {"label" : "waitForSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.waitForSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#waitForSubqueries():Unit", "kind" : "def"}, {"label" : "prepareSubqueries", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.prepareSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#prepareSubqueries():Unit", "kind" : "def"}, {"label" : "executeQuery", "tail" : "(query: â‡’ T): T", "member" : "org.apache.spark.sql.execution.SparkPlan.executeQuery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeQuery[T](query:=>T):T", "kind" : "final def"}, {"label" : "executeWrite", "tail" : "(writeFilesSpec: WriteFilesSpec): RDD[WriterCommitMessage]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeWrite", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeWrite(writeFilesSpec:org.apache.spark.sql.execution.datasources.WriteFilesSpec):org.apache.spark.rdd.RDD[org.apache.spark.sql.connector.write.WriterCommitMessage]", "kind" : "def"}, {"label" : "executeColumnar", "tail" : "(): RDD[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeColumnar():org.apache.spark.rdd.RDD[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "final def"}, {"label" : "executeBroadcast", "tail" : "(): Broadcast[T]", "member" : "org.apache.spark.sql.execution.SparkPlan.executeBroadcast", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#executeBroadcast[T]():org.apache.spark.broadcast.Broadcast[T]", "kind" : "final def"}, {"label" : "execute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.execution.SparkPlan.execute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#execute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "final def"}, {"label" : "requiredChildOrdering", "tail" : "(): Seq[Seq[SortOrder]]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#requiredChildOrdering:Seq[Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]]", "kind" : "def"}, {"label" : "requiredChildDistribution", "tail" : "(): Seq[Distribution]", "member" : "org.apache.spark.sql.execution.SparkPlan.requiredChildDistribution", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#requiredChildDistribution:Seq[org.apache.spark.sql.catalyst.plans.physical.Distribution]", "kind" : "def"}, {"label" : "outputPartitioning", "tail" : "(): Partitioning", "member" : "org.apache.spark.sql.execution.SparkPlan.outputPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#outputPartitioning:org.apache.spark.sql.catalyst.plans.physical.Partitioning", "kind" : "def"}, {"label" : "longMetric", "tail" : "(name: String): SQLMetric", "member" : "org.apache.spark.sql.execution.SparkPlan.longMetric", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#longMetric(name:String):org.apache.spark.sql.execution.metric.SQLMetric", "kind" : "def"}, {"label" : "resetMetrics", "tail" : "(): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.resetMetrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#resetMetrics():Unit", "kind" : "def"}, {"label" : "metrics", "tail" : "(): Map[String, SQLMetric]", "member" : "org.apache.spark.sql.execution.SparkPlan.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "def"}, {"label" : "setLogicalLink", "tail" : "(logicalPlan: LogicalPlan): Unit", "member" : "org.apache.spark.sql.execution.SparkPlan.setLogicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#setLogicalLink(logicalPlan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Unit", "kind" : "def"}, {"label" : "logicalLink", "tail" : "(): Option[LogicalPlan]", "member" : "org.apache.spark.sql.execution.SparkPlan.logicalLink", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logicalLink:Option[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): SparkPlan", "member" : "org.apache.spark.sql.execution.SparkPlan.makeCopy", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#makeCopy(newArgs:Array[AnyRef]):org.apache.spark.sql.execution.SparkPlan", "kind" : "def"}, {"label" : "vectorTypes", "tail" : "(): Option[Seq[String]]", "member" : "org.apache.spark.sql.execution.SparkPlan.vectorTypes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#vectorTypes:Option[Seq[String]]", "kind" : "def"}, {"label" : "supportsColumnar", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsColumnar", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#supportsColumnar:Boolean", "kind" : "def"}, {"label" : "supportsRowBased", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.SparkPlan.supportsRowBased", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#supportsRowBased:Boolean", "kind" : "def"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.SparkPlan.id", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#id:Int", "kind" : "val"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.execution.SparkPlan.conf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.sql.execution.SparkPlan.sparkContext", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "session", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.SparkPlan.session", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#session:org.apache.spark.sql.SparkSession", "kind" : "final val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#logName:String", "kind" : "def"}, {"label" : "allAttributes", "tail" : ": AttributeSeq", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.allAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#allAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSeq", "kind" : "lazy val"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.semanticHash", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#semanticHash():Int", "kind" : "final def"}, {"label" : "sameResult", "tail" : "(other: SparkPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.sameResult", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#sameResult(other:PlanType):Boolean", "kind" : "final def"}, {"label" : "doCanonicalize", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.doCanonicalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#doCanonicalize():PlanType", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.canonicalized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#canonicalized:PlanType", "kind" : "final lazy val"}, {"label" : "isCanonicalizedPlan", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.isCanonicalizedPlan", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#isCanonicalizedPlan:Boolean", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[QueryPlan[_]]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.innerChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#innerChildren:Seq[org.apache.spark.sql.catalyst.plans.QueryPlan[_]]", "kind" : "def"}, {"label" : "collectWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.collectWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#collectWithSubqueries[B](f:PartialFunction[PlanType,B]):Seq[B]", "kind" : "def"}, {"label" : "transformDownWithSubqueriesAndPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueriesAndPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformDownWithSubqueriesAndPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformDownWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformDownWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformDownWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformUpWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformUpWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "transformWithSubqueries", "tail" : "(f: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformWithSubqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformWithSubqueries(f:PartialFunction[PlanType,PlanType]):PlanType", "kind" : "def"}, {"label" : "subqueriesAll", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueriesAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#subqueriesAll:Seq[PlanType]", "kind" : "def"}, {"label" : "subqueries", "tail" : ": Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.subqueries", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#subqueries:Seq[PlanType]", "kind" : "lazy val"}, {"label" : "formattedNodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.formattedNodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#formattedNodeName:String", "kind" : "def"}, {"label" : "verboseStringWithOperatorId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseStringWithOperatorId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#verboseStringWithOperatorId():String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleStringWithNodeId", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#verboseString(maxFields:Int):String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.simpleString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "statePrefix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.statePrefix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#statePrefix:String", "kind" : "def"}, {"label" : "printSchema", "tail" : "(): Unit", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.printSchema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#printSchema():Unit", "kind" : "def"}, {"label" : "schemaString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schemaString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#schemaString:String", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.schema", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "updateOuterReferencesInSubquery", "tail" : "(plan: SparkPlan, attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.updateOuterReferencesInSubquery", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#updateOuterReferencesInSubquery(plan:PlanType,attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "rewriteAttrs", "tail" : "(attrMap: AttributeMap[Attribute]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.rewriteAttrs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#rewriteAttrs(attrMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Attribute]):PlanType", "kind" : "def"}, {"label" : "transformUpWithNewOutput", "tail" : "(rule: PartialFunction[SparkPlan, (SparkPlan, Seq[(Attribute, Attribute)])], skipCond: (SparkPlan) â‡’ Boolean, canGetOutput: (SparkPlan) â‡’ Boolean): SparkPlan", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformUpWithNewOutput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformUpWithNewOutput(rule:PartialFunction[PlanType,(PlanType,Seq[(org.apache.spark.sql.catalyst.expressions.Attribute,org.apache.spark.sql.catalyst.expressions.Attribute)])],skipCond:PlanType=>Boolean,canGetOutput:PlanType=>Boolean):PlanType", "kind" : "def"}, {"label" : "expressions", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.expressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "transformAllExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformAllExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformAllExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformAllExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformAllExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "mapExpressions", "tail" : "(f: (Expression) â‡’ Expression): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#mapExpressions(f:org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformExpressionsUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsUp", "tail" : "(rule: PartialFunction[Expression, Expression]): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformExpressionsUp(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformExpressionsDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsDown", "tail" : "(rule: PartialFunction[Expression, Expression]): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformExpressionsDown(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressionsWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformExpressionsWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "transformExpressions", "tail" : "(rule: PartialFunction[Expression, Expression]): SpatialIndexExec.this.type", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformExpressions(rule:PartialFunction[org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression]):QueryPlan.this.type", "kind" : "def"}, {"label" : "missingInput", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.missingInput", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#missingInput:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "final def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.deterministic", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "references", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.references", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "producedAttributes", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.producedAttributes", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#producedAttributes:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "inputSet", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.inputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#inputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.treePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "outputOrdering", "tail" : "(): Seq[SortOrder]", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputOrdering", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#outputOrdering:Seq[org.apache.spark.sql.catalyst.expressions.SortOrder]", "kind" : "def"}, {"label" : "outputSet", "tail" : ": AttributeSet", "member" : "org.apache.spark.sql.catalyst.plans.QueryPlan.outputSet", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#treeString:String", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#toString():String", "kind" : "def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#clone():BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (SparkPlan) â‡’ SparkPlan): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[SparkPlan, Seq[SparkPlan]]): Stream[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (SparkPlan) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(SparkPlan, SparkPlan), SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[SparkPlan, SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[SparkPlan]): SparkPlan", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SparkPlan, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SparkPlan, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SparkPlan) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SparkPlan) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SparkPlan) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (SparkPlan) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (SparkPlan) â‡’ Boolean): Option[SparkPlan]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: SparkPlan): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/SpatialIndexExec.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase", "members_trait" : [{"label" : "doSpatialPartitioning", "tail" : "(dominantShapes: SpatialRDD[Geometry], followerShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#doSpatialPartitioning(dominantShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],followerShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryBase.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec", "members_trait" : [{"label" : "joinPartitionNumOptimizer", "tail" : "(dominantSidePartNum: Int, followerSidePartNum: Int, dominantSideCount: Long): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.joinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#joinPartitionNumOptimizer(dominantSidePartNum:Int,followerSidePartNum:Int,dominantSideCount:Long):Int", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "doSpatialPartitioning", "tail" : "(dominantShapes: SpatialRDD[Geometry], followerShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#doSpatialPartitioning(dominantShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],followerShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "abstract val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "abstract val"}, {"label" : "rightShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.rightShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#rightShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "abstract val"}, {"label" : "leftShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.leftShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#leftShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "abstract val"}, {"label" : "right", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract val"}, {"label" : "left", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitJoinQueryExec.html", "kind" : "trait"}, {"name" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec", "members_trait" : [{"label" : "joinedRddToRowRdd", "tail" : "(joinedRdd: RDD[(Geometry, Geometry)], swapped: Boolean): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.joinedRddToRowRdd", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#joinedRddToRowRdd(joinedRdd:org.apache.spark.rdd.RDD[(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)],swapped:Boolean):org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "knnJoinPartitionNumOptimizer", "tail" : "(objectSidePartNum: Int, querySidePartNum: Int, objectSideCount: Long, numNeighbor: Int): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.knnJoinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#knnJoinPartitionNumOptimizer(objectSidePartNum:Int,querySidePartNum:Int,objectSideCount:Long,numNeighbor:Int):Int", "kind" : "def"}, {"label" : "doExecute", "tail" : "(): RDD[InternalRow]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.doExecute", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#doExecute():org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "metrics", "tail" : ": Map[String, SQLMetric]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.metrics", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#metrics:Map[String,org.apache.spark.sql.execution.metric.SQLMetric]", "kind" : "lazy val"}, {"label" : "querySide", "tail" : ": JoinSide", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.querySide", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#querySide:org.apache.spark.sql.sedona_sql.strategy.join.JoinSide", "kind" : "val"}, {"label" : "broadcastJoin", "tail" : ": Boolean", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.broadcastJoin", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#broadcastJoin:Boolean", "kind" : "val"}, {"label" : "joinPartitionNumOptimizer", "tail" : "(dominantSidePartNum: Int, followerSidePartNum: Int, dominantSideCount: Long): Int", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.joinPartitionNumOptimizer", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#joinPartitionNumOptimizer(dominantSidePartNum:Int,followerSidePartNum:Int,dominantSideCount:Long):Int", "kind" : "def"}, {"label" : "output", "tail" : "(): Seq[Attribute]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.output", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "doSpatialPartitioning", "tail" : "(dominantShapes: SpatialRDD[Geometry], followerShapes: SpatialRDD[Geometry], numPartitions: Integer, sedonaConf: SedonaConf): Unit", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.doSpatialPartitioning", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#doSpatialPartitioning(dominantShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],followerShapes:org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],numPartitions:Integer,sedonaConf:org.apache.sedona.core.utils.SedonaConf):Unit", "kind" : "def"}, {"label" : "toExpandedEnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression, boundRadius: Expression, isGeography: Boolean): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toExpandedEnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#toExpandedEnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression,boundRadius:org.apache.spark.sql.catalyst.expressions.Expression,isGeography:Boolean):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toWGS84EnvelopeRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toWGS84EnvelopeRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#toWGS84EnvelopeRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRDD", "tail" : "(rdd: RDD[UnsafeRow], shapeExpression: Expression): SpatialRDD[Geometry]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRDD", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#toSpatialRDD(rdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],shapeExpression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"label" : "toSpatialRddPair", "tail" : "(leftRdd: RDD[UnsafeRow], leftShapeExpr: Expression, rightRdd: RDD[UnsafeRow], rightShapeExpr: Expression): (SpatialRDD[Geometry], SpatialRDD[Geometry])", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryBase.toSpatialRddPair", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#toSpatialRddPair(leftRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],leftShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression,rightRdd:org.apache.spark.rdd.RDD[org.apache.spark.sql.catalyst.expressions.UnsafeRow],rightShapeExpr:org.apache.spark.sql.catalyst.expressions.Expression):(org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry],org.apache.sedona.core.spatialRDD.SpatialRDD[org.locationtech.jts.geom.Geometry])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getKNNJoinParams", "tail" : "(): JoinParams", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.getKNNJoinParams", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#getKNNJoinParams:org.apache.sedona.core.spatialOperator.JoinQuery.JoinParams", "kind" : "abstract def"}, {"label" : "extraCondition", "tail" : ": Option[Expression]", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.extraCondition", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#extraCondition:Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "abstract val"}, {"label" : "spatialPredicate", "tail" : ": SpatialPredicate", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.spatialPredicate", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#spatialPredicate:org.apache.sedona.core.spatialOperator.SpatialPredicate", "kind" : "abstract val"}, {"label" : "rightShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.rightShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#rightShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "abstract val"}, {"label" : "leftShape", "tail" : ": Expression", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.leftShape", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#leftShape:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "abstract val"}, {"label" : "right", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.right", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#right:org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract val"}, {"label" : "left", "tail" : ": SparkPlan", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitJoinQueryExec.left", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html#left:org.apache.spark.sql.execution.SparkPlan", "kind" : "abstract val"}], "shortDescription" : "TraitKNNJoinQueryExec is a trait that extends the TraitJoinQueryExec trait and provides thenecessary functionality to execute a KNN join operation.", "object" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html", "members_object" : [{"label" : "counter", "tail" : ": AtomicLong", "member" : "org.apache.spark.sql.sedona_sql.strategy.join.TraitKNNJoinQueryExec.counter", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#counter:java.util.concurrent.atomic.AtomicLong", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/apache\/spark\/sql\/sedona_sql\/strategy\/join\/TraitKNNJoinQueryExec.html", "kind" : "trait"}], "org.apache.sedona.sql.UDT" : [{"name" : "org.apache.sedona.sql.UDT.UdtRegistrator", "shortDescription" : "", "object" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html", "members_object" : [{"label" : "registerAll", "tail" : "(): Unit", "member" : "org.apache.sedona.sql.UDT.UdtRegistrator.registerAll", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#registerAll():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/sql\/UDT\/UdtRegistrator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.sedona.python.wrapper.translation" : [{"name" : "org.apache.sedona.python.wrapper.translation.CircleSerializer", "shortDescription" : "", "members_case class" : [{"label" : "serialize", "tail" : "(): Array[Byte]", "member" : "org.apache.sedona.python.wrapper.translation.CircleSerializer.serialize", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#serialize:Array[Byte]", "kind" : "def"}, {"member" : "org.apache.sedona.python.wrapper.translation.CircleSerializer#<init>", "error" : "unsupported entity"}, {"label" : "geometry", "tail" : ": Circle", "member" : "org.apache.sedona.python.wrapper.translation.CircleSerializer.geometry", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#geometry:org.apache.sedona.common.geometryObjects.Circle", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/python\/wrapper\/translation\/CircleSerializer.html", "kind" : "case class"}, {"name" : "org.apache.sedona.python.wrapper.translation.GeometrySeqToPythonConverter", "shortDescription" : "", "members_case class" : [{"label" : "translateToPython", "tail" : "(): Array[Array[Byte]]", "member" : "org.apache.sedona.python.wrapper.translation.GeometrySeqToPythonConverter.translateToPython", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#translateToPython:Array[Array[Byte]]", "kind" : "def"}, {"member" : "org.apache.sedona.python.wrapper.translation.GeometrySeqToPythonConverter#<init>", "error" : "unsupported entity"}, {"label" : "geometrySerializer", "tail" : ": PythonGeometrySerializer", "member" : "org.apache.sedona.python.wrapper.translation.GeometrySeqToPythonConverter.geometrySerializer", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#geometrySerializer:org.apache.sedona.python.wrapper.translation.PythonGeometrySerializer", "kind" : "val"}, {"label" : "spatialData", "tail" : ": Seq[Geometry]", "member" : "org.apache.sedona.python.wrapper.translation.GeometrySeqToPythonConverter.spatialData", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#spatialData:Seq[org.locationtech.jts.geom.Geometry]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySeqToPythonConverter.html", "kind" : "case class"}, {"name" : "org.apache.sedona.python.wrapper.translation.GeometrySerializer", "shortDescription" : "", "members_case class" : [{"label" : "serialize", "tail" : "(): Array[Byte]", "member" : "org.apache.sedona.python.wrapper.translation.GeometrySerializer.serialize", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#serialize:Array[Byte]", "kind" : "def"}, {"member" : "org.apache.sedona.python.wrapper.translation.GeometrySerializer#<init>", "error" : "unsupported entity"}, {"label" : "geometry", "tail" : ": Geometry", "member" : "org.apache.sedona.python.wrapper.translation.GeometrySerializer.geometry", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#geometry:org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/python\/wrapper\/translation\/GeometrySerializer.html", "kind" : "case class"}, {"name" : "org.apache.sedona.python.wrapper.translation.PythonRDDToJavaConverter", "shortDescription" : "", "members_case class" : [{"label" : "translateToJava", "tail" : "(): JavaRDD[Geometry]", "member" : "org.apache.sedona.python.wrapper.translation.PythonRDDToJavaConverter.translateToJava", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#translateToJava:org.apache.spark.api.java.JavaRDD[org.locationtech.jts.geom.Geometry]", "kind" : "def"}, {"member" : "org.apache.sedona.python.wrapper.translation.PythonRDDToJavaConverter#<init>", "error" : "unsupported entity"}, {"label" : "geometrySerializer", "tail" : ": PythonGeometrySerializer", "member" : "org.apache.sedona.python.wrapper.translation.PythonRDDToJavaConverter.geometrySerializer", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#geometrySerializer:org.apache.sedona.python.wrapper.translation.PythonGeometrySerializer", "kind" : "val"}, {"label" : "javaRDD", "tail" : ": JavaRDD[Array[Byte]]", "member" : "org.apache.sedona.python.wrapper.translation.PythonRDDToJavaConverter.javaRDD", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#javaRDD:org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/sedona\/python\/wrapper\/translation\/PythonRDDToJavaConverter.html", "kind" : "case class"}]};