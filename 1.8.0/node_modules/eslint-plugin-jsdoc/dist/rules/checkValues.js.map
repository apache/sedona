{"version":3,"file":"checkValues.js","names":["_iterateJsdoc","_interopRequireDefault","require","_semver","_spdxExpressionParse","obj","__esModule","default","allowedKinds","Set","_default","exports","iterateJsdoc","utils","report","context","options","allowedLicenses","allowedAuthors","numericOnlyVariation","licensePattern","forEachPreferredTag","jsdocParameter","targetTagName","version","getTagDescription","trim","semver","valid","kind","has","join","variation","Number","isInteger","licenseRegex","getRegexFromString","matches","matchAll","positiveMatch","match","license","includes","spdxExpressionParse","author","iterateAllJsdocs","meta","docs","description","url","schema","additionalProperties","properties","items","type","anyOf","module"],"sources":["../../src/rules/checkValues.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc.js';\nimport semver from 'semver';\nimport spdxExpressionParse from 'spdx-expression-parse';\n\nconst allowedKinds = new Set([\n  'class',\n  'constant',\n  'event',\n  'external',\n  'file',\n  'function',\n  'member',\n  'mixin',\n  'module',\n  'namespace',\n  'typedef',\n]);\n\nexport default iterateJsdoc(({\n  utils,\n  report,\n  context,\n}) => {\n  const options = context.options[0] || {};\n  const {\n    allowedLicenses = null,\n    allowedAuthors = null,\n    numericOnlyVariation = false,\n    licensePattern = '/([^\\n\\r]*)/gu',\n  } = options;\n\n  utils.forEachPreferredTag('version', (jsdocParameter, targetTagName) => {\n    const version = /** @type {string} */ (\n      utils.getTagDescription(jsdocParameter)\n    ).trim();\n    if (!version) {\n      report(\n        `Missing JSDoc @${targetTagName} value.`,\n        null,\n        jsdocParameter,\n      );\n    } else if (!semver.valid(version)) {\n      report(\n        `Invalid JSDoc @${targetTagName}: \"${utils.getTagDescription(jsdocParameter)}\".`,\n        null,\n        jsdocParameter,\n      );\n    }\n  });\n\n  utils.forEachPreferredTag('kind', (jsdocParameter, targetTagName) => {\n    const kind = /** @type {string} */ (\n      utils.getTagDescription(jsdocParameter)\n    ).trim();\n    if (!kind) {\n      report(\n        `Missing JSDoc @${targetTagName} value.`,\n        null,\n        jsdocParameter,\n      );\n    } else if (!allowedKinds.has(kind)) {\n      report(\n        `Invalid JSDoc @${targetTagName}: \"${utils.getTagDescription(jsdocParameter)}\"; ` +\n        `must be one of: ${[\n          ...allowedKinds,\n        ].join(', ')}.`,\n        null,\n        jsdocParameter,\n      );\n    }\n  });\n\n  if (numericOnlyVariation) {\n    utils.forEachPreferredTag('variation', (jsdocParameter, targetTagName) => {\n      const variation = /** @type {string} */ (\n        utils.getTagDescription(jsdocParameter)\n      ).trim();\n      if (!variation) {\n        report(\n          `Missing JSDoc @${targetTagName} value.`,\n          null,\n          jsdocParameter,\n        );\n      } else if (\n        !Number.isInteger(Number(variation)) ||\n        Number(variation) <= 0\n      ) {\n        report(\n          `Invalid JSDoc @${targetTagName}: \"${utils.getTagDescription(jsdocParameter)}\".`,\n          null,\n          jsdocParameter,\n        );\n      }\n    });\n  }\n\n  utils.forEachPreferredTag('since', (jsdocParameter, targetTagName) => {\n    const version = /** @type {string} */ (\n      utils.getTagDescription(jsdocParameter)\n    ).trim();\n    if (!version) {\n      report(\n        `Missing JSDoc @${targetTagName} value.`,\n        null,\n        jsdocParameter,\n      );\n    } else if (!semver.valid(version)) {\n      report(\n        `Invalid JSDoc @${targetTagName}: \"${utils.getTagDescription(jsdocParameter)}\".`,\n        null,\n        jsdocParameter,\n      );\n    }\n  });\n  utils.forEachPreferredTag('license', (jsdocParameter, targetTagName) => {\n    const licenseRegex = utils.getRegexFromString(licensePattern, 'g');\n    const matches = /** @type {string} */ (\n      utils.getTagDescription(jsdocParameter)\n    ).matchAll(licenseRegex);\n    let positiveMatch = false;\n    for (const match of matches) {\n      const license = match[1] || match[0];\n      if (license) {\n        positiveMatch = true;\n      }\n\n      if (!license.trim()) {\n        // Avoid reporting again as empty match\n        if (positiveMatch) {\n          return;\n        }\n\n        report(\n          `Missing JSDoc @${targetTagName} value.`,\n          null,\n          jsdocParameter,\n        );\n      } else if (allowedLicenses) {\n        if (allowedLicenses !== true && !allowedLicenses.includes(license)) {\n          report(\n            `Invalid JSDoc @${targetTagName}: \"${license}\"; expected one of ${allowedLicenses.join(', ')}.`,\n            null,\n            jsdocParameter,\n          );\n        }\n      } else {\n        try {\n          spdxExpressionParse(license);\n        } catch {\n          report(\n            `Invalid JSDoc @${targetTagName}: \"${license}\"; expected SPDX expression: https://spdx.org/licenses/.`,\n            null,\n            jsdocParameter,\n          );\n        }\n      }\n    }\n  });\n\n  utils.forEachPreferredTag('author', (jsdocParameter, targetTagName) => {\n    const author = /** @type {string} */ (\n      utils.getTagDescription(jsdocParameter)\n    ).trim();\n    if (!author) {\n      report(\n        `Missing JSDoc @${targetTagName} value.`,\n        null,\n        jsdocParameter,\n      );\n    } else if (allowedAuthors && !allowedAuthors.includes(author)) {\n      report(\n        `Invalid JSDoc @${targetTagName}: \"${utils.getTagDescription(jsdocParameter)}\"; expected one of ${allowedAuthors.join(', ')}.`,\n        null,\n        jsdocParameter,\n      );\n    }\n  });\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'This rule checks the values for a handful of tags: `@version`, `@since`, `@license` and `@author`.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-values.md#repos-sticky-header',\n    },\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          allowedAuthors: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          allowedLicenses: {\n            anyOf: [\n              {\n                items: {\n                  type: 'string',\n                },\n                type: 'array',\n              },\n              {\n                type: 'boolean',\n              },\n            ],\n          },\n          licensePattern: {\n            type: 'string',\n          },\n          numericOnlyVariation: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}