(self.webpackChunkit_stater = self.webpackChunkit_stater || []).push([
  ['assets_javascripts_components_code-tabs_js'],
  {
    './assets/javascripts/components/code-tabs.js': function (
      __unused_webpack_module,
      __webpack_exports__,
      __webpack_require__,
    ) {
      eval(
        "{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/es/index.js\");\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  // Initialize every snippet block independently\r\n  const initHljsSnippet = (root) => {\r\n    const tabs = root.querySelectorAll('.hljs-snippet__tab');\r\n    const panels = root.querySelectorAll('.hljs-snippet__panel');\r\n    const copyBtn = root.querySelector('.hljs-snippet__copy');\r\n\r\n    // Highlight all panels once on load\r\n    panels.forEach((p) => highlight_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].highlightElement(p.querySelector('code')));\r\n\r\n    // Activate a specific language\r\n    const activate = (lang) => {\r\n      // Tabs\r\n      tabs.forEach((btn) => {\r\n        const active = btn.dataset.lang === lang;\r\n        btn.classList.toggle('is-active', active);\r\n        btn.setAttribute('aria-selected', String(active));\r\n      });\r\n\r\n      // Panels\r\n      panels.forEach((panel) => {\r\n        const show = panel.dataset.lang === lang;\r\n        panel.hidden = !show;\r\n      });\r\n    };\r\n\r\n    // Initial tab\r\n    const initial = root.dataset.initial || tabs[0]?.dataset.lang;\r\n    if (initial) activate(initial);\r\n\r\n    // Tab click handling\r\n    tabs.forEach((btn) => {\r\n      btn.addEventListener('click', () => activate(btn.dataset.lang));\r\n    });\r\n\r\n    // Copy to clipboard (with fallback)\r\n    const copyCurrent = async () => {\r\n      const current = [...panels].find((p) => !p.hidden);\r\n      if (!current) return;\r\n      const code = current.querySelector('code').innerText;\r\n\r\n      const done = () => {\r\n        const previous = copyBtn.textContent;\r\n        copyBtn.textContent = 'âœ…';\r\n        setTimeout(() => (copyBtn.textContent = previous), 1200);\r\n      };\r\n\r\n      try {\r\n        await navigator.clipboard.writeText(code);\r\n        done();\r\n      } catch (_) {\r\n        // Fallback for older browsers\r\n        const area = document.createElement('textarea');\r\n        area.value = code;\r\n        area.style.position = 'fixed';\r\n        area.style.opacity = '0';\r\n        document.body.appendChild(area);\r\n        area.focus();\r\n        area.select();\r\n        try {\r\n          document.execCommand('copy');\r\n        } catch (e) {\r\n        }\r\n        document.body.removeChild(area);\r\n        done();\r\n      }\r\n    };\r\n\r\n    if (copyBtn) {\r\n      copyBtn.addEventListener('click', copyCurrent);\r\n    }\r\n  };\r\n\r\n  // Boot all snippet instances on the page\r\n  document.querySelectorAll('.hljs-snippet').forEach(initHljsSnippet);\r\n});\r\n\n\n//# sourceURL=webpack://it-stater/./assets/javascripts/components/code-tabs.js?\n}",
      );
    },
  },
]);
